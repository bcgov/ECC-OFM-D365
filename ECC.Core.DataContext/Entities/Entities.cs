#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ECC.Core.DataContext
{


    /// <summary>
    /// Organization or Facility that represents a Childcare Provider
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("account")]
    public partial class Account : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the account entity
        /// </summary>
        public partial class Fields
        {
            public const string Account_Email_EmailSender = "Account_Email_EmailSender";
            public const string Account_Email_SendersAccount = "Account_Email_SendersAccount";
            public const string Account_Emails = "Account_Emails";
            public const string Referencingaccount_master_account = "account_master_account";
            public const string Referencingaccount_parent_account = "account_parent_account";
            public const string account_primary_contact = "account_primary_contact";
            public const string accountcategorycode = "accountcategorycode";
            public const string accountcategorycodename = "accountcategorycodename";
            public const string accountclassificationcode = "accountclassificationcode";
            public const string accountclassificationcodename = "accountclassificationcodename";
            public const string accountid = "accountid";
            public const string Id = "accountid";
            public const string accountnumber = "accountnumber";
            public const string accountratingcode = "accountratingcode";
            public const string accountratingcodename = "accountratingcodename";
            public const string address1_addressid = "address1_addressid";
            public const string address1_addresstypecode = "address1_addresstypecode";
            public const string address1_addresstypecodename = "address1_addresstypecodename";
            public const string address1_city = "address1_city";
            public const string address1_composite = "address1_composite";
            public const string address1_country = "address1_country";
            public const string address1_county = "address1_county";
            public const string address1_fax = "address1_fax";
            public const string address1_freighttermscode = "address1_freighttermscode";
            public const string address1_freighttermscodename = "address1_freighttermscodename";
            public const string address1_latitude = "address1_latitude";
            public const string address1_line1 = "address1_line1";
            public const string address1_line2 = "address1_line2";
            public const string address1_line3 = "address1_line3";
            public const string address1_longitude = "address1_longitude";
            public const string address1_name = "address1_name";
            public const string address1_postalcode = "address1_postalcode";
            public const string address1_postofficebox = "address1_postofficebox";
            public const string address1_primarycontactname = "address1_primarycontactname";
            public const string address1_shippingmethodcode = "address1_shippingmethodcode";
            public const string address1_shippingmethodcodename = "address1_shippingmethodcodename";
            public const string address1_stateorprovince = "address1_stateorprovince";
            public const string address1_telephone1 = "address1_telephone1";
            public const string address1_telephone2 = "address1_telephone2";
            public const string address1_telephone3 = "address1_telephone3";
            public const string address1_upszone = "address1_upszone";
            public const string address1_utcoffset = "address1_utcoffset";
            public const string address2_addressid = "address2_addressid";
            public const string address2_addresstypecode = "address2_addresstypecode";
            public const string address2_addresstypecodename = "address2_addresstypecodename";
            public const string address2_city = "address2_city";
            public const string address2_composite = "address2_composite";
            public const string address2_country = "address2_country";
            public const string address2_county = "address2_county";
            public const string address2_fax = "address2_fax";
            public const string address2_freighttermscode = "address2_freighttermscode";
            public const string address2_freighttermscodename = "address2_freighttermscodename";
            public const string address2_latitude = "address2_latitude";
            public const string address2_line1 = "address2_line1";
            public const string address2_line2 = "address2_line2";
            public const string address2_line3 = "address2_line3";
            public const string address2_longitude = "address2_longitude";
            public const string address2_name = "address2_name";
            public const string address2_postalcode = "address2_postalcode";
            public const string address2_postofficebox = "address2_postofficebox";
            public const string address2_primarycontactname = "address2_primarycontactname";
            public const string address2_shippingmethodcode = "address2_shippingmethodcode";
            public const string address2_shippingmethodcodename = "address2_shippingmethodcodename";
            public const string address2_stateorprovince = "address2_stateorprovince";
            public const string address2_telephone1 = "address2_telephone1";
            public const string address2_telephone2 = "address2_telephone2";
            public const string address2_telephone3 = "address2_telephone3";
            public const string address2_upszone = "address2_upszone";
            public const string address2_utcoffset = "address2_utcoffset";
            public const string adx_createdbyipaddress = "adx_createdbyipaddress";
            public const string adx_createdbyusername = "adx_createdbyusername";
            public const string adx_modifiedbyipaddress = "adx_modifiedbyipaddress";
            public const string adx_modifiedbyusername = "adx_modifiedbyusername";
            public const string aging30 = "aging30";
            public const string aging30_base = "aging30_base";
            public const string aging60 = "aging60";
            public const string aging60_base = "aging60_base";
            public const string aging90 = "aging90";
            public const string aging90_base = "aging90_base";
            public const string businesstypecode = "businesstypecode";
            public const string businesstypecodename = "businesstypecodename";
            public const string ccof_accounttype = "ccof_accounttype";
            public const string ccof_accounttypename = "ccof_accounttypename";
            public const string ccof_approveduntil = "ccof_approveduntil";
            public const string ccof_bccorporateregistryname = "ccof_bccorporateregistryname";
            public const string ccof_bypass_goodstanding_check = "ccof_bypass_goodstanding_check";
            public const string ccof_bypass_goodstanding_check_reason = "ccof_bypass_goodstanding_check_reason";
            public const string ccof_bypass_goodstanding_checkname = "ccof_bypass_goodstanding_checkname";
            public const string ccof_consecutivestartdate = "ccof_consecutivestartdate";
            public const string ccof_contractstatus = "ccof_contractstatus";
            public const string ccof_contractstatusname = "ccof_contractstatusname";
            public const string ccof_doingbusinessas = "ccof_doingbusinessas";
            public const string ccof_duration = "ccof_duration";
            public const string ccof_duration_trigger_flow = "ccof_duration_trigger_flow";
            public const string ccof_everreceivedfundingundertheccofprogram = "ccof_everreceivedfundingundertheccofprogram";
            public const string ccof_everreceivedfundingundertheccofprogramname = "ccof_everreceivedfundingundertheccofprogramname";
            public const string ccof_facilityenddate = "ccof_facilityenddate";
            public const string ccof_facilitylicencenumber = "ccof_facilitylicencenumber";
            public const string ccof_facilityreceived_ccof_funding = "ccof_facilityreceived_ccof_funding";
            public const string ccof_facilitystartdate = "ccof_facilitystartdate";
            public const string ccof_facilitystatus = "ccof_facilitystatus";
            public const string ccof_facilitystatusname = "ccof_facilitystatusname";
            public const string ccof_formcomplete = "ccof_formcomplete";
            public const string ccof_formcompletename = "ccof_formcompletename";
            public const string ccof_fundingagreementnumber = "ccof_fundingagreementnumber";
            public const string ccof_good_standing_indicator_ccof = "ccof_good_standing_indicator_ccof";
            public const string ccof_good_standing_status = "ccof_good_standing_status";
            public const string ccof_good_standing_statusname = "ccof_good_standing_statusname";
            public const string ccof_healthauthority = "ccof_healthauthority";
            public const string ccof_healthauthorityname = "ccof_healthauthorityname";
            public const string ccof_instructionnumber = "ccof_instructionnumber";
            public const string ccof_is_facility_address_entered_manually = "ccof_is_facility_address_entered_manually";
            public const string ccof_is_facility_address_entered_manuallyname = "ccof_is_facility_address_entered_manuallyname";
            public const string ccof_is_facility_address_same_as_org = "ccof_is_facility_address_same_as_org";
            public const string ccof_is_facility_address_same_as_orgname = "ccof_is_facility_address_same_as_orgname";
            public const string ccof_is_facility_contact_same_as_org = "ccof_is_facility_contact_same_as_org";
            public const string ccof_is_facility_contact_same_as_orgname = "ccof_is_facility_contact_same_as_orgname";
            public const string ccof_is_mailing_address_same = "ccof_is_mailing_address_same";
            public const string ccof_is_mailing_address_samename = "ccof_is_mailing_address_samename";
            public const string ccof_is_org_mailing_address_entered_manually = "ccof_is_org_mailing_address_entered_manually";
            public const string ccof_is_org_mailing_address_entered_manuallyname = "ccof_is_org_mailing_address_entered_manuallyname";
            public const string ccof_is_org_street_address_entered_manually = "ccof_is_org_street_address_entered_manually";
            public const string ccof_is_org_street_address_entered_manuallyname = "ccof_is_org_street_address_entered_manuallyname";
            public const string ccof_licensestartdate = "ccof_licensestartdate";
            public const string ccof_managerdisabled = "ccof_managerdisabled";
            public const string ccof_managerdisabledname = "ccof_managerdisabledname";
            public const string ccof_maximumcapacity = "ccof_maximumcapacity";
            public const string ccof_numberoffacilities = "ccof_numberoffacilities";
            public const string ccof_numberoffacilities_date = "ccof_numberoffacilities_date";
            public const string ccof_numberoffacilities_state = "ccof_numberoffacilities_state";
            public const string ccof_organizationid = "ccof_organizationid";
            public const string ccof_organizationname = "ccof_organizationname";
            public const string ccof_orgmailingaddress_autocomplete = "ccof_orgmailingaddress_autocomplete";
            public const string ccof_orgmailingaddress_autocompletename = "ccof_orgmailingaddress_autocompletename";
            public const string ccof_partner1firstname = "ccof_partner1firstname";
            public const string ccof_partner1lastname = "ccof_partner1lastname";
            public const string ccof_partner1middlename = "ccof_partner1middlename";
            public const string ccof_partner2firstname = "ccof_partner2firstname";
            public const string ccof_partner2lastname = "ccof_partner2lastname";
            public const string ccof_partner2middlename = "ccof_partner2middlename";
            public const string ccof_partner3firstname = "ccof_partner3firstname";
            public const string ccof_partner3lastname = "ccof_partner3lastname";
            public const string ccof_partner3middlename = "ccof_partner3middlename";
            public const string ccof_partner4firstname = "ccof_partner4firstname";
            public const string ccof_partner4lastname = "ccof_partner4lastname";
            public const string ccof_partner4middlename = "ccof_partner4middlename";
            public const string ccof_position = "ccof_position";
            public const string ccof_primarybusinessbceid = "ccof_primarybusinessbceid";
            public const string ccof_providername = "ccof_providername";
            public const string ccof_trigger_monthly_check = "ccof_trigger_monthly_check";
            public const string ccof_trigger_monthly_checkname = "ccof_trigger_monthly_checkname";
            public const string ccof_typeoforganization = "ccof_typeoforganization";
            public const string ccof_typeoforganizationname = "ccof_typeoforganizationname";
            public const string ccof_unreadactionmessages = "ccof_unreadactionmessages";
            public const string ccof_unreadactionmessages_date = "ccof_unreadactionmessages_date";
            public const string ccof_unreadactionmessages_state = "ccof_unreadactionmessages_state";
            public const string ccof_validated_on = "ccof_validated_on";
            public const string contact_customer_accounts = "contact_customer_accounts";
            public const string createdby = "createdby";
            public const string createdbyexternalparty = "createdbyexternalparty";
            public const string createdbyexternalpartyname = "createdbyexternalpartyname";
            public const string createdbyexternalpartyyominame = "createdbyexternalpartyyominame";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string creditlimit = "creditlimit";
            public const string creditlimit_base = "creditlimit_base";
            public const string creditonhold = "creditonhold";
            public const string creditonholdname = "creditonholdname";
            public const string customersizecode = "customersizecode";
            public const string customersizecodename = "customersizecodename";
            public const string customertypecode = "customertypecode";
            public const string customertypecodename = "customertypecodename";
            public const string defaultpricelevelid = "defaultpricelevelid";
            public const string defaultpricelevelidname = "defaultpricelevelidname";
            public const string description = "description";
            public const string donotbulkemail = "donotbulkemail";
            public const string donotbulkemailname = "donotbulkemailname";
            public const string donotbulkpostalmail = "donotbulkpostalmail";
            public const string donotbulkpostalmailname = "donotbulkpostalmailname";
            public const string donotemail = "donotemail";
            public const string donotemailname = "donotemailname";
            public const string donotfax = "donotfax";
            public const string donotfaxname = "donotfaxname";
            public const string donotphone = "donotphone";
            public const string donotphonename = "donotphonename";
            public const string donotpostalmail = "donotpostalmail";
            public const string donotpostalmailname = "donotpostalmailname";
            public const string donotsendmarketingmaterialname = "donotsendmarketingmaterialname";
            public const string donotsendmm = "donotsendmm";
            public const string emailaddress1 = "emailaddress1";
            public const string emailaddress2 = "emailaddress2";
            public const string emailaddress3 = "emailaddress3";
            public const string entityimage = "entityimage";
            public const string entityimage_timestamp = "entityimage_timestamp";
            public const string entityimage_url = "entityimage_url";
            public const string entityimageid = "entityimageid";
            public const string exchangerate = "exchangerate";
            public const string fax = "fax";
            public const string followemail = "followemail";
            public const string followemailname = "followemailname";
            public const string ftpsiteurl = "ftpsiteurl";
            public const string importsequencenumber = "importsequencenumber";
            public const string industrycode = "industrycode";
            public const string industrycodename = "industrycodename";
            public const string isprivatename = "isprivatename";
            public const string lastonholdtime = "lastonholdtime";
            public const string lastusedincampaign = "lastusedincampaign";
            public const string marketcap = "marketcap";
            public const string marketcap_base = "marketcap_base";
            public const string marketingonly = "marketingonly";
            public const string marketingonlyname = "marketingonlyname";
            public const string masteraccountidname = "masteraccountidname";
            public const string masteraccountidyominame = "masteraccountidyominame";
            public const string masterid = "masterid";
            public const string merged = "merged";
            public const string mergedname = "mergedname";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyexternalparty = "modifiedbyexternalparty";
            public const string modifiedbyexternalpartyname = "modifiedbyexternalpartyname";
            public const string modifiedbyexternalpartyyominame = "modifiedbyexternalpartyyominame";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string Referencingmsa_account_managingpartner = "msa_account_managingpartner";
            public const string msa_contact_managingpartner = "msa_contact_managingpartner";
            public const string msa_managingpartnerid = "msa_managingpartnerid";
            public const string msa_managingpartneridname = "msa_managingpartneridname";
            public const string msa_managingpartneridyominame = "msa_managingpartneridyominame";
            public const string Referencingmsdyn_account_account_BillingAccount = "msdyn_account_account_BillingAccount";
            public const string msdyn_accountkpiid = "msdyn_accountkpiid";
            public const string msdyn_accountkpiidname = "msdyn_accountkpiidname";
            public const string msdyn_billingaccount = "msdyn_billingaccount";
            public const string msdyn_billingaccountname = "msdyn_billingaccountname";
            public const string msdyn_billingaccountyominame = "msdyn_billingaccountyominame";
            public const string msdyn_gdproptout = "msdyn_gdproptout";
            public const string msdyn_gdproptoutname = "msdyn_gdproptoutname";
            public const string msdyn_preferredresource = "msdyn_preferredresource";
            public const string msdyn_preferredresourcename = "msdyn_preferredresourcename";
            public const string msdyn_primarytimezone = "msdyn_primarytimezone";
            public const string msdyn_salesaccelerationinsightid = "msdyn_salesaccelerationinsightid";
            public const string msdyn_salesaccelerationinsightidname = "msdyn_salesaccelerationinsightidname";
            public const string msdyn_salestaxcode = "msdyn_salestaxcode";
            public const string msdyn_salestaxcodename = "msdyn_salestaxcodename";
            public const string msdyn_segmentid = "msdyn_segmentid";
            public const string msdyn_segmentidname = "msdyn_segmentidname";
            public const string msdyn_serviceterritory = "msdyn_serviceterritory";
            public const string msdyn_serviceterritoryname = "msdyn_serviceterritoryname";
            public const string msdyn_taxexempt = "msdyn_taxexempt";
            public const string msdyn_taxexemptname = "msdyn_taxexemptname";
            public const string msdyn_taxexemptnumber = "msdyn_taxexemptnumber";
            public const string msdyn_travelcharge = "msdyn_travelcharge";
            public const string msdyn_travelcharge_base = "msdyn_travelcharge_base";
            public const string msdyn_travelchargetype = "msdyn_travelchargetype";
            public const string msdyn_travelchargetypename = "msdyn_travelchargetypename";
            public const string msdyn_workhourtemplate = "msdyn_workhourtemplate";
            public const string msdyn_workhourtemplatename = "msdyn_workhourtemplatename";
            public const string msdyn_workorderinstructions = "msdyn_workorderinstructions";
            public const string msft_datastate = "msft_datastate";
            public const string msft_datastatename = "msft_datastatename";
            public const string name = "name";
            public const string numberofemployees = "numberofemployees";
            public const string ofm_accb_providerid = "ofm_accb_providerid";
            public const string ofm_additional_address10 = "ofm_additional_address10";
            public const string ofm_additional_address10_legal_description = "ofm_additional_address10_legal_description";
            public const string ofm_additional_address10name = "ofm_additional_address10name";
            public const string ofm_additional_address11 = "ofm_additional_address11";
            public const string ofm_additional_address11_legal_description = "ofm_additional_address11_legal_description";
            public const string ofm_additional_address11name = "ofm_additional_address11name";
            public const string ofm_additional_address12 = "ofm_additional_address12";
            public const string ofm_additional_address12_legal_description = "ofm_additional_address12_legal_description";
            public const string ofm_additional_address12name = "ofm_additional_address12name";
            public const string ofm_additional_address13 = "ofm_additional_address13";
            public const string ofm_additional_address13_legal_description = "ofm_additional_address13_legal_description";
            public const string ofm_additional_address13name = "ofm_additional_address13name";
            public const string ofm_additional_address3 = "ofm_additional_address3";
            public const string ofm_additional_address3_legal_description = "ofm_additional_address3_legal_description";
            public const string ofm_additional_address3name = "ofm_additional_address3name";
            public const string ofm_additional_address4 = "ofm_additional_address4";
            public const string ofm_additional_address4_legal_description = "ofm_additional_address4_legal_description";
            public const string ofm_additional_address4name = "ofm_additional_address4name";
            public const string ofm_additional_address5 = "ofm_additional_address5";
            public const string ofm_additional_address5_legal_description = "ofm_additional_address5_legal_description";
            public const string ofm_additional_address5name = "ofm_additional_address5name";
            public const string ofm_additional_address6 = "ofm_additional_address6";
            public const string ofm_additional_address6_legal_description = "ofm_additional_address6_legal_description";
            public const string ofm_additional_address6name = "ofm_additional_address6name";
            public const string ofm_additional_address7 = "ofm_additional_address7";
            public const string ofm_additional_address7_legal_description = "ofm_additional_address7_legal_description";
            public const string ofm_additional_address7name = "ofm_additional_address7name";
            public const string ofm_additional_address8 = "ofm_additional_address8";
            public const string ofm_additional_address8_legal_description = "ofm_additional_address8_legal_description";
            public const string ofm_additional_address8name = "ofm_additional_address8name";
            public const string ofm_additional_address9 = "ofm_additional_address9";
            public const string ofm_additional_address9_legal_description = "ofm_additional_address9_legal_description";
            public const string ofm_additional_address9name = "ofm_additional_address9name";
            public const string ofm_address1_legal_description = "ofm_address1_legal_description";
            public const string ofm_address10_city = "ofm_address10_city";
            public const string ofm_address10_line1 = "ofm_address10_line1";
            public const string ofm_address10_line2 = "ofm_address10_line2";
            public const string ofm_address10_postal_code = "ofm_address10_postal_code";
            public const string ofm_address10_province = "ofm_address10_province";
            public const string ofm_address11_city = "ofm_address11_city";
            public const string ofm_address11_line1 = "ofm_address11_line1";
            public const string ofm_address11_line2 = "ofm_address11_line2";
            public const string ofm_address11_postal_code = "ofm_address11_postal_code";
            public const string ofm_address11_province = "ofm_address11_province";
            public const string ofm_address12_city = "ofm_address12_city";
            public const string ofm_address12_line1 = "ofm_address12_line1";
            public const string ofm_address12_line2 = "ofm_address12_line2";
            public const string ofm_address12_postal_code = "ofm_address12_postal_code";
            public const string ofm_address12_province = "ofm_address12_province";
            public const string ofm_address13_city = "ofm_address13_city";
            public const string ofm_address13_line1 = "ofm_address13_line1";
            public const string ofm_address13_line2 = "ofm_address13_line2";
            public const string ofm_address13_postal_code = "ofm_address13_postal_code";
            public const string ofm_address13_province = "ofm_address13_province";
            public const string ofm_address3_city = "ofm_address3_city";
            public const string ofm_address3_line1 = "ofm_address3_line1";
            public const string ofm_address3_line2 = "ofm_address3_line2";
            public const string ofm_address3_postal_code = "ofm_address3_postal_code";
            public const string ofm_address3_province = "ofm_address3_province";
            public const string ofm_address4_city = "ofm_address4_city";
            public const string ofm_address4_line1 = "ofm_address4_line1";
            public const string ofm_address4_line2 = "ofm_address4_line2";
            public const string ofm_address4_postal_code = "ofm_address4_postal_code";
            public const string ofm_address4_province = "ofm_address4_province";
            public const string ofm_address5_city = "ofm_address5_city";
            public const string ofm_address5_line1 = "ofm_address5_line1";
            public const string ofm_address5_line2 = "ofm_address5_line2";
            public const string ofm_address5_postal_code = "ofm_address5_postal_code";
            public const string ofm_address5_province = "ofm_address5_province";
            public const string ofm_address6_city = "ofm_address6_city";
            public const string ofm_address6_line1 = "ofm_address6_line1";
            public const string ofm_address6_line2 = "ofm_address6_line2";
            public const string ofm_address6_postal_code = "ofm_address6_postal_code";
            public const string ofm_address6_province = "ofm_address6_province";
            public const string ofm_address7_city = "ofm_address7_city";
            public const string ofm_address7_line1 = "ofm_address7_line1";
            public const string ofm_address7_line2 = "ofm_address7_line2";
            public const string ofm_address7_postal_code = "ofm_address7_postal_code";
            public const string ofm_address7_province = "ofm_address7_province";
            public const string ofm_address8_city = "ofm_address8_city";
            public const string ofm_address8_line1 = "ofm_address8_line1";
            public const string ofm_address8_line2 = "ofm_address8_line2";
            public const string ofm_address8_postal_code = "ofm_address8_postal_code";
            public const string ofm_address8_province = "ofm_address8_province";
            public const string ofm_address9_city = "ofm_address9_city";
            public const string ofm_address9_line1 = "ofm_address9_line1";
            public const string ofm_address9_line2 = "ofm_address9_line2";
            public const string ofm_address9_postal_code = "ofm_address9_postal_code";
            public const string ofm_address9_province = "ofm_address9_province";
            public const string ofm_board_members_elected_unpaid = "ofm_board_members_elected_unpaid";
            public const string ofm_board_members_elected_unpaidname = "ofm_board_members_elected_unpaidname";
            public const string ofm_board_members_residents_of_bc = "ofm_board_members_residents_of_bc";
            public const string ofm_board_members_residents_of_bcname = "ofm_board_members_residents_of_bcname";
            public const string ofm_board_members_selected_membership = "ofm_board_members_selected_membership";
            public const string ofm_board_members_selected_membershipname = "ofm_board_members_selected_membershipname";
            public const string ofm_business_bceid_facility = "ofm_business_bceid_facility";
            public const string ofm_business_number = "ofm_business_number";
            public const string ofm_business_type = "ofm_business_type";
            public const string ofm_business_typename = "ofm_business_typename";
            public const string ofm_bypass_bc_registry_good_standing = "ofm_bypass_bc_registry_good_standing";
            public const string ofm_bypass_bc_registry_good_standingname = "ofm_bypass_bc_registry_good_standingname";
            public const string ofm_cas_location_number = "ofm_cas_location_number";
            public const string ofm_cas_vendor_number = "ofm_cas_vendor_number";
            public const string ofm_ccof_requirement = "ofm_ccof_requirement";
            public const string ofm_ccof_requirementname = "ofm_ccof_requirementname";
            public const string ofm_cohort = "ofm_cohort";
            public const string ofm_cohortid = "ofm_cohortid";
            public const string ofm_cohortidname = "ofm_cohortidname";
            public const string ofm_contact_account = "ofm_contact_account";
            public const string ofm_date_of_incorporation = "ofm_date_of_incorporation";
            public const string ofm_document_account = "ofm_document_account";
            public const string ofm_doing_business_as = "ofm_doing_business_as";
            public const string ofm_enrollment_date = "ofm_enrollment_date";
            public const string ofm_facility_application = "ofm_facility_application";
            public const string ofm_facility_facilityintake = "ofm_facility_facilityintake";
            public const string ofm_facility_licence = "ofm_facility_licence";
            public const string ofm_facility_request_facility = "ofm_facility_request_facility";
            public const string ofm_facility_review_complete = "ofm_facility_review_complete";
            public const string ofm_facility_review_completename = "ofm_facility_review_completename";
            public const string ofm_facility_survey_response = "ofm_facility_survey_response";
            public const string ofm_fiscal_year_end = "ofm_fiscal_year_end";
            public const string ofm_flag_vau_review_underway = "ofm_flag_vau_review_underway";
            public const string ofm_flag_vau_review_underwayname = "ofm_flag_vau_review_underwayname";
            public const string ofm_funding_facility_account = "ofm_funding_facility_account";
            public const string ofm_good_standing_indicator = "ofm_good_standing_indicator";
            public const string ofm_good_standing_status = "ofm_good_standing_status";
            public const string ofm_good_standing_statusname = "ofm_good_standing_statusname";
            public const string ofm_good_standing_validated_on = "ofm_good_standing_validated_on";
            public const string ofm_in_municipal_community_center = "ofm_in_municipal_community_center";
            public const string ofm_in_municipal_community_centername = "ofm_in_municipal_community_centername";
            public const string ofm_inclusion_policy = "ofm_inclusion_policy";
            public const string ofm_inclusion_policyname = "ofm_inclusion_policyname";
            public const string ofm_incorporation_number = "ofm_incorporation_number";
            public const string ofm_indigenous_led = "ofm_indigenous_led";
            public const string ofm_indigenous_ledname = "ofm_indigenous_ledname";
            public const string ofm_integrationlog_provider = "ofm_integrationlog_provider";
            public const string ofm_is_mailing_address_different = "ofm_is_mailing_address_different";
            public const string ofm_is_mailing_address_differentname = "ofm_is_mailing_address_differentname";
            public const string ofm_manualreviewcomments = "ofm_manualreviewcomments";
            public const string ofm_now_calculated_field = "ofm_now_calculated_field";
            public const string ofm_on_k12_school_grounds_or_board_affiliated = "ofm_on_k12_school_grounds_or_board_affiliated";
            public const string ofm_on_k12_school_grounds_or_board_affiliatedname = "ofm_on_k12_school_grounds_or_board_affiliatedname";
            public const string ofm_on_reserve = "ofm_on_reserve";
            public const string ofm_on_reservename = "ofm_on_reservename";
            public const string ofm_open_membership = "ofm_open_membership";
            public const string ofm_open_membershipname = "ofm_open_membershipname";
            public const string ofm_organization_application = "ofm_organization_application";
            public const string ofm_organization_legal_name = "ofm_organization_legal_name";
            public const string ofm_organization_payment = "ofm_organization_payment";
            public const string ofm_organization_standing_history = "ofm_organization_standing_history";
            public const string ofm_ownership = "ofm_ownership";
            public const string ofm_ownershipname = "ofm_ownershipname";
            public const string ofm_payment_facility_account = "ofm_payment_facility_account";
            public const string ofm_payment_manual_review = "ofm_payment_manual_review";
            public const string ofm_payment_manual_reviewname = "ofm_payment_manual_reviewname";
            public const string ofm_payment_method = "ofm_payment_method";
            public const string ofm_payment_methodname = "ofm_payment_methodname";
            public const string ofm_personal_residence = "ofm_personal_residence";
            public const string ofm_personal_residencename = "ofm_personal_residencename";
            public const string ofm_primarycontact = "ofm_primarycontact";
            public const string ofm_primarycontactname = "ofm_primarycontactname";
            public const string ofm_primarycontactyominame = "ofm_primarycontactyominame";
            public const string ofm_program = "ofm_program";
            public const string ofm_program_start_date = "ofm_program_start_date";
            public const string ofm_programname = "ofm_programname";
            public const string ofm_provider_type = "ofm_provider_type";
            public const string ofm_provider_typename = "ofm_provider_typename";
            public const string ofm_review_underway_banner = "ofm_review_underway_banner";
            public const string ofm_tdad_funding_agreement_number = "ofm_tdad_funding_agreement_number";
            public const string ofm_top_up_fund_facility = "ofm_top_up_fund_facility";
            public const string ofm_union_cssea = "ofm_union_cssea";
            public const string ofm_union_csseaname = "ofm_union_csseaname";
            public const string ofm_union_description = "ofm_union_description";
            public const string ofm_union_list = "ofm_union_list";
            public const string ofm_union_listname = "ofm_union_listname";
            public const string ofm_unionized = "ofm_unionized";
            public const string ofm_unionizedname = "ofm_unionizedname";
            public const string ofm_ypp_designation = "ofm_ypp_designation";
            public const string ofm_ypp_designationname = "ofm_ypp_designationname";
            public const string ofm_ypp_enrolled = "ofm_ypp_enrolled";
            public const string ofm_ypp_enrolledname = "ofm_ypp_enrolledname";
            public const string onholdtime = "onholdtime";
            public const string opendeals = "opendeals";
            public const string opendeals_date = "opendeals_date";
            public const string opendeals_state = "opendeals_state";
            public const string openrevenue = "openrevenue";
            public const string openrevenue_base = "openrevenue_base";
            public const string openrevenue_date = "openrevenue_date";
            public const string openrevenue_state = "openrevenue_state";
            public const string originatingleadid = "originatingleadid";
            public const string originatingleadidname = "originatingleadidname";
            public const string originatingleadidyominame = "originatingleadidyominame";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string ownershipcode = "ownershipcode";
            public const string ownershipcodename = "ownershipcodename";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string parentaccountid = "parentaccountid";
            public const string parentaccountidname = "parentaccountidname";
            public const string parentaccountidyominame = "parentaccountidyominame";
            public const string participatesinworkflow = "participatesinworkflow";
            public const string participatesinworkflowname = "participatesinworkflowname";
            public const string paymenttermscode = "paymenttermscode";
            public const string paymenttermscodename = "paymenttermscodename";
            public const string preferredappointmentdaycode = "preferredappointmentdaycode";
            public const string preferredappointmentdaycodename = "preferredappointmentdaycodename";
            public const string preferredappointmenttimecode = "preferredappointmenttimecode";
            public const string preferredappointmenttimecodename = "preferredappointmenttimecodename";
            public const string preferredcontactmethodcode = "preferredcontactmethodcode";
            public const string preferredcontactmethodcodename = "preferredcontactmethodcodename";
            public const string preferredequipmentid = "preferredequipmentid";
            public const string preferredequipmentidname = "preferredequipmentidname";
            public const string preferredserviceid = "preferredserviceid";
            public const string preferredserviceidname = "preferredserviceidname";
            public const string preferredsystemuserid = "preferredsystemuserid";
            public const string preferredsystemuseridname = "preferredsystemuseridname";
            public const string preferredsystemuseridyominame = "preferredsystemuseridyominame";
            public const string primarycontactid = "primarycontactid";
            public const string primarycontactidname = "primarycontactidname";
            public const string primarycontactidyominame = "primarycontactidyominame";
            public const string primarysatoriid = "primarysatoriid";
            public const string primarytwitterid = "primarytwitterid";
            public const string processid = "processid";
            public const string Referencedaccount_master_account = "Referencedaccount_master_account";
            public const string Referencedaccount_parent_account = "Referencedaccount_parent_account";
            public const string Referencedmsa_account_managingpartner = "Referencedmsa_account_managingpartner";
            public const string Referencedmsdyn_account_account_BillingAccount = "Referencedmsdyn_account_account_BillingAccount";
            public const string revenue = "revenue";
            public const string revenue_base = "revenue_base";
            public const string sharesoutstanding = "sharesoutstanding";
            public const string shippingmethodcode = "shippingmethodcode";
            public const string shippingmethodcodename = "shippingmethodcodename";
            public const string sic = "sic";
            public const string slaid = "slaid";
            public const string slainvokedid = "slainvokedid";
            public const string slainvokedidname = "slainvokedidname";
            public const string slaname = "slaname";
            public const string stageid = "stageid";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string stockexchange = "stockexchange";
            public const string team_accounts = "team_accounts";
            public const string teamsfollowed = "teamsfollowed";
            public const string telephone1 = "telephone1";
            public const string telephone2 = "telephone2";
            public const string telephone3 = "telephone3";
            public const string territorycode = "territorycode";
            public const string territorycodename = "territorycodename";
            public const string territoryid = "territoryid";
            public const string territoryidname = "territoryidname";
            public const string tickersymbol = "tickersymbol";
            public const string timespentbymeonemailandmeetings = "timespentbymeonemailandmeetings";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string transactioncurrencyid = "transactioncurrencyid";
            public const string transactioncurrencyidname = "transactioncurrencyidname";
            public const string traversedpath = "traversedpath";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
            public const string websiteurl = "websiteurl";
            public const string yominame = "yominame";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public Account(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public Account(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public Account(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "accountnumber";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public Account() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "accountid";

        public const string PrimaryNameAttribute = "name";

        public const string EntitySchemaName = "Account";

        public const string EntityLogicalName = "account";

        public const string EntityLogicalCollectionName = "accounts";

        public const string EntitySetName = "accounts";

        /// <summary>
        /// Select a category to indicate whether the customer account is standard or preferred.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountcategorycode")]
        public virtual Account_accountcategorycode? accountcategorycode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Account_accountcategorycode?)(EntityOptionSetEnum.GetEnum(this, "accountcategorycode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("accountcategorycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountcategorycodename")]
        public string accountcategorycodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("accountcategorycode"))
                {
                    return this.FormattedValues["accountcategorycode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select a classification code to indicate the potential value of the customer account based on the projected return on investment, cooperation level, sales cycle length or other criteria.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountclassificationcode")]
        public virtual Account_accountclassificationcode? accountclassificationcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Account_accountclassificationcode?)(EntityOptionSetEnum.GetEnum(this, "accountclassificationcode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("accountclassificationcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountclassificationcodename")]
        public string accountclassificationcodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("accountclassificationcode"))
                {
                    return this.FormattedValues["accountclassificationcode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier of the account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountid")]
        public System.Nullable<System.Guid> accountid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("accountid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("accountid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.accountid = value;
            }
        }

        /// <summary>
        /// Type an ID number or code for the account to quickly search and identify the account in system views.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountnumber")]
        public string accountnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("accountnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("accountnumber", value);
            }
        }

        /// <summary>
        /// Select a rating to indicate the value of the customer account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountratingcode")]
        public virtual Account_accountratingcode? accountratingcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Account_accountratingcode?)(EntityOptionSetEnum.GetEnum(this, "accountratingcode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("accountratingcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountratingcodename")]
        public string accountratingcodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("accountratingcode"))
                {
                    return this.FormattedValues["accountratingcode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for address 1.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_addressid")]
        public System.Nullable<System.Guid> address1_addressid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("address1_addressid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_addressid", value);
            }
        }

        /// <summary>
        /// Select the primary address type.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_addresstypecode")]
        public virtual Account_address1_addresstypecode? address1_addresstypecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Account_address1_addresstypecode?)(EntityOptionSetEnum.GetEnum(this, "address1_addresstypecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_addresstypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_addresstypecodename")]
        public string address1_addresstypecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("address1_addresstypecode"))
                {
                    return this.FormattedValues["address1_addresstypecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the city for the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_city")]
        public string address1_city
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_city");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_city", value);
            }
        }

        /// <summary>
        /// Shows the complete primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_composite")]
        public string address1_composite
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_composite");
            }
        }

        /// <summary>
        /// Type the country or region for the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_country")]
        public string address1_country
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_country");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_country", value);
            }
        }

        /// <summary>
        /// Type the county for the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_county")]
        public string address1_county
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_county");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_county", value);
            }
        }

        /// <summary>
        /// Type the fax number associated with the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_fax")]
        public string address1_fax
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_fax");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_fax", value);
            }
        }

        /// <summary>
        /// Select the freight terms for the primary address to make sure shipping orders are processed correctly.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_freighttermscode")]
        public virtual Account_address1_freighttermscode? address1_freighttermscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Account_address1_freighttermscode?)(EntityOptionSetEnum.GetEnum(this, "address1_freighttermscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_freighttermscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_freighttermscodename")]
        public string address1_freighttermscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("address1_freighttermscode"))
                {
                    return this.FormattedValues["address1_freighttermscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the latitude value for the primary address for use in mapping and other applications.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_latitude")]
        public System.Nullable<double> address1_latitude
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<double>>("address1_latitude");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_latitude", value);
            }
        }

        /// <summary>
        /// Type the first line of the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_line1")]
        public string address1_line1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_line1");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_line1", value);
            }
        }

        /// <summary>
        /// Type the second line of the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_line2")]
        public string address1_line2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_line2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_line2", value);
            }
        }

        /// <summary>
        /// Type the third line of the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_line3")]
        public string address1_line3
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_line3");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_line3", value);
            }
        }

        /// <summary>
        /// Type the longitude value for the primary address for use in mapping and other applications.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_longitude")]
        public System.Nullable<double> address1_longitude
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<double>>("address1_longitude");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_longitude", value);
            }
        }

        /// <summary>
        /// Type a descriptive name for the primary address, such as Corporate Headquarters.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_name")]
        public string address1_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_name", value);
            }
        }

        /// <summary>
        /// Type the ZIP Code or postal code for the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_postalcode")]
        public string address1_postalcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_postalcode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_postalcode", value);
            }
        }

        /// <summary>
        /// Type the post office box number of the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_postofficebox")]
        public string address1_postofficebox
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_postofficebox");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_postofficebox", value);
            }
        }

        /// <summary>
        /// Type the name of the main contact at the account's primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_primarycontactname")]
        public string address1_primarycontactname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_primarycontactname");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_primarycontactname", value);
            }
        }

        /// <summary>
        /// Select a shipping method for deliveries sent to this address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_shippingmethodcode")]
        public virtual Account_address1_shippingmethodcode? address1_shippingmethodcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Account_address1_shippingmethodcode?)(EntityOptionSetEnum.GetEnum(this, "address1_shippingmethodcode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_shippingmethodcodename")]
        public string address1_shippingmethodcodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("address1_shippingmethodcode"))
                {
                    return this.FormattedValues["address1_shippingmethodcode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the state or province of the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_stateorprovince")]
        public string address1_stateorprovince
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_stateorprovince");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_stateorprovince", value);
            }
        }

        /// <summary>
        /// Type the main phone number associated with the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_telephone1")]
        public string address1_telephone1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_telephone1");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_telephone1", value);
            }
        }

        /// <summary>
        /// Type a second phone number associated with the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_telephone2")]
        public string address1_telephone2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_telephone2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_telephone2", value);
            }
        }

        /// <summary>
        /// Type a third phone number associated with the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_telephone3")]
        public string address1_telephone3
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_telephone3");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_telephone3", value);
            }
        }

        /// <summary>
        /// Type the UPS zone of the primary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_upszone")]
        public string address1_upszone
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_upszone");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_upszone", value);
            }
        }

        /// <summary>
        /// Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_utcoffset")]
        public System.Nullable<int> address1_utcoffset
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("address1_utcoffset");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_utcoffset", value);
            }
        }

        /// <summary>
        /// Unique identifier for address 2.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_addressid")]
        public System.Nullable<System.Guid> address2_addressid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("address2_addressid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_addressid", value);
            }
        }

        /// <summary>
        /// Select the secondary address type.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_addresstypecode")]
        public virtual Account_address2_addresstypecode? address2_addresstypecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Account_address2_addresstypecode?)(EntityOptionSetEnum.GetEnum(this, "address2_addresstypecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_addresstypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_addresstypecodename")]
        public string address2_addresstypecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("address2_addresstypecode"))
                {
                    return this.FormattedValues["address2_addresstypecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the city for the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_city")]
        public string address2_city
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_city");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_city", value);
            }
        }

        /// <summary>
        /// Shows the complete secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_composite")]
        public string address2_composite
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_composite");
            }
        }

        /// <summary>
        /// Type the country or region for the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_country")]
        public string address2_country
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_country");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_country", value);
            }
        }

        /// <summary>
        /// Type the county for the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_county")]
        public string address2_county
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_county");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_county", value);
            }
        }

        /// <summary>
        /// Type the fax number associated with the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_fax")]
        public string address2_fax
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_fax");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_fax", value);
            }
        }

        /// <summary>
        /// Select the freight terms for the secondary address to make sure shipping orders are processed correctly.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_freighttermscode")]
        public virtual Account_address2_freighttermscode? address2_freighttermscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Account_address2_freighttermscode?)(EntityOptionSetEnum.GetEnum(this, "address2_freighttermscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_freighttermscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_freighttermscodename")]
        public string address2_freighttermscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("address2_freighttermscode"))
                {
                    return this.FormattedValues["address2_freighttermscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the latitude value for the secondary address for use in mapping and other applications.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_latitude")]
        public System.Nullable<double> address2_latitude
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<double>>("address2_latitude");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_latitude", value);
            }
        }

        /// <summary>
        /// Type the first line of the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_line1")]
        public string address2_line1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_line1");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_line1", value);
            }
        }

        /// <summary>
        /// Type the second line of the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_line2")]
        public string address2_line2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_line2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_line2", value);
            }
        }

        /// <summary>
        /// Type the third line of the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_line3")]
        public string address2_line3
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_line3");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_line3", value);
            }
        }

        /// <summary>
        /// Type the longitude value for the secondary address for use in mapping and other applications.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_longitude")]
        public System.Nullable<double> address2_longitude
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<double>>("address2_longitude");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_longitude", value);
            }
        }

        /// <summary>
        /// Type a descriptive name for the secondary address, such as Corporate Headquarters.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_name")]
        public string address2_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_name", value);
            }
        }

        /// <summary>
        /// Type the ZIP Code or postal code for the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_postalcode")]
        public string address2_postalcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_postalcode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_postalcode", value);
            }
        }

        /// <summary>
        /// Type the post office box number of the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_postofficebox")]
        public string address2_postofficebox
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_postofficebox");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_postofficebox", value);
            }
        }

        /// <summary>
        /// Type the name of the main contact at the account's secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_primarycontactname")]
        public string address2_primarycontactname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_primarycontactname");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_primarycontactname", value);
            }
        }

        /// <summary>
        /// Select a shipping method for deliveries sent to this address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_shippingmethodcode")]
        public virtual Account_address2_shippingmethodcode? address2_shippingmethodcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Account_address2_shippingmethodcode?)(EntityOptionSetEnum.GetEnum(this, "address2_shippingmethodcode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_shippingmethodcodename")]
        public string address2_shippingmethodcodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("address2_shippingmethodcode"))
                {
                    return this.FormattedValues["address2_shippingmethodcode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the state or province of the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_stateorprovince")]
        public string address2_stateorprovince
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_stateorprovince");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_stateorprovince", value);
            }
        }

        /// <summary>
        /// Type the main phone number associated with the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_telephone1")]
        public string address2_telephone1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_telephone1");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_telephone1", value);
            }
        }

        /// <summary>
        /// Type a second phone number associated with the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_telephone2")]
        public string address2_telephone2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_telephone2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_telephone2", value);
            }
        }

        /// <summary>
        /// Type a third phone number associated with the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_telephone3")]
        public string address2_telephone3
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_telephone3");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_telephone3", value);
            }
        }

        /// <summary>
        /// Type the UPS zone of the secondary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_upszone")]
        public string address2_upszone
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_upszone");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_upszone", value);
            }
        }

        /// <summary>
        /// Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_utcoffset")]
        public System.Nullable<int> address2_utcoffset
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("address2_utcoffset");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_utcoffset", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_createdbyipaddress")]
        public string adx_createdbyipaddress
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("adx_createdbyipaddress");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_createdbyipaddress", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_createdbyusername")]
        public string adx_createdbyusername
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("adx_createdbyusername");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_createdbyusername", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_modifiedbyipaddress")]
        public string adx_modifiedbyipaddress
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("adx_modifiedbyipaddress");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_modifiedbyipaddress", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_modifiedbyusername")]
        public string adx_modifiedbyusername
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("adx_modifiedbyusername");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_modifiedbyusername", value);
            }
        }

        /// <summary>
        /// For system use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging30")]
        public Microsoft.Xrm.Sdk.Money aging30
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging30");
            }
        }

        /// <summary>
        /// The base currency equivalent of the aging 30 field.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging30_base")]
        public Microsoft.Xrm.Sdk.Money aging30_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging30_base");
            }
        }

        /// <summary>
        /// For system use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging60")]
        public Microsoft.Xrm.Sdk.Money aging60
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging60");
            }
        }

        /// <summary>
        /// The base currency equivalent of the aging 60 field.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging60_base")]
        public Microsoft.Xrm.Sdk.Money aging60_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging60_base");
            }
        }

        /// <summary>
        /// For system use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging90")]
        public Microsoft.Xrm.Sdk.Money aging90
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging90");
            }
        }

        /// <summary>
        /// The base currency equivalent of the aging 90 field.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging90_base")]
        public Microsoft.Xrm.Sdk.Money aging90_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging90_base");
            }
        }

        /// <summary>
        /// Select the legal designation or other business type of the account for contracts or reporting purposes.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businesstypecode")]
        public virtual Account_businesstypecode? businesstypecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Account_businesstypecode?)(EntityOptionSetEnum.GetEnum(this, "businesstypecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("businesstypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businesstypecodename")]
        public string businesstypecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("businesstypecode"))
                {
                    return this.FormattedValues["businesstypecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_accounttype")]
        public virtual ccof_AccountType? ccof_accounttype
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ccof_AccountType?)(EntityOptionSetEnum.GetEnum(this, "ccof_accounttype")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_accounttype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_accounttypename")]
        public string ccof_accounttypename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ccof_accounttype"))
                {
                    return this.FormattedValues["ccof_accounttype"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_approveduntil")]
        public System.Nullable<System.DateTime> ccof_approveduntil
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_approveduntil");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_approveduntil", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_bccorporateregistryname")]
        public string ccof_bccorporateregistryname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_bccorporateregistryname");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_bccorporateregistryname", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_bypass_goodstanding_check")]
        public System.Nullable<bool> ccof_bypass_goodstanding_check
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ccof_bypass_goodstanding_check");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_bypass_goodstanding_check", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_bypass_goodstanding_check_reason")]
        public string ccof_bypass_goodstanding_check_reason
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_bypass_goodstanding_check_reason");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_bypass_goodstanding_check_reason", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_bypass_goodstanding_checkname")]
        public string ccof_bypass_goodstanding_checkname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ccof_bypass_goodstanding_check"))
                {
                    return this.FormattedValues["ccof_bypass_goodstanding_check"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_consecutivestartdate")]
        public System.Nullable<System.DateTime> ccof_consecutivestartdate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_consecutivestartdate");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_consecutivestartdate", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_contractstatus")]
        public virtual ccof_ContractStatus? ccof_contractstatus
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ccof_ContractStatus?)(EntityOptionSetEnum.GetEnum(this, "ccof_contractstatus")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_contractstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_contractstatusname")]
        public string ccof_contractstatusname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ccof_contractstatus"))
                {
                    return this.FormattedValues["ccof_contractstatus"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_doingbusinessas")]
        public string ccof_doingbusinessas
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_doingbusinessas");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_doingbusinessas", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_duration")]
        public System.Nullable<decimal> ccof_duration
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ccof_duration");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_duration_trigger_flow")]
        public System.Nullable<decimal> ccof_duration_trigger_flow
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ccof_duration_trigger_flow");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_duration_trigger_flow", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_everreceivedfundingundertheccofprogram")]
        public virtual ccof_EverReceivedfundingundertheCCOFprog? ccof_everreceivedfundingundertheccofprogram
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ccof_EverReceivedfundingundertheCCOFprog?)(EntityOptionSetEnum.GetEnum(this, "ccof_everreceivedfundingundertheccofprogram")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_everreceivedfundingundertheccofprogram", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_everreceivedfundingundertheccofprogramname")]
        public string ccof_everreceivedfundingundertheccofprogramname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ccof_everreceivedfundingundertheccofprogram"))
                {
                    return this.FormattedValues["ccof_everreceivedfundingundertheccofprogram"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facilityenddate")]
        public System.Nullable<System.DateTime> ccof_facilityenddate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_facilityenddate");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_facilityenddate", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facilitylicencenumber")]
        public string ccof_facilitylicencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_facilitylicencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_facilitylicencenumber", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facilityreceived_ccof_funding")]
        public string ccof_facilityreceived_ccof_funding
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_facilityreceived_ccof_funding");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_facilityreceived_ccof_funding", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facilitystartdate")]
        public System.Nullable<System.DateTime> ccof_facilitystartdate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_facilitystartdate");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_facilitystartdate", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facilitystatus")]
        public virtual ccof_FacilityStatus? ccof_facilitystatus
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ccof_FacilityStatus?)(EntityOptionSetEnum.GetEnum(this, "ccof_facilitystatus")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_facilitystatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facilitystatusname")]
        public string ccof_facilitystatusname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ccof_facilitystatus"))
                {
                    return this.FormattedValues["ccof_facilitystatus"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_formcomplete")]
        public System.Nullable<bool> ccof_formcomplete
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ccof_formcomplete");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_formcomplete", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_formcompletename")]
        public string ccof_formcompletename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ccof_formcomplete"))
                {
                    return this.FormattedValues["ccof_formcomplete"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_fundingagreementnumber")]
        public string ccof_fundingagreementnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_fundingagreementnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_fundingagreementnumber", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_good_standing_indicator_ccof")]
        public string ccof_good_standing_indicator_ccof
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_good_standing_indicator_ccof");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_good_standing_indicator_ccof", value);
            }
        }

        /// <summary>
        /// CCOF Good Standing Status
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_good_standing_status")]
        public virtual ofm_good_standing_status? ccof_good_standing_status
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_good_standing_status?)(EntityOptionSetEnum.GetEnum(this, "ccof_good_standing_status")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_good_standing_status", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_good_standing_statusname")]
        public string ccof_good_standing_statusname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ccof_good_standing_status"))
                {
                    return this.FormattedValues["ccof_good_standing_status"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_healthauthority")]
        public virtual ccof_HealthAuthority? ccof_healthauthority
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ccof_HealthAuthority?)(EntityOptionSetEnum.GetEnum(this, "ccof_healthauthority")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_healthauthority", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_healthauthorityname")]
        public string ccof_healthauthorityname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ccof_healthauthority"))
                {
                    return this.FormattedValues["ccof_healthauthority"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// CCOF
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_instructionnumber")]
        public string ccof_instructionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_instructionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_instructionnumber", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_is_facility_address_entered_manually")]
        public System.Nullable<bool> ccof_is_facility_address_entered_manually
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ccof_is_facility_address_entered_manually");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_is_facility_address_entered_manually", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_is_facility_address_entered_manuallyname")]
        public string ccof_is_facility_address_entered_manuallyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ccof_is_facility_address_entered_manually"))
                {
                    return this.FormattedValues["ccof_is_facility_address_entered_manually"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_is_facility_address_same_as_org")]
        public System.Nullable<bool> ccof_is_facility_address_same_as_org
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ccof_is_facility_address_same_as_org");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_is_facility_address_same_as_org", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_is_facility_address_same_as_orgname")]
        public string ccof_is_facility_address_same_as_orgname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ccof_is_facility_address_same_as_org"))
                {
                    return this.FormattedValues["ccof_is_facility_address_same_as_org"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_is_facility_contact_same_as_org")]
        public System.Nullable<bool> ccof_is_facility_contact_same_as_org
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ccof_is_facility_contact_same_as_org");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_is_facility_contact_same_as_org", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_is_facility_contact_same_as_orgname")]
        public string ccof_is_facility_contact_same_as_orgname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ccof_is_facility_contact_same_as_org"))
                {
                    return this.FormattedValues["ccof_is_facility_contact_same_as_org"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_is_mailing_address_same")]
        public System.Nullable<bool> ccof_is_mailing_address_same
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ccof_is_mailing_address_same");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_is_mailing_address_same", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_is_mailing_address_samename")]
        public string ccof_is_mailing_address_samename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ccof_is_mailing_address_same"))
                {
                    return this.FormattedValues["ccof_is_mailing_address_same"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_is_org_mailing_address_entered_manually")]
        public System.Nullable<bool> ccof_is_org_mailing_address_entered_manually
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ccof_is_org_mailing_address_entered_manually");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_is_org_mailing_address_entered_manually", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_is_org_mailing_address_entered_manuallyname")]
        public string ccof_is_org_mailing_address_entered_manuallyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ccof_is_org_mailing_address_entered_manually"))
                {
                    return this.FormattedValues["ccof_is_org_mailing_address_entered_manually"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_is_org_street_address_entered_manually")]
        public System.Nullable<bool> ccof_is_org_street_address_entered_manually
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ccof_is_org_street_address_entered_manually");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_is_org_street_address_entered_manually", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_is_org_street_address_entered_manuallyname")]
        public string ccof_is_org_street_address_entered_manuallyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ccof_is_org_street_address_entered_manually"))
                {
                    return this.FormattedValues["ccof_is_org_street_address_entered_manually"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_licensestartdate")]
        public System.Nullable<System.DateTime> ccof_licensestartdate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_licensestartdate");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_licensestartdate", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_managerdisabled")]
        public System.Nullable<bool> ccof_managerdisabled
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ccof_managerdisabled");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_managerdisabled", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_managerdisabledname")]
        public string ccof_managerdisabledname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ccof_managerdisabled"))
                {
                    return this.FormattedValues["ccof_managerdisabled"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_maximumcapacity")]
        public System.Nullable<int> ccof_maximumcapacity
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ccof_maximumcapacity");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_maximumcapacity", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_numberoffacilities")]
        public System.Nullable<int> ccof_numberoffacilities
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ccof_numberoffacilities");
            }
        }

        /// <summary>
        /// Last Updated time of rollup field Number of Facilities.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_numberoffacilities_date")]
        public System.Nullable<System.DateTime> ccof_numberoffacilities_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_numberoffacilities_date");
            }
        }

        /// <summary>
        /// State of rollup field Number of Facilities.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_numberoffacilities_state")]
        public System.Nullable<int> ccof_numberoffacilities_state
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ccof_numberoffacilities_state");
            }
        }

        /// <summary>
        /// Organization ID
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_organizationid")]
        public string ccof_organizationid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_organizationid");
            }
        }

        /// <summary>
        /// Parent Organization Name
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_organizationname")]
        public string ccof_organizationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_organizationname");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_orgmailingaddress_autocomplete")]
        public virtual Account_ccof_orgmailingaddress_autocomplete? ccof_orgmailingaddress_autocomplete
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Account_ccof_orgmailingaddress_autocomplete?)(EntityOptionSetEnum.GetEnum(this, "ccof_orgmailingaddress_autocomplete")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_orgmailingaddress_autocomplete", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_orgmailingaddress_autocompletename")]
        public string ccof_orgmailingaddress_autocompletename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ccof_orgmailingaddress_autocomplete"))
                {
                    return this.FormattedValues["ccof_orgmailingaddress_autocomplete"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_partner1firstname")]
        public string ccof_partner1firstname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_partner1firstname");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_partner1firstname", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_partner1lastname")]
        public string ccof_partner1lastname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_partner1lastname");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_partner1lastname", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_partner1middlename")]
        public string ccof_partner1middlename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_partner1middlename");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_partner1middlename", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_partner2firstname")]
        public string ccof_partner2firstname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_partner2firstname");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_partner2firstname", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_partner2lastname")]
        public string ccof_partner2lastname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_partner2lastname");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_partner2lastname", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_partner2middlename")]
        public string ccof_partner2middlename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_partner2middlename");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_partner2middlename", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_partner3firstname")]
        public string ccof_partner3firstname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_partner3firstname");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_partner3firstname", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_partner3lastname")]
        public string ccof_partner3lastname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_partner3lastname");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_partner3lastname", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_partner3middlename")]
        public string ccof_partner3middlename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_partner3middlename");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_partner3middlename", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_partner4firstname")]
        public string ccof_partner4firstname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_partner4firstname");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_partner4firstname", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_partner4lastname")]
        public string ccof_partner4lastname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_partner4lastname");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_partner4lastname", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_partner4middlename")]
        public string ccof_partner4middlename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_partner4middlename");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_partner4middlename", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_position")]
        public string ccof_position
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_position");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_position", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_primarybusinessbceid")]
        public string ccof_primarybusinessbceid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_primarybusinessbceid");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_providername")]
        public string ccof_providername
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_providername");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_providername", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_trigger_monthly_check")]
        public System.Nullable<bool> ccof_trigger_monthly_check
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ccof_trigger_monthly_check");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_trigger_monthly_check", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_trigger_monthly_checkname")]
        public string ccof_trigger_monthly_checkname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ccof_trigger_monthly_check"))
                {
                    return this.FormattedValues["ccof_trigger_monthly_check"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_typeoforganization")]
        public virtual ccof_TypeofOrganization? ccof_typeoforganization
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ccof_TypeofOrganization?)(EntityOptionSetEnum.GetEnum(this, "ccof_typeoforganization")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_typeoforganization", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_typeoforganizationname")]
        public string ccof_typeoforganizationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ccof_typeoforganization"))
                {
                    return this.FormattedValues["ccof_typeoforganization"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_unreadactionmessages")]
        public System.Nullable<int> ccof_unreadactionmessages
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ccof_unreadactionmessages");
            }
        }

        /// <summary>
        /// Last Updated time of rollup field Unread Action Messages.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_unreadactionmessages_date")]
        public System.Nullable<System.DateTime> ccof_unreadactionmessages_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_unreadactionmessages_date");
            }
        }

        /// <summary>
        /// State of rollup field Unread Action Messages.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_unreadactionmessages_state")]
        public System.Nullable<int> ccof_unreadactionmessages_state
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ccof_unreadactionmessages_state");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_validated_on")]
        public System.Nullable<System.DateTime> ccof_validated_on
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_validated_on");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_validated_on", value);
            }
        }

        /// <summary>
        /// Shows who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        /// <summary>
        /// Shows the external party who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyexternalparty")]
        public Microsoft.Xrm.Sdk.EntityReference createdbyexternalparty
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdbyexternalparty");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyexternalpartyname")]
        public string createdbyexternalpartyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdbyexternalparty"))
                {
                    return this.FormattedValues["createdbyexternalparty"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyexternalpartyyominame")]
        public string createdbyexternalpartyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdbyexternalparty"))
                {
                    return this.FormattedValues["createdbyexternalparty"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Shows who created the record on behalf of another user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the credit limit of the account. This is a useful reference when you address invoice and accounting issues with the customer.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("creditlimit")]
        public Microsoft.Xrm.Sdk.Money creditlimit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("creditlimit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("creditlimit", value);
            }
        }

        /// <summary>
        /// Shows the credit limit converted to the system's default base currency for reporting purposes.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("creditlimit_base")]
        public Microsoft.Xrm.Sdk.Money creditlimit_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("creditlimit_base");
            }
        }

        /// <summary>
        /// Select whether the credit for the account is on hold. This is a useful reference while addressing the invoice and accounting issues with the customer.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("creditonhold")]
        public System.Nullable<bool> creditonhold
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("creditonhold");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("creditonhold", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("creditonholdname")]
        public string creditonholdname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("creditonhold"))
                {
                    return this.FormattedValues["creditonhold"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select the size category or range of the account for segmentation and reporting purposes.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customersizecode")]
        public virtual Account_customersizecode? customersizecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Account_customersizecode?)(EntityOptionSetEnum.GetEnum(this, "customersizecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("customersizecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customersizecodename")]
        public string customersizecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("customersizecode"))
                {
                    return this.FormattedValues["customersizecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select the category that best describes the relationship between the account and your organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customertypecode")]
        public virtual Account_customertypecode? customertypecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Account_customertypecode?)(EntityOptionSetEnum.GetEnum(this, "customertypecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("customertypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customertypecodename")]
        public string customertypecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("customertypecode"))
                {
                    return this.FormattedValues["customertypecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Choose the default price list associated with the account to make sure the correct product prices for this customer are applied in sales opportunities, quotes, and orders.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultpricelevelid")]
        public Microsoft.Xrm.Sdk.EntityReference defaultpricelevelid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("defaultpricelevelid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("defaultpricelevelid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultpricelevelidname")]
        public string defaultpricelevelidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("defaultpricelevelid"))
                {
                    return this.FormattedValues["defaultpricelevelid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type additional information to describe the account, such as an excerpt from the company's website.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
        public string description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("description", value);
            }
        }

        /// <summary>
        /// Select whether the account allows bulk email sent through campaigns. If Do Not Allow is selected, the account can be added to marketing lists, but is excluded from email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotbulkemail")]
        public System.Nullable<bool> donotbulkemail
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("donotbulkemail");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("donotbulkemail", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotbulkemailname")]
        public string donotbulkemailname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("donotbulkemail"))
                {
                    return this.FormattedValues["donotbulkemail"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select whether the account allows bulk postal mail sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the account can be added to marketing lists, but will be excluded from the postal mail.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotbulkpostalmail")]
        public System.Nullable<bool> donotbulkpostalmail
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("donotbulkpostalmail");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("donotbulkpostalmail", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotbulkpostalmailname")]
        public string donotbulkpostalmailname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("donotbulkpostalmail"))
                {
                    return this.FormattedValues["donotbulkpostalmail"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select whether the account allows direct email sent from Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotemail")]
        public System.Nullable<bool> donotemail
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("donotemail");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("donotemail", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotemailname")]
        public string donotemailname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("donotemail"))
                {
                    return this.FormattedValues["donotemail"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select whether the account allows faxes. If Do Not Allow is selected, the account will be excluded from fax activities distributed in marketing campaigns.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotfax")]
        public System.Nullable<bool> donotfax
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("donotfax");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("donotfax", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotfaxname")]
        public string donotfaxname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("donotfax"))
                {
                    return this.FormattedValues["donotfax"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select whether the account allows phone calls. If Do Not Allow is selected, the account will be excluded from phone call activities distributed in marketing campaigns.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotphone")]
        public System.Nullable<bool> donotphone
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("donotphone");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("donotphone", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotphonename")]
        public string donotphonename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("donotphone"))
                {
                    return this.FormattedValues["donotphone"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select whether the account allows direct mail. If Do Not Allow is selected, the account will be excluded from letter activities distributed in marketing campaigns.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotpostalmail")]
        public System.Nullable<bool> donotpostalmail
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("donotpostalmail");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("donotpostalmail", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotpostalmailname")]
        public string donotpostalmailname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("donotpostalmail"))
                {
                    return this.FormattedValues["donotpostalmail"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotsendmarketingmaterialname")]
        public string donotsendmarketingmaterialname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("donotsendmm"))
                {
                    return this.FormattedValues["donotsendmm"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select whether the account accepts marketing materials, such as brochures or catalogs.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotsendmm")]
        public System.Nullable<bool> donotsendmm
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("donotsendmm");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("donotsendmm", value);
            }
        }

        /// <summary>
        /// Type the primary email address for the account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress1")]
        public string emailaddress1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("emailaddress1");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("emailaddress1", value);
            }
        }

        /// <summary>
        /// Type the secondary email address for the account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress2")]
        public string emailaddress2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("emailaddress2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("emailaddress2", value);
            }
        }

        /// <summary>
        /// Type an alternate email address for the account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress3")]
        public string emailaddress3
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("emailaddress3");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("emailaddress3", value);
            }
        }

        /// <summary>
        /// Shows the default image for the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
        public byte[] entityimage
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<byte[]>("entityimage");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("entityimage", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
        public System.Nullable<long> entityimage_timestamp
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("entityimage_timestamp");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
        public string entityimage_url
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("entityimage_url");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
        public System.Nullable<System.Guid> entityimageid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("entityimageid");
            }
        }

        /// <summary>
        /// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
        public System.Nullable<decimal> exchangerate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
            }
        }

        /// <summary>
        /// Type the fax number for the account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fax")]
        public string fax
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("fax");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("fax", value);
            }
        }

        /// <summary>
        /// Information about whether to allow following email activity like opens, attachment views and link clicks for emails sent to the account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("followemail")]
        public System.Nullable<bool> followemail
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("followemail");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("followemail", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("followemailname")]
        public string followemailname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("followemail"))
                {
                    return this.FormattedValues["followemail"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the URL for the account's FTP site to enable users to access data and share documents.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ftpsiteurl")]
        public string ftpsiteurl
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ftpsiteurl");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ftpsiteurl", value);
            }
        }

        /// <summary>
        /// Unique identifier of the data import or data migration that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Select the account's primary industry for use in marketing segmentation and demographic analysis.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("industrycode")]
        public virtual Account_industrycode? industrycode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Account_industrycode?)(EntityOptionSetEnum.GetEnum(this, "industrycode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("industrycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("industrycodename")]
        public string industrycodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("industrycode"))
                {
                    return this.FormattedValues["industrycode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isprivatename")]
        public string isprivatename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("isprivate"))
                {
                    return this.FormattedValues["isprivate"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Contains the date and time stamp of the last on hold time.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastonholdtime")]
        public System.Nullable<System.DateTime> lastonholdtime
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastonholdtime");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("lastonholdtime", value);
            }
        }

        /// <summary>
        /// Shows the date when the account was last included in a marketing campaign or quick campaign.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastusedincampaign")]
        public System.Nullable<System.DateTime> lastusedincampaign
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastusedincampaign");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("lastusedincampaign", value);
            }
        }

        /// <summary>
        /// Type the market capitalization of the account to identify the company's equity, used as an indicator in financial performance analysis.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("marketcap")]
        public Microsoft.Xrm.Sdk.Money marketcap
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("marketcap");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("marketcap", value);
            }
        }

        /// <summary>
        /// Shows the market capitalization converted to the system's default base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("marketcap_base")]
        public Microsoft.Xrm.Sdk.Money marketcap_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("marketcap_base");
            }
        }

        /// <summary>
        /// Whether is only for marketing
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("marketingonly")]
        public System.Nullable<bool> marketingonly
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("marketingonly");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("marketingonly", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("marketingonlyname")]
        public string marketingonlyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("marketingonly"))
                {
                    return this.FormattedValues["marketingonly"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("masteraccountidname")]
        public string masteraccountidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("masterid"))
                {
                    return this.FormattedValues["masterid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("masteraccountidyominame")]
        public string masteraccountidyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("masterid"))
                {
                    return this.FormattedValues["masterid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows the master account that the account was merged with.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("masterid")]
        public Microsoft.Xrm.Sdk.EntityReference masterid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("masterid");
            }
        }

        /// <summary>
        /// Shows whether the account has been merged with another account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("merged")]
        public System.Nullable<bool> merged
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("merged");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mergedname")]
        public string mergedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("merged"))
                {
                    return this.FormattedValues["merged"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows who last updated the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        /// <summary>
        /// Shows the external party who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyexternalparty")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedbyexternalparty
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedbyexternalparty");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyexternalpartyname")]
        public string modifiedbyexternalpartyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedbyexternalparty"))
                {
                    return this.FormattedValues["modifiedbyexternalparty"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyexternalpartyyominame")]
        public string modifiedbyexternalpartyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedbyexternalparty"))
                {
                    return this.FormattedValues["modifiedbyexternalparty"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Shows who created the record on behalf of another user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for Account associated with Account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msa_managingpartnerid")]
        public Microsoft.Xrm.Sdk.EntityReference msa_managingpartnerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msa_managingpartnerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msa_managingpartnerid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msa_managingpartneridname")]
        public string msa_managingpartneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msa_managingpartnerid"))
                {
                    return this.FormattedValues["msa_managingpartnerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msa_managingpartneridyominame")]
        public string msa_managingpartneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msa_managingpartnerid"))
                {
                    return this.FormattedValues["msa_managingpartnerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_accountkpiid")]
        public Microsoft.Xrm.Sdk.EntityReference msdyn_accountkpiid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_accountkpiid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_accountkpiid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_accountkpiidname")]
        public string msdyn_accountkpiidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_accountkpiid"))
                {
                    return this.FormattedValues["msdyn_accountkpiid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reference to an other account to be used for billing (only to be used if billing account differs)
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_billingaccount")]
        public Microsoft.Xrm.Sdk.EntityReference msdyn_billingaccount
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_billingaccount");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_billingaccount", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_billingaccountname")]
        public string msdyn_billingaccountname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_billingaccount"))
                {
                    return this.FormattedValues["msdyn_billingaccount"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_billingaccountyominame")]
        public string msdyn_billingaccountyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_billingaccount"))
                {
                    return this.FormattedValues["msdyn_billingaccount"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Describes whether account is opted out or not
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_gdproptout")]
        public System.Nullable<bool> msdyn_gdproptout
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("msdyn_gdproptout");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_gdproptout", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_gdproptoutname")]
        public string msdyn_gdproptoutname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_gdproptout"))
                {
                    return this.FormattedValues["msdyn_gdproptout"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_preferredresource")]
        public Microsoft.Xrm.Sdk.EntityReference msdyn_preferredresource
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_preferredresource");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_preferredresource", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_preferredresourcename")]
        public string msdyn_preferredresourcename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_preferredresource"))
                {
                    return this.FormattedValues["msdyn_preferredresource"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Indicates the primary time zone that the client works on.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_primarytimezone")]
        public System.Nullable<int> msdyn_primarytimezone
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("msdyn_primarytimezone");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_primarytimezone", value);
            }
        }

        /// <summary>
        /// Sales Acceleration Insights ID
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_salesaccelerationinsightid")]
        public Microsoft.Xrm.Sdk.EntityReference msdyn_salesaccelerationinsightid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_salesaccelerationinsightid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_salesaccelerationinsightid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_salesaccelerationinsightidname")]
        public string msdyn_salesaccelerationinsightidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_salesaccelerationinsightid"))
                {
                    return this.FormattedValues["msdyn_salesaccelerationinsightid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Default Sales Tax Code
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_salestaxcode")]
        public Microsoft.Xrm.Sdk.EntityReference msdyn_salestaxcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_salestaxcode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_salestaxcode", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_salestaxcodename")]
        public string msdyn_salestaxcodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_salestaxcode"))
                {
                    return this.FormattedValues["msdyn_salestaxcode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for Segment associated with account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_segmentid")]
        public Microsoft.Xrm.Sdk.EntityReference msdyn_segmentid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_segmentid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_segmentid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_segmentidname")]
        public string msdyn_segmentidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_segmentid"))
                {
                    return this.FormattedValues["msdyn_segmentid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The Service Territory this account belongs to. This is used to optimize scheduling and routing
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_serviceterritory")]
        public Microsoft.Xrm.Sdk.EntityReference msdyn_serviceterritory
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_serviceterritory");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_serviceterritory", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_serviceterritoryname")]
        public string msdyn_serviceterritoryname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_serviceterritory"))
                {
                    return this.FormattedValues["msdyn_serviceterritory"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select whether the account is tax exempt.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_taxexempt")]
        public System.Nullable<bool> msdyn_taxexempt
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("msdyn_taxexempt");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_taxexempt", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_taxexemptname")]
        public string msdyn_taxexemptname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_taxexempt"))
                {
                    return this.FormattedValues["msdyn_taxexempt"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows the government tax exempt number.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_taxexemptnumber")]
        public string msdyn_taxexemptnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msdyn_taxexemptnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_taxexemptnumber", value);
            }
        }

        /// <summary>
        /// Enter the travel charge to include on work orders. This value will be multiplied by the travel charge type.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_travelcharge")]
        public Microsoft.Xrm.Sdk.Money msdyn_travelcharge
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("msdyn_travelcharge");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_travelcharge", value);
            }
        }

        /// <summary>
        /// Value of the Travel Charge in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_travelcharge_base")]
        public Microsoft.Xrm.Sdk.Money msdyn_travelcharge_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("msdyn_travelcharge_base");
            }
        }

        /// <summary>
        /// Specify how travel is charged for this account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_travelchargetype")]
        public virtual msdyn_TravelChargeType? msdyn_travelchargetype
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((msdyn_TravelChargeType?)(EntityOptionSetEnum.GetEnum(this, "msdyn_travelchargetype")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_travelchargetype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_travelchargetypename")]
        public string msdyn_travelchargetypename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_travelchargetype"))
                {
                    return this.FormattedValues["msdyn_travelchargetype"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_workhourtemplate")]
        public Microsoft.Xrm.Sdk.EntityReference msdyn_workhourtemplate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_workhourtemplate");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_workhourtemplate", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_workhourtemplatename")]
        public string msdyn_workhourtemplatename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_workhourtemplate"))
                {
                    return this.FormattedValues["msdyn_workhourtemplate"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows the default instructions to show on new work orders.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_workorderinstructions")]
        public string msdyn_workorderinstructions
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msdyn_workorderinstructions");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_workorderinstructions", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msft_datastate")]
        public virtual msft_DataState? msft_datastate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((msft_DataState?)(EntityOptionSetEnum.GetEnum(this, "msft_datastate")));
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msft_datastatename")]
        public string msft_datastatename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msft_datastate"))
                {
                    return this.FormattedValues["msft_datastate"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the company or business name.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
        public string name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("name", value);
            }
        }

        /// <summary>
        /// Type the number of employees that work at the account for use in marketing segmentation and demographic analysis.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("numberofemployees")]
        public System.Nullable<int> numberofemployees
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("numberofemployees");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("numberofemployees", value);
            }
        }

        /// <summary>
        /// ACCB provider ID
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_accb_providerid")]
        public string ofm_accb_providerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_accb_providerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_accb_providerid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address10")]
        public System.Nullable<bool> ofm_additional_address10
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_additional_address10");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_additional_address10", value);
            }
        }

        /// <summary>
        /// Legal Description
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address10_legal_description")]
        public string ofm_additional_address10_legal_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_additional_address10_legal_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_additional_address10_legal_description", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address10name")]
        public string ofm_additional_address10name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_additional_address10"))
                {
                    return this.FormattedValues["ofm_additional_address10"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address11")]
        public System.Nullable<bool> ofm_additional_address11
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_additional_address11");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_additional_address11", value);
            }
        }

        /// <summary>
        /// Legal Description
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address11_legal_description")]
        public string ofm_additional_address11_legal_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_additional_address11_legal_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_additional_address11_legal_description", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address11name")]
        public string ofm_additional_address11name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_additional_address11"))
                {
                    return this.FormattedValues["ofm_additional_address11"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address12")]
        public System.Nullable<bool> ofm_additional_address12
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_additional_address12");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_additional_address12", value);
            }
        }

        /// <summary>
        /// Legal Description
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address12_legal_description")]
        public string ofm_additional_address12_legal_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_additional_address12_legal_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_additional_address12_legal_description", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address12name")]
        public string ofm_additional_address12name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_additional_address12"))
                {
                    return this.FormattedValues["ofm_additional_address12"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address13")]
        public System.Nullable<bool> ofm_additional_address13
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_additional_address13");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_additional_address13", value);
            }
        }

        /// <summary>
        /// Legal Description
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address13_legal_description")]
        public string ofm_additional_address13_legal_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_additional_address13_legal_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_additional_address13_legal_description", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address13name")]
        public string ofm_additional_address13name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_additional_address13"))
                {
                    return this.FormattedValues["ofm_additional_address13"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address3")]
        public System.Nullable<bool> ofm_additional_address3
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_additional_address3");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_additional_address3", value);
            }
        }

        /// <summary>
        /// Legal Description
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address3_legal_description")]
        public string ofm_additional_address3_legal_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_additional_address3_legal_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_additional_address3_legal_description", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address3name")]
        public string ofm_additional_address3name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_additional_address3"))
                {
                    return this.FormattedValues["ofm_additional_address3"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address4")]
        public System.Nullable<bool> ofm_additional_address4
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_additional_address4");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_additional_address4", value);
            }
        }

        /// <summary>
        /// Legal Description
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address4_legal_description")]
        public string ofm_additional_address4_legal_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_additional_address4_legal_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_additional_address4_legal_description", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address4name")]
        public string ofm_additional_address4name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_additional_address4"))
                {
                    return this.FormattedValues["ofm_additional_address4"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address5")]
        public System.Nullable<bool> ofm_additional_address5
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_additional_address5");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_additional_address5", value);
            }
        }

        /// <summary>
        /// Legal Description
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address5_legal_description")]
        public string ofm_additional_address5_legal_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_additional_address5_legal_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_additional_address5_legal_description", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address5name")]
        public string ofm_additional_address5name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_additional_address5"))
                {
                    return this.FormattedValues["ofm_additional_address5"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address6")]
        public System.Nullable<bool> ofm_additional_address6
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_additional_address6");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_additional_address6", value);
            }
        }

        /// <summary>
        /// Legal Description
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address6_legal_description")]
        public string ofm_additional_address6_legal_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_additional_address6_legal_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_additional_address6_legal_description", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address6name")]
        public string ofm_additional_address6name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_additional_address6"))
                {
                    return this.FormattedValues["ofm_additional_address6"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address7")]
        public System.Nullable<bool> ofm_additional_address7
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_additional_address7");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_additional_address7", value);
            }
        }

        /// <summary>
        /// Legal Description
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address7_legal_description")]
        public string ofm_additional_address7_legal_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_additional_address7_legal_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_additional_address7_legal_description", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address7name")]
        public string ofm_additional_address7name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_additional_address7"))
                {
                    return this.FormattedValues["ofm_additional_address7"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address8")]
        public System.Nullable<bool> ofm_additional_address8
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_additional_address8");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_additional_address8", value);
            }
        }

        /// <summary>
        /// Legal Description
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address8_legal_description")]
        public string ofm_additional_address8_legal_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_additional_address8_legal_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_additional_address8_legal_description", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address8name")]
        public string ofm_additional_address8name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_additional_address8"))
                {
                    return this.FormattedValues["ofm_additional_address8"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address9")]
        public System.Nullable<bool> ofm_additional_address9
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_additional_address9");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_additional_address9", value);
            }
        }

        /// <summary>
        /// Legal Description
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address9_legal_description")]
        public string ofm_additional_address9_legal_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_additional_address9_legal_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_additional_address9_legal_description", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_address9name")]
        public string ofm_additional_address9name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_additional_address9"))
                {
                    return this.FormattedValues["ofm_additional_address9"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Legal Description
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address1_legal_description")]
        public string ofm_address1_legal_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address1_legal_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address1_legal_description", value);
            }
        }

        /// <summary>
        /// Type the city for the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address10_city")]
        public string ofm_address10_city
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address10_city");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address10_city", value);
            }
        }

        /// <summary>
        /// Type the first line of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address10_line1")]
        public string ofm_address10_line1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address10_line1");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address10_line1", value);
            }
        }

        /// <summary>
        /// Type the second line of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address10_line2")]
        public string ofm_address10_line2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address10_line2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address10_line2", value);
            }
        }

        /// <summary>
        /// Type the ZIP Code or postal code for the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address10_postal_code")]
        public string ofm_address10_postal_code
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address10_postal_code");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address10_postal_code", value);
            }
        }

        /// <summary>
        /// Type the state or province of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address10_province")]
        public string ofm_address10_province
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address10_province");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address10_province", value);
            }
        }

        /// <summary>
        /// Type the city for the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address11_city")]
        public string ofm_address11_city
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address11_city");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address11_city", value);
            }
        }

        /// <summary>
        /// Type the first line of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address11_line1")]
        public string ofm_address11_line1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address11_line1");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address11_line1", value);
            }
        }

        /// <summary>
        /// Type the second line of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address11_line2")]
        public string ofm_address11_line2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address11_line2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address11_line2", value);
            }
        }

        /// <summary>
        /// Type the ZIP Code or postal code for the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address11_postal_code")]
        public string ofm_address11_postal_code
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address11_postal_code");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address11_postal_code", value);
            }
        }

        /// <summary>
        /// Type the state or province of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address11_province")]
        public string ofm_address11_province
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address11_province");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address11_province", value);
            }
        }

        /// <summary>
        /// Type the city for the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address12_city")]
        public string ofm_address12_city
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address12_city");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address12_city", value);
            }
        }

        /// <summary>
        /// Type the first line of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address12_line1")]
        public string ofm_address12_line1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address12_line1");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address12_line1", value);
            }
        }

        /// <summary>
        /// Type the second line of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address12_line2")]
        public string ofm_address12_line2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address12_line2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address12_line2", value);
            }
        }

        /// <summary>
        /// Type the ZIP Code or postal code for the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address12_postal_code")]
        public string ofm_address12_postal_code
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address12_postal_code");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address12_postal_code", value);
            }
        }

        /// <summary>
        /// Type the state or province of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address12_province")]
        public string ofm_address12_province
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address12_province");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address12_province", value);
            }
        }

        /// <summary>
        /// Type the city for the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address13_city")]
        public string ofm_address13_city
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address13_city");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address13_city", value);
            }
        }

        /// <summary>
        /// Type the first line of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address13_line1")]
        public string ofm_address13_line1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address13_line1");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address13_line1", value);
            }
        }

        /// <summary>
        /// Type the second line of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address13_line2")]
        public string ofm_address13_line2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address13_line2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address13_line2", value);
            }
        }

        /// <summary>
        /// Type the ZIP Code or postal code for the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address13_postal_code")]
        public string ofm_address13_postal_code
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address13_postal_code");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address13_postal_code", value);
            }
        }

        /// <summary>
        /// Type the state or province of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address13_province")]
        public string ofm_address13_province
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address13_province");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address13_province", value);
            }
        }

        /// <summary>
        /// Type the city for the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address3_city")]
        public string ofm_address3_city
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address3_city");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address3_city", value);
            }
        }

        /// <summary>
        /// Type the first line of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address3_line1")]
        public string ofm_address3_line1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address3_line1");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address3_line1", value);
            }
        }

        /// <summary>
        /// Type the second line of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address3_line2")]
        public string ofm_address3_line2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address3_line2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address3_line2", value);
            }
        }

        /// <summary>
        /// Type the ZIP Code or postal code for the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address3_postal_code")]
        public string ofm_address3_postal_code
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address3_postal_code");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address3_postal_code", value);
            }
        }

        /// <summary>
        /// Type the state or province of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address3_province")]
        public string ofm_address3_province
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address3_province");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address3_province", value);
            }
        }

        /// <summary>
        /// Type the city for the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address4_city")]
        public string ofm_address4_city
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address4_city");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address4_city", value);
            }
        }

        /// <summary>
        /// Type the first line of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address4_line1")]
        public string ofm_address4_line1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address4_line1");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address4_line1", value);
            }
        }

        /// <summary>
        /// Type the second line of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address4_line2")]
        public string ofm_address4_line2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address4_line2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address4_line2", value);
            }
        }

        /// <summary>
        /// Type the ZIP Code or postal code for the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address4_postal_code")]
        public string ofm_address4_postal_code
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address4_postal_code");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address4_postal_code", value);
            }
        }

        /// <summary>
        /// Type the state or province of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address4_province")]
        public string ofm_address4_province
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address4_province");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address4_province", value);
            }
        }

        /// <summary>
        /// Type the city for the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address5_city")]
        public string ofm_address5_city
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address5_city");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address5_city", value);
            }
        }

        /// <summary>
        /// Type the first line of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address5_line1")]
        public string ofm_address5_line1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address5_line1");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address5_line1", value);
            }
        }

        /// <summary>
        /// Type the second line of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address5_line2")]
        public string ofm_address5_line2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address5_line2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address5_line2", value);
            }
        }

        /// <summary>
        /// Type the ZIP Code or postal code for the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address5_postal_code")]
        public string ofm_address5_postal_code
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address5_postal_code");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address5_postal_code", value);
            }
        }

        /// <summary>
        /// Type the state or province of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address5_province")]
        public string ofm_address5_province
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address5_province");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address5_province", value);
            }
        }

        /// <summary>
        /// Type the city for the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address6_city")]
        public string ofm_address6_city
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address6_city");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address6_city", value);
            }
        }

        /// <summary>
        /// Type the first line of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address6_line1")]
        public string ofm_address6_line1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address6_line1");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address6_line1", value);
            }
        }

        /// <summary>
        /// Type the second line of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address6_line2")]
        public string ofm_address6_line2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address6_line2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address6_line2", value);
            }
        }

        /// <summary>
        /// Type the ZIP Code or postal code for the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address6_postal_code")]
        public string ofm_address6_postal_code
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address6_postal_code");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address6_postal_code", value);
            }
        }

        /// <summary>
        /// Type the state or province of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address6_province")]
        public string ofm_address6_province
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address6_province");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address6_province", value);
            }
        }

        /// <summary>
        /// Type the city for the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address7_city")]
        public string ofm_address7_city
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address7_city");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address7_city", value);
            }
        }

        /// <summary>
        /// Type the first line of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address7_line1")]
        public string ofm_address7_line1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address7_line1");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address7_line1", value);
            }
        }

        /// <summary>
        /// Type the second line of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address7_line2")]
        public string ofm_address7_line2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address7_line2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address7_line2", value);
            }
        }

        /// <summary>
        /// Type the ZIP Code or postal code for the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address7_postal_code")]
        public string ofm_address7_postal_code
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address7_postal_code");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address7_postal_code", value);
            }
        }

        /// <summary>
        /// Type the state or province of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address7_province")]
        public string ofm_address7_province
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address7_province");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address7_province", value);
            }
        }

        /// <summary>
        /// Type the city for the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address8_city")]
        public string ofm_address8_city
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address8_city");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address8_city", value);
            }
        }

        /// <summary>
        /// Type the first line of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address8_line1")]
        public string ofm_address8_line1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address8_line1");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address8_line1", value);
            }
        }

        /// <summary>
        /// Type the second line of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address8_line2")]
        public string ofm_address8_line2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address8_line2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address8_line2", value);
            }
        }

        /// <summary>
        /// Type the ZIP Code or postal code for the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address8_postal_code")]
        public string ofm_address8_postal_code
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address8_postal_code");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address8_postal_code", value);
            }
        }

        /// <summary>
        /// Type the state or province of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address8_province")]
        public string ofm_address8_province
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address8_province");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address8_province", value);
            }
        }

        /// <summary>
        /// Type the city for the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address9_city")]
        public string ofm_address9_city
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address9_city");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address9_city", value);
            }
        }

        /// <summary>
        /// Type the first line of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address9_line1")]
        public string ofm_address9_line1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address9_line1");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address9_line1", value);
            }
        }

        /// <summary>
        /// Type the second line of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address9_line2")]
        public string ofm_address9_line2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address9_line2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address9_line2", value);
            }
        }

        /// <summary>
        /// Type the ZIP Code or postal code for the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address9_postal_code")]
        public string ofm_address9_postal_code
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address9_postal_code");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address9_postal_code", value);
            }
        }

        /// <summary>
        /// Type the state or province of the additional address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_address9_province")]
        public string ofm_address9_province
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_address9_province");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_address9_province", value);
            }
        }

        /// <summary>
        /// Does your facility's not-for-profit have elected, unpaid board members?
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_board_members_elected_unpaid")]
        public virtual ecc_ynempty? ofm_board_members_elected_unpaid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_board_members_elected_unpaid")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_board_members_elected_unpaid", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_board_members_elected_unpaidname")]
        public string ofm_board_members_elected_unpaidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_board_members_elected_unpaid"))
                {
                    return this.FormattedValues["ofm_board_members_elected_unpaid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Are the majority of the elected board members full time BC residents?
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_board_members_residents_of_bc")]
        public virtual ecc_ynempty? ofm_board_members_residents_of_bc
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_board_members_residents_of_bc")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_board_members_residents_of_bc", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_board_members_residents_of_bcname")]
        public string ofm_board_members_residents_of_bcname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_board_members_residents_of_bc"))
                {
                    return this.FormattedValues["ofm_board_members_residents_of_bc"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Does your facility's not-for-profit have board members selected from the entire membership?
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_board_members_selected_membership")]
        public virtual ecc_ynempty? ofm_board_members_selected_membership
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_board_members_selected_membership")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_board_members_selected_membership", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_board_members_selected_membershipname")]
        public string ofm_board_members_selected_membershipname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_board_members_selected_membership"))
                {
                    return this.FormattedValues["ofm_board_members_selected_membership"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_business_number")]
        public string ofm_business_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_business_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_business_number", value);
            }
        }

        /// <summary>
        /// Business Type
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_business_type")]
        public virtual ecc_business_type? ofm_business_type
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_business_type?)(EntityOptionSetEnum.GetEnum(this, "ofm_business_type")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_business_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_business_typename")]
        public string ofm_business_typename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_business_type"))
                {
                    return this.FormattedValues["ofm_business_type"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_bypass_bc_registry_good_standing")]
        public System.Nullable<bool> ofm_bypass_bc_registry_good_standing
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_bypass_bc_registry_good_standing");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_bypass_bc_registry_good_standing", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_bypass_bc_registry_good_standingname")]
        public string ofm_bypass_bc_registry_good_standingname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_bypass_bc_registry_good_standing"))
                {
                    return this.FormattedValues["ofm_bypass_bc_registry_good_standing"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Site ID
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cas_location_number")]
        public string ofm_cas_location_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_cas_location_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_cas_location_number", value);
            }
        }

        /// <summary>
        /// Vendor Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cas_vendor_number")]
        public string ofm_cas_vendor_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_cas_vendor_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_cas_vendor_number", value);
            }
        }

        /// <summary>
        /// If the facility is with CCOF for at least 1 year, the value is Yes, otherwise it is No.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ccof_requirement")]
        public System.Nullable<bool> ofm_ccof_requirement
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_ccof_requirement");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ccof_requirementname")]
        public string ofm_ccof_requirementname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_ccof_requirement"))
                {
                    return this.FormattedValues["ofm_ccof_requirement"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cohort")]
        public string ofm_cohort
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_cohort");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_cohort", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cohortid")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_cohortid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_cohortid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_cohortid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cohortidname")]
        public string ofm_cohortidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_cohortid"))
                {
                    return this.FormattedValues["ofm_cohortid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date of incorporation
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_date_of_incorporation")]
        public System.Nullable<System.DateTime> ofm_date_of_incorporation
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_date_of_incorporation");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_date_of_incorporation", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_doing_business_as")]
        public string ofm_doing_business_as
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_doing_business_as");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_doing_business_as", value);
            }
        }

        /// <summary>
        /// The Date that the facility enrolled into the current program
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_enrollment_date")]
        public System.Nullable<System.DateTime> ofm_enrollment_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_enrollment_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_enrollment_date", value);
            }
        }

        /// <summary>
        /// Provider Review Complete
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility_review_complete")]
        public System.Nullable<bool> ofm_facility_review_complete
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_facility_review_complete");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_facility_review_complete", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility_review_completename")]
        public string ofm_facility_review_completename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_facility_review_complete"))
                {
                    return this.FormattedValues["ofm_facility_review_complete"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fiscal_year_end")]
        public string ofm_fiscal_year_end
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_fiscal_year_end");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_fiscal_year_end", value);
            }
        }

        /// <summary>
        /// Internal Audit Flag
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_flag_vau_review_underway")]
        public System.Nullable<bool> ofm_flag_vau_review_underway
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_flag_vau_review_underway");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_flag_vau_review_underway", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_flag_vau_review_underwayname")]
        public string ofm_flag_vau_review_underwayname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_flag_vau_review_underway"))
                {
                    return this.FormattedValues["ofm_flag_vau_review_underway"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Good Standing Indicator and Message
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_good_standing_indicator")]
        public string ofm_good_standing_indicator
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_good_standing_indicator");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_good_standing_indicator", value);
            }
        }

        /// <summary>
        /// Good Standing Status
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_good_standing_status")]
        public virtual ofm_good_standing_status? ofm_good_standing_status
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_good_standing_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_good_standing_status")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_good_standing_status", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_good_standing_statusname")]
        public string ofm_good_standing_statusname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_good_standing_status"))
                {
                    return this.FormattedValues["ofm_good_standing_status"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Validated On
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_good_standing_validated_on")]
        public System.Nullable<System.DateTime> ofm_good_standing_validated_on
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_good_standing_validated_on");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_good_standing_validated_on", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_in_municipal_community_center")]
        public virtual ecc_ynempty? ofm_in_municipal_community_center
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_in_municipal_community_center")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_in_municipal_community_center", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_in_municipal_community_centername")]
        public string ofm_in_municipal_community_centername
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_in_municipal_community_center"))
                {
                    return this.FormattedValues["ofm_in_municipal_community_center"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Do you have an Inclusion Policy for your program?
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_inclusion_policy")]
        public System.Nullable<bool> ofm_inclusion_policy
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_inclusion_policy");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_inclusion_policy", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_inclusion_policyname")]
        public string ofm_inclusion_policyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_inclusion_policy"))
                {
                    return this.FormattedValues["ofm_inclusion_policy"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Incorporation Number (OFM)
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_incorporation_number")]
        public string ofm_incorporation_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_incorporation_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_incorporation_number", value);
            }
        }

        /// <summary>
        /// Indigenous Led
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_indigenous_led")]
        public System.Nullable<bool> ofm_indigenous_led
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_indigenous_led");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_indigenous_led", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_indigenous_ledname")]
        public string ofm_indigenous_ledname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_indigenous_led"))
                {
                    return this.FormattedValues["ofm_indigenous_led"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_is_mailing_address_different")]
        public System.Nullable<bool> ofm_is_mailing_address_different
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_is_mailing_address_different");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_is_mailing_address_different", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_is_mailing_address_differentname")]
        public string ofm_is_mailing_address_differentname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_is_mailing_address_different"))
                {
                    return this.FormattedValues["ofm_is_mailing_address_different"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Show the field if the manual review is set to false
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_manualreviewcomments")]
        public string ofm_manualreviewcomments
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_manualreviewcomments");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_manualreviewcomments", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_now_calculated_field")]
        public System.Nullable<System.DateTime> ofm_now_calculated_field
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_now_calculated_field");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_on_k12_school_grounds_or_board_affiliated")]
        public virtual ecc_ynempty? ofm_on_k12_school_grounds_or_board_affiliated
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_on_k12_school_grounds_or_board_affiliated")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_on_k12_school_grounds_or_board_affiliated", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_on_k12_school_grounds_or_board_affiliatedname")]
        public string ofm_on_k12_school_grounds_or_board_affiliatedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_on_k12_school_grounds_or_board_affiliated"))
                {
                    return this.FormattedValues["ofm_on_k12_school_grounds_or_board_affiliated"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_on_reserve")]
        public virtual ecc_ynempty? ofm_on_reserve
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_on_reserve")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_on_reserve", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_on_reservename")]
        public string ofm_on_reservename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_on_reserve"))
                {
                    return this.FormattedValues["ofm_on_reserve"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Does your facility's not-for-profit have an open membership?
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_open_membership")]
        public virtual ecc_ynempty? ofm_open_membership
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_open_membership")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_open_membership", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_open_membershipname")]
        public string ofm_open_membershipname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_open_membership"))
                {
                    return this.FormattedValues["ofm_open_membership"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_organization_legal_name")]
        public string ofm_organization_legal_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_organization_legal_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_organization_legal_name", value);
            }
        }

        /// <summary>
        /// Ownership
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ownership")]
        public virtual ecc_Ownership? ofm_ownership
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_Ownership?)(EntityOptionSetEnum.GetEnum(this, "ofm_ownership")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_ownership", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ownershipname")]
        public string ofm_ownershipname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_ownership"))
                {
                    return this.FormattedValues["ofm_ownership"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Manual Review?
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_payment_manual_review")]
        public System.Nullable<bool> ofm_payment_manual_review
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_payment_manual_review");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_payment_manual_review", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_payment_manual_reviewname")]
        public string ofm_payment_manual_reviewname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_payment_manual_review"))
                {
                    return this.FormattedValues["ofm_payment_manual_review"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Payment Method
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_payment_method")]
        public virtual ecc_payment_method? ofm_payment_method
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_payment_method?)(EntityOptionSetEnum.GetEnum(this, "ofm_payment_method")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_payment_method", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_payment_methodname")]
        public string ofm_payment_methodname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_payment_method"))
                {
                    return this.FormattedValues["ofm_payment_method"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_personal_residence")]
        public virtual ecc_ynempty? ofm_personal_residence
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_personal_residence")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_personal_residence", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_personal_residencename")]
        public string ofm_personal_residencename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_personal_residence"))
                {
                    return this.FormattedValues["ofm_personal_residence"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for Contact associated with Organization-Facility for OFM.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_primarycontact")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_primarycontact
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_primarycontact");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_primarycontact", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_primarycontactname")]
        public string ofm_primarycontactname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_primarycontact"))
                {
                    return this.FormattedValues["ofm_primarycontact"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_primarycontactyominame")]
        public string ofm_primarycontactyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_primarycontact"))
                {
                    return this.FormattedValues["ofm_primarycontact"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The current program that a facility enrolled in
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_program")]
        public virtual ofm_program_type? ofm_program
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_program_type?)(EntityOptionSetEnum.GetEnum(this, "ofm_program")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_program", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        /// <summary>
        /// The date that the Funding Agreement is ACTIVE.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_program_start_date")]
        public System.Nullable<System.DateTime> ofm_program_start_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_program_start_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_program_start_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_programname")]
        public string ofm_programname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_program"))
                {
                    return this.FormattedValues["ofm_program"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Provider Type
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_provider_type")]
        public virtual ecc_provider_type? ofm_provider_type
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_provider_type?)(EntityOptionSetEnum.GetEnum(this, "ofm_provider_type")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_provider_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_provider_typename")]
        public string ofm_provider_typename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_provider_type"))
                {
                    return this.FormattedValues["ofm_provider_type"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_review_underway_banner")]
        public string ofm_review_underway_banner
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_review_underway_banner");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_review_underway_banner", value);
            }
        }

        /// <summary>
        /// TDAD Funding Agreement Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_tdad_funding_agreement_number")]
        public string ofm_tdad_funding_agreement_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_tdad_funding_agreement_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_tdad_funding_agreement_number", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_union_cssea")]
        public System.Nullable<bool> ofm_union_cssea
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_union_cssea");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_union_cssea", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_union_csseaname")]
        public string ofm_union_csseaname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_union_cssea"))
                {
                    return this.FormattedValues["ofm_union_cssea"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_union_description")]
        public string ofm_union_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_union_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_union_description", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_union_list")]
        public virtual System.Collections.Generic.IEnumerable<ecc_Unions> ofm_union_list
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return EntityOptionSetEnum.GetMultiEnum<ecc_Unions>(this, "ofm_union_list");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_union_list", EntityOptionSetEnum.GetMultiEnum(this, "ofm_union_list", value));
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_union_listname")]
        public string ofm_union_listname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_union_list"))
                {
                    return this.FormattedValues["ofm_union_list"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_unionized")]
        public virtual ecc_ynempty? ofm_unionized
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_unionized")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_unionized", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_unionizedname")]
        public string ofm_unionizedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_unionized"))
                {
                    return this.FormattedValues["ofm_unionized"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ypp_designation")]
        public virtual ecc_ynempty? ofm_ypp_designation
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_ypp_designation")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_ypp_designation", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ypp_designationname")]
        public string ofm_ypp_designationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_ypp_designation"))
                {
                    return this.FormattedValues["ofm_ypp_designation"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ypp_enrolled")]
        public virtual ecc_ynempty? ofm_ypp_enrolled
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_ypp_enrolled")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_ypp_enrolled", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ypp_enrolledname")]
        public string ofm_ypp_enrolledname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_ypp_enrolled"))
                {
                    return this.FormattedValues["ofm_ypp_enrolled"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows how long, in minutes, that the record was on hold.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onholdtime")]
        public System.Nullable<int> onholdtime
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("onholdtime");
            }
        }

        /// <summary>
        /// Number of open opportunities against an account and its child accounts.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opendeals")]
        public System.Nullable<int> opendeals
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("opendeals");
            }
        }

        /// <summary>
        /// Last Updated time of rollup field Open Deals.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opendeals_date")]
        public System.Nullable<System.DateTime> opendeals_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("opendeals_date");
            }
        }

        /// <summary>
        /// State of rollup field Open Deals.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opendeals_state")]
        public System.Nullable<int> opendeals_state
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("opendeals_state");
            }
        }

        /// <summary>
        /// Sum of open revenue against an account and its child accounts.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("openrevenue")]
        public Microsoft.Xrm.Sdk.Money openrevenue
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("openrevenue");
            }
        }

        /// <summary>
        /// Value of the Open Revenue in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("openrevenue_base")]
        public Microsoft.Xrm.Sdk.Money openrevenue_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("openrevenue_base");
            }
        }

        /// <summary>
        /// Last Updated time of rollup field Open Revenue.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("openrevenue_date")]
        public System.Nullable<System.DateTime> openrevenue_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("openrevenue_date");
            }
        }

        /// <summary>
        /// State of rollup field Open Revenue.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("openrevenue_state")]
        public System.Nullable<int> openrevenue_state
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("openrevenue_state");
            }
        }

        /// <summary>
        /// Shows the lead that the account was created from if the account was created by converting a lead in Microsoft Dynamics 365. This is used to relate the account to data on the originating lead for use in reporting and analytics.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingleadid")]
        public Microsoft.Xrm.Sdk.EntityReference originatingleadid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("originatingleadid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("originatingleadid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingleadidname")]
        public string originatingleadidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("originatingleadid"))
                {
                    return this.FormattedValues["originatingleadid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingleadidyominame")]
        public string originatingleadidyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("originatingleadid"))
                {
                    return this.FormattedValues["originatingleadid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select the account's ownership structure, such as public or private.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownershipcode")]
        public virtual Account_ownershipcode? ownershipcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Account_ownershipcode?)(EntityOptionSetEnum.GetEnum(this, "ownershipcode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownershipcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownershipcodename")]
        public string ownershipcodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownershipcode"))
                {
                    return this.FormattedValues["ownershipcode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows the business unit that the record owner belongs to.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier of the team who owns the account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier of the user who owns the account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Choose the parent account associated with this account to show parent and child businesses in reporting and analytics.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentaccountid")]
        public Microsoft.Xrm.Sdk.EntityReference parentaccountid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentaccountid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("parentaccountid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentaccountidname")]
        public string parentaccountidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("parentaccountid"))
                {
                    return this.FormattedValues["parentaccountid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentaccountidyominame")]
        public string parentaccountidyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("parentaccountid"))
                {
                    return this.FormattedValues["parentaccountid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For system use only. Legacy Microsoft Dynamics CRM 3.0 workflow data.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("participatesinworkflow")]
        public System.Nullable<bool> participatesinworkflow
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("participatesinworkflow");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("participatesinworkflow", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("participatesinworkflowname")]
        public string participatesinworkflowname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("participatesinworkflow"))
                {
                    return this.FormattedValues["participatesinworkflow"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select the payment terms to indicate when the customer needs to pay the total amount.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("paymenttermscode")]
        public virtual Account_paymenttermscode? paymenttermscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Account_paymenttermscode?)(EntityOptionSetEnum.GetEnum(this, "paymenttermscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("paymenttermscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("paymenttermscodename")]
        public string paymenttermscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("paymenttermscode"))
                {
                    return this.FormattedValues["paymenttermscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select the preferred day of the week for service appointments.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredappointmentdaycode")]
        public virtual Account_preferredappointmentdaycode? preferredappointmentdaycode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Account_preferredappointmentdaycode?)(EntityOptionSetEnum.GetEnum(this, "preferredappointmentdaycode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("preferredappointmentdaycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredappointmentdaycodename")]
        public string preferredappointmentdaycodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("preferredappointmentdaycode"))
                {
                    return this.FormattedValues["preferredappointmentdaycode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select the preferred time of day for service appointments.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredappointmenttimecode")]
        public virtual Account_preferredappointmenttimecode? preferredappointmenttimecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Account_preferredappointmenttimecode?)(EntityOptionSetEnum.GetEnum(this, "preferredappointmenttimecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("preferredappointmenttimecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredappointmenttimecodename")]
        public string preferredappointmenttimecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("preferredappointmenttimecode"))
                {
                    return this.FormattedValues["preferredappointmenttimecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select the preferred method of contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredcontactmethodcode")]
        public virtual Account_preferredcontactmethodcode? preferredcontactmethodcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Account_preferredcontactmethodcode?)(EntityOptionSetEnum.GetEnum(this, "preferredcontactmethodcode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("preferredcontactmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredcontactmethodcodename")]
        public string preferredcontactmethodcodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("preferredcontactmethodcode"))
                {
                    return this.FormattedValues["preferredcontactmethodcode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Choose the account's preferred service facility or equipment to make sure services are scheduled correctly for the customer.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredequipmentid")]
        public Microsoft.Xrm.Sdk.EntityReference preferredequipmentid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("preferredequipmentid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("preferredequipmentid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredequipmentidname")]
        public string preferredequipmentidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("preferredequipmentid"))
                {
                    return this.FormattedValues["preferredequipmentid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Choose the account's preferred service for reference when you schedule service activities.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredserviceid")]
        public Microsoft.Xrm.Sdk.EntityReference preferredserviceid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("preferredserviceid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("preferredserviceid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredserviceidname")]
        public string preferredserviceidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("preferredserviceid"))
                {
                    return this.FormattedValues["preferredserviceid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Choose the preferred service representative for reference when you schedule service activities for the account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredsystemuserid")]
        public Microsoft.Xrm.Sdk.EntityReference preferredsystemuserid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("preferredsystemuserid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("preferredsystemuserid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredsystemuseridname")]
        public string preferredsystemuseridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("preferredsystemuserid"))
                {
                    return this.FormattedValues["preferredsystemuserid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredsystemuseridyominame")]
        public string preferredsystemuseridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("preferredsystemuserid"))
                {
                    return this.FormattedValues["preferredsystemuserid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Choose the primary contact for the account to provide quick access to contact details.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarycontactid")]
        public Microsoft.Xrm.Sdk.EntityReference primarycontactid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("primarycontactid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("primarycontactid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarycontactidname")]
        public string primarycontactidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("primarycontactid"))
                {
                    return this.FormattedValues["primarycontactid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarycontactidyominame")]
        public string primarycontactidyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("primarycontactid"))
                {
                    return this.FormattedValues["primarycontactid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Primary Satori ID for Account
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarysatoriid")]
        public string primarysatoriid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("primarysatoriid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("primarysatoriid", value);
            }
        }

        /// <summary>
        /// Primary Twitter ID for Account
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarytwitterid")]
        public string primarytwitterid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("primarytwitterid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("primarytwitterid", value);
            }
        }

        /// <summary>
        /// Shows the ID of the process.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
        public System.Nullable<System.Guid> processid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("processid", value);
            }
        }

        /// <summary>
        /// Type the annual revenue for the account, used as an indicator in financial performance analysis.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("revenue")]
        public Microsoft.Xrm.Sdk.Money revenue
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("revenue");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("revenue", value);
            }
        }

        /// <summary>
        /// Shows the annual revenue converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("revenue_base")]
        public Microsoft.Xrm.Sdk.Money revenue_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("revenue_base");
            }
        }

        /// <summary>
        /// Type the number of shares available to the public for the account. This number is used as an indicator in financial performance analysis.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sharesoutstanding")]
        public System.Nullable<int> sharesoutstanding
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("sharesoutstanding");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("sharesoutstanding", value);
            }
        }

        /// <summary>
        /// Select a shipping method for deliveries sent to the account's address to designate the preferred carrier or other delivery option.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("shippingmethodcode")]
        public virtual Account_shippingmethodcode? shippingmethodcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Account_shippingmethodcode?)(EntityOptionSetEnum.GetEnum(this, "shippingmethodcode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("shippingmethodcodename")]
        public string shippingmethodcodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("shippingmethodcode"))
                {
                    return this.FormattedValues["shippingmethodcode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the Standard Industrial Classification (SIC) code that indicates the account's primary industry of business, for use in marketing segmentation and demographic analysis.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sic")]
        public string sic
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("sic");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("sic", value);
            }
        }

        /// <summary>
        /// Choose the service level agreement (SLA) that you want to apply to the Account record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
        public Microsoft.Xrm.Sdk.EntityReference slaid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slaid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("slaid", value);
            }
        }

        /// <summary>
        /// Last SLA that was applied to this case. This field is for internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
        public Microsoft.Xrm.Sdk.EntityReference slainvokedid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slainvokedid");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedidname")]
        public string slainvokedidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("slainvokedid"))
                {
                    return this.FormattedValues["slainvokedid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaname")]
        public string slaname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("slaid"))
                {
                    return this.FormattedValues["slaid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows the ID of the stage.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
        public System.Nullable<System.Guid> stageid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("stageid", value);
            }
        }

        /// <summary>
        /// Shows whether the account is active or inactive. Inactive accounts are read-only and can't be edited unless they are reactivated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual account_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((account_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select the account's status.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual Account_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Account_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the stock exchange at which the account is listed to track their stock and financial performance of the company.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stockexchange")]
        public string stockexchange
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("stockexchange");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("stockexchange", value);
            }
        }

        /// <summary>
        /// Number of users or conversations followed the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamsfollowed")]
        public System.Nullable<int> teamsfollowed
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("teamsfollowed");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("teamsfollowed", value);
            }
        }

        /// <summary>
        /// Type the main phone number for this account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("telephone1")]
        public string telephone1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("telephone1");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("telephone1", value);
            }
        }

        /// <summary>
        /// Type a second phone number for this account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("telephone2")]
        public string telephone2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("telephone2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("telephone2", value);
            }
        }

        /// <summary>
        /// Type a third phone number for this account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("telephone3")]
        public string telephone3
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("telephone3");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("telephone3", value);
            }
        }

        /// <summary>
        /// Select a region or territory for the account for use in segmentation and analysis.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("territorycode")]
        public virtual Account_territorycode? territorycode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Account_territorycode?)(EntityOptionSetEnum.GetEnum(this, "territorycode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("territorycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("territorycodename")]
        public string territorycodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("territorycode"))
                {
                    return this.FormattedValues["territorycode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Choose the sales region or territory for the account to make sure the account is assigned to the correct representative and for use in segmentation and analysis.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("territoryid")]
        public Microsoft.Xrm.Sdk.EntityReference territoryid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("territoryid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("territoryid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("territoryidname")]
        public string territoryidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("territoryid"))
                {
                    return this.FormattedValues["territoryid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the stock exchange symbol for the account to track financial performance of the company. You can click the code entered in this field to access the latest trading information from MSN Money.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("tickersymbol")]
        public string tickersymbol
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("tickersymbol");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("tickersymbol", value);
            }
        }

        /// <summary>
        /// Total time spent for emails (read and write) and meetings by me in relation to account record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timespentbymeonemailandmeetings")]
        public string timespentbymeonemailandmeetings
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("timespentbymeonemailandmeetings");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Choose the local currency for the record to make sure budgets are reported in the correct currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("transactioncurrencyid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
        public string transactioncurrencyidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("transactioncurrencyid"))
                {
                    return this.FormattedValues["transactioncurrencyid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
        public string traversedpath
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("traversedpath");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("traversedpath", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version number of the account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// Type the account's website URL to get quick details about the company profile.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("websiteurl")]
        public string websiteurl
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("websiteurl");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("websiteurl", value);
            }
        }

        /// <summary>
        /// Type the phonetic spelling of the company name, if specified in Japanese, to make sure the name is pronounced correctly in phone calls and other communications.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yominame")]
        public string yominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("yominame");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("yominame", value);
            }
        }

        /// <summary>
        /// 1:N Account_Email_EmailSender
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Account_Email_EmailSender")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Email> Account_Email_EmailSender
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.Email>("Account_Email_EmailSender", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.Email>("Account_Email_EmailSender", null, value);
            }
        }

        /// <summary>
        /// 1:N Account_Email_SendersAccount
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Account_Email_SendersAccount")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Email> Account_Email_SendersAccount
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.Email>("Account_Email_SendersAccount", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.Email>("Account_Email_SendersAccount", null, value);
            }
        }

        /// <summary>
        /// 1:N Account_Emails
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Account_Emails")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Email> Account_Emails
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.Email>("Account_Emails", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.Email>("Account_Emails", null, value);
            }
        }

        /// <summary>
        /// 1:N account_master_account
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_master_account", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Account> Referencedaccount_master_account
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.Account>("account_master_account", Microsoft.Xrm.Sdk.EntityRole.Referenced);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.Account>("account_master_account", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
            }
        }

        /// <summary>
        /// 1:N account_parent_account
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_parent_account", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Account> Referencedaccount_parent_account
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.Account>("account_parent_account", Microsoft.Xrm.Sdk.EntityRole.Referenced);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.Account>("account_parent_account", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
            }
        }

        /// <summary>
        /// 1:N contact_customer_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_customer_accounts")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Contact> contact_customer_accounts
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.Contact>("contact_customer_accounts", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.Contact>("contact_customer_accounts", null, value);
            }
        }

        /// <summary>
        /// 1:N msa_account_managingpartner
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msa_account_managingpartner", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Account> Referencedmsa_account_managingpartner
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.Account>("msa_account_managingpartner", Microsoft.Xrm.Sdk.EntityRole.Referenced);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.Account>("msa_account_managingpartner", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
            }
        }

        /// <summary>
        /// 1:N msa_contact_managingpartner
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msa_contact_managingpartner")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Contact> msa_contact_managingpartner
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.Contact>("msa_contact_managingpartner", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.Contact>("msa_contact_managingpartner", null, value);
            }
        }

        /// <summary>
        /// 1:N msdyn_account_account_BillingAccount
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_account_account_BillingAccount", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Account> Referencedmsdyn_account_account_BillingAccount
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.Account>("msdyn_account_account_BillingAccount", Microsoft.Xrm.Sdk.EntityRole.Referenced);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.Account>("msdyn_account_account_BillingAccount", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
            }
        }

        /// <summary>
        /// 1:N ofm_business_bceid_facility
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_business_bceid_facility")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_bceid_facility> ofm_business_bceid_facility
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_bceid_facility>("ofm_business_bceid_facility", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_bceid_facility>("ofm_business_bceid_facility", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_document_account
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_document_account")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_document> ofm_document_account
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_document>("ofm_document_account", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_document>("ofm_document_account", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_facility_application
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_facility_application")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_application> ofm_facility_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_application>("ofm_facility_application", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_application>("ofm_facility_application", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_facility_facilityintake
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_facility_facilityintake")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_facility_intake> ofm_facility_facilityintake
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_facility_intake>("ofm_facility_facilityintake", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_facility_intake>("ofm_facility_facilityintake", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_facility_licence
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_facility_licence")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_licence> ofm_facility_licence
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_licence>("ofm_facility_licence", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_licence>("ofm_facility_licence", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_facility_request_facility
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_facility_request_facility")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_facility_request> ofm_facility_request_facility
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_facility_request>("ofm_facility_request_facility", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_facility_request>("ofm_facility_request_facility", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_facility_survey_response
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_facility_survey_response")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_survey_response> ofm_facility_survey_response
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_survey_response>("ofm_facility_survey_response", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_survey_response>("ofm_facility_survey_response", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_funding_facility_account
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_funding_facility_account")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_funding> ofm_funding_facility_account
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_funding>("ofm_funding_facility_account", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_funding>("ofm_funding_facility_account", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_integrationlog_provider
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_integrationlog_provider")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_integration_log> ofm_integrationlog_provider
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_integration_log>("ofm_integrationlog_provider", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_integration_log>("ofm_integrationlog_provider", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_organization_application
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_organization_application")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_application> ofm_organization_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_application>("ofm_organization_application", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_application>("ofm_organization_application", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_organization_payment
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_organization_payment")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_payment> ofm_organization_payment
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_payment>("ofm_organization_payment", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_payment>("ofm_organization_payment", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_organization_standing_history
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_organization_standing_history")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_standing_history> ofm_organization_standing_history
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_standing_history>("ofm_organization_standing_history", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_standing_history>("ofm_organization_standing_history", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_payment_facility_account
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_payment_facility_account")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_payment> ofm_payment_facility_account
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_payment>("ofm_payment_facility_account", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_payment>("ofm_payment_facility_account", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_top_up_fund_facility
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_top_up_fund_facility")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_top_up_fund> ofm_top_up_fund_facility
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_top_up_fund>("ofm_top_up_fund_facility", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_top_up_fund>("ofm_top_up_fund_facility", null, value);
            }
        }

        /// <summary>
        /// N:1 account_master_account
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("masterid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_master_account", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
        public ECC.Core.DataContext.Account Referencingaccount_master_account
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Account>("account_master_account", Microsoft.Xrm.Sdk.EntityRole.Referencing);
            }
        }

        /// <summary>
        /// N:1 account_parent_account
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentaccountid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_parent_account", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
        public ECC.Core.DataContext.Account Referencingaccount_parent_account
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Account>("account_parent_account", Microsoft.Xrm.Sdk.EntityRole.Referencing);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Account>("account_parent_account", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
            }
        }

        /// <summary>
        /// N:1 account_primary_contact
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarycontactid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_primary_contact")]
        public ECC.Core.DataContext.Contact account_primary_contact
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("account_primary_contact", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Contact>("account_primary_contact", null, value);
            }
        }

        /// <summary>
        /// N:1 msa_account_managingpartner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msa_managingpartnerid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msa_account_managingpartner", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
        public ECC.Core.DataContext.Account Referencingmsa_account_managingpartner
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Account>("msa_account_managingpartner", Microsoft.Xrm.Sdk.EntityRole.Referencing);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Account>("msa_account_managingpartner", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
            }
        }

        /// <summary>
        /// N:1 msdyn_account_account_BillingAccount
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_billingaccount")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_account_account_BillingAccount", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
        public ECC.Core.DataContext.Account Referencingmsdyn_account_account_BillingAccount
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Account>("msdyn_account_account_BillingAccount", Microsoft.Xrm.Sdk.EntityRole.Referencing);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Account>("msdyn_account_account_BillingAccount", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
            }
        }

        /// <summary>
        /// N:1 ofm_contact_account
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_primarycontact")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_contact_account")]
        public ECC.Core.DataContext.Contact ofm_contact_account
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_contact_account", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_contact_account", null, value);
            }
        }

        /// <summary>
        /// N:1 team_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_accounts")]
        public ECC.Core.DataContext.Team team_accounts
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_accounts", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public Account(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["accountid"] = base.Id;
                        break;
                    case "accountid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// A provider contact record linked to a BCeID. This record is used to provide MyCCS portal access. This table is used by both OFM and CCOF applications 
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("contact")]
    public partial class Contact : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the contact entity
        /// </summary>
        public partial class Fields
        {
            public const string account_primary_contact = "account_primary_contact";
            public const string accountid = "accountid";
            public const string accountidname = "accountidname";
            public const string accountidyominame = "accountidyominame";
            public const string accountrolecode = "accountrolecode";
            public const string accountrolecodename = "accountrolecodename";
            public const string address1_addressid = "address1_addressid";
            public const string address1_addresstypecode = "address1_addresstypecode";
            public const string address1_addresstypecodename = "address1_addresstypecodename";
            public const string address1_city = "address1_city";
            public const string address1_composite = "address1_composite";
            public const string address1_country = "address1_country";
            public const string address1_county = "address1_county";
            public const string address1_fax = "address1_fax";
            public const string address1_freighttermscode = "address1_freighttermscode";
            public const string address1_freighttermscodename = "address1_freighttermscodename";
            public const string address1_latitude = "address1_latitude";
            public const string address1_line1 = "address1_line1";
            public const string address1_line2 = "address1_line2";
            public const string address1_line3 = "address1_line3";
            public const string address1_longitude = "address1_longitude";
            public const string address1_name = "address1_name";
            public const string address1_postalcode = "address1_postalcode";
            public const string address1_postofficebox = "address1_postofficebox";
            public const string address1_primarycontactname = "address1_primarycontactname";
            public const string address1_shippingmethodcode = "address1_shippingmethodcode";
            public const string address1_shippingmethodcodename = "address1_shippingmethodcodename";
            public const string address1_stateorprovince = "address1_stateorprovince";
            public const string address1_telephone1 = "address1_telephone1";
            public const string address1_telephone2 = "address1_telephone2";
            public const string address1_telephone3 = "address1_telephone3";
            public const string address1_upszone = "address1_upszone";
            public const string address1_utcoffset = "address1_utcoffset";
            public const string address2_addressid = "address2_addressid";
            public const string address2_addresstypecode = "address2_addresstypecode";
            public const string address2_addresstypecodename = "address2_addresstypecodename";
            public const string address2_city = "address2_city";
            public const string address2_composite = "address2_composite";
            public const string address2_country = "address2_country";
            public const string address2_county = "address2_county";
            public const string address2_fax = "address2_fax";
            public const string address2_freighttermscode = "address2_freighttermscode";
            public const string address2_freighttermscodename = "address2_freighttermscodename";
            public const string address2_latitude = "address2_latitude";
            public const string address2_line1 = "address2_line1";
            public const string address2_line2 = "address2_line2";
            public const string address2_line3 = "address2_line3";
            public const string address2_longitude = "address2_longitude";
            public const string address2_name = "address2_name";
            public const string address2_postalcode = "address2_postalcode";
            public const string address2_postofficebox = "address2_postofficebox";
            public const string address2_primarycontactname = "address2_primarycontactname";
            public const string address2_shippingmethodcode = "address2_shippingmethodcode";
            public const string address2_shippingmethodcodename = "address2_shippingmethodcodename";
            public const string address2_stateorprovince = "address2_stateorprovince";
            public const string address2_telephone1 = "address2_telephone1";
            public const string address2_telephone2 = "address2_telephone2";
            public const string address2_telephone3 = "address2_telephone3";
            public const string address2_upszone = "address2_upszone";
            public const string address2_utcoffset = "address2_utcoffset";
            public const string address3_addressid = "address3_addressid";
            public const string address3_addresstypecode = "address3_addresstypecode";
            public const string address3_addresstypecodename = "address3_addresstypecodename";
            public const string address3_city = "address3_city";
            public const string address3_composite = "address3_composite";
            public const string address3_country = "address3_country";
            public const string address3_county = "address3_county";
            public const string address3_fax = "address3_fax";
            public const string address3_freighttermscode = "address3_freighttermscode";
            public const string address3_freighttermscodename = "address3_freighttermscodename";
            public const string address3_latitude = "address3_latitude";
            public const string address3_line1 = "address3_line1";
            public const string address3_line2 = "address3_line2";
            public const string address3_line3 = "address3_line3";
            public const string address3_longitude = "address3_longitude";
            public const string address3_name = "address3_name";
            public const string address3_postalcode = "address3_postalcode";
            public const string address3_postofficebox = "address3_postofficebox";
            public const string address3_primarycontactname = "address3_primarycontactname";
            public const string address3_shippingmethodcode = "address3_shippingmethodcode";
            public const string address3_shippingmethodcodename = "address3_shippingmethodcodename";
            public const string address3_stateorprovince = "address3_stateorprovince";
            public const string address3_telephone1 = "address3_telephone1";
            public const string address3_telephone2 = "address3_telephone2";
            public const string address3_telephone3 = "address3_telephone3";
            public const string address3_upszone = "address3_upszone";
            public const string address3_utcoffset = "address3_utcoffset";
            public const string adx_confirmremovepassword = "adx_confirmremovepassword";
            public const string adx_confirmremovepasswordname = "adx_confirmremovepasswordname";
            public const string adx_createdbyipaddress = "adx_createdbyipaddress";
            public const string adx_createdbyusername = "adx_createdbyusername";
            public const string adx_identity_accessfailedcount = "adx_identity_accessfailedcount";
            public const string adx_identity_emailaddress1confirmed = "adx_identity_emailaddress1confirmed";
            public const string adx_identity_emailaddress1confirmedname = "adx_identity_emailaddress1confirmedname";
            public const string adx_identity_lastsuccessfullogin = "adx_identity_lastsuccessfullogin";
            public const string adx_identity_locallogindisabled = "adx_identity_locallogindisabled";
            public const string adx_identity_locallogindisabledname = "adx_identity_locallogindisabledname";
            public const string adx_identity_lockoutenabled = "adx_identity_lockoutenabled";
            public const string adx_identity_lockoutenabledname = "adx_identity_lockoutenabledname";
            public const string adx_identity_lockoutenddate = "adx_identity_lockoutenddate";
            public const string adx_identity_logonenabled = "adx_identity_logonenabled";
            public const string adx_identity_logonenabledname = "adx_identity_logonenabledname";
            public const string adx_identity_mobilephoneconfirmed = "adx_identity_mobilephoneconfirmed";
            public const string adx_identity_mobilephoneconfirmedname = "adx_identity_mobilephoneconfirmedname";
            public const string adx_identity_newpassword = "adx_identity_newpassword";
            public const string adx_identity_passwordhash = "adx_identity_passwordhash";
            public const string adx_identity_securitystamp = "adx_identity_securitystamp";
            public const string adx_identity_twofactorenabled = "adx_identity_twofactorenabled";
            public const string adx_identity_twofactorenabledname = "adx_identity_twofactorenabledname";
            public const string adx_identity_username = "adx_identity_username";
            public const string adx_modifiedbyipaddress = "adx_modifiedbyipaddress";
            public const string adx_modifiedbyusername = "adx_modifiedbyusername";
            public const string adx_organizationname = "adx_organizationname";
            public const string adx_preferredlcid = "adx_preferredlcid";
            public const string adx_profilealert = "adx_profilealert";
            public const string adx_profilealertdate = "adx_profilealertdate";
            public const string adx_profilealertinstructions = "adx_profilealertinstructions";
            public const string adx_profilealertname = "adx_profilealertname";
            public const string adx_profileisanonymous = "adx_profileisanonymous";
            public const string adx_profileisanonymousname = "adx_profileisanonymousname";
            public const string adx_profilelastactivity = "adx_profilelastactivity";
            public const string adx_profilemodifiedon = "adx_profilemodifiedon";
            public const string adx_publicprofilecopy = "adx_publicprofilecopy";
            public const string adx_timezone = "adx_timezone";
            public const string aging30 = "aging30";
            public const string aging30_base = "aging30_base";
            public const string aging60 = "aging60";
            public const string aging60_base = "aging60_base";
            public const string aging90 = "aging90";
            public const string aging90_base = "aging90_base";
            public const string anniversary = "anniversary";
            public const string annualincome = "annualincome";
            public const string annualincome_base = "annualincome_base";
            public const string assistantname = "assistantname";
            public const string assistantphone = "assistantphone";
            public const string birthdate = "birthdate";
            public const string business2 = "business2";
            public const string businesscard = "businesscard";
            public const string businesscardattributes = "businesscardattributes";
            public const string callback = "callback";
            public const string ccof_role = "ccof_role";
            public const string ccof_rolename = "ccof_rolename";
            public const string ccof_userid = "ccof_userid";
            public const string ccof_username = "ccof_username";
            public const string childrensnames = "childrensnames";
            public const string company = "company";
            public const string contact_customer_accounts = "contact_customer_accounts";
            public const string Referencingcontact_customer_contacts = "contact_customer_contacts";
            public const string Contact_Email_EmailSender = "Contact_Email_EmailSender";
            public const string Contact_Emails = "Contact_Emails";
            public const string Referencingcontact_master_contact = "contact_master_contact";
            public const string Referencingcontact_parent_contact = "contact_parent_contact";
            public const string contactid = "contactid";
            public const string Id = "contactid";
            public const string createdby = "createdby";
            public const string createdbyexternalparty = "createdbyexternalparty";
            public const string createdbyexternalpartyname = "createdbyexternalpartyname";
            public const string createdbyexternalpartyyominame = "createdbyexternalpartyyominame";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string creditlimit = "creditlimit";
            public const string creditlimit_base = "creditlimit_base";
            public const string creditonhold = "creditonhold";
            public const string creditonholdname = "creditonholdname";
            public const string customersizecode = "customersizecode";
            public const string customersizecodename = "customersizecodename";
            public const string customertypecode = "customertypecode";
            public const string customertypecodename = "customertypecodename";
            public const string defaultpricelevelid = "defaultpricelevelid";
            public const string defaultpricelevelidname = "defaultpricelevelidname";
            public const string department = "department";
            public const string description = "description";
            public const string donotbulkemail = "donotbulkemail";
            public const string donotbulkemailname = "donotbulkemailname";
            public const string donotbulkpostalmail = "donotbulkpostalmail";
            public const string donotbulkpostalmailname = "donotbulkpostalmailname";
            public const string donotemail = "donotemail";
            public const string donotemailname = "donotemailname";
            public const string donotfax = "donotfax";
            public const string donotfaxname = "donotfaxname";
            public const string donotphone = "donotphone";
            public const string donotphonename = "donotphonename";
            public const string donotpostalmail = "donotpostalmail";
            public const string donotpostalmailname = "donotpostalmailname";
            public const string donotsendmarketingmaterialname = "donotsendmarketingmaterialname";
            public const string donotsendmm = "donotsendmm";
            public const string educationcode = "educationcode";
            public const string educationcodename = "educationcodename";
            public const string emailaddress1 = "emailaddress1";
            public const string emailaddress2 = "emailaddress2";
            public const string emailaddress3 = "emailaddress3";
            public const string employeeid = "employeeid";
            public const string entityimage = "entityimage";
            public const string entityimage_timestamp = "entityimage_timestamp";
            public const string entityimage_url = "entityimage_url";
            public const string entityimageid = "entityimageid";
            public const string exchangerate = "exchangerate";
            public const string externaluseridentifier = "externaluseridentifier";
            public const string familystatuscode = "familystatuscode";
            public const string familystatuscodename = "familystatuscodename";
            public const string fax = "fax";
            public const string firstname = "firstname";
            public const string followemail = "followemail";
            public const string followemailname = "followemailname";
            public const string ftpsiteurl = "ftpsiteurl";
            public const string fullname = "fullname";
            public const string gendercode = "gendercode";
            public const string gendercodename = "gendercodename";
            public const string governmentid = "governmentid";
            public const string haschildrencode = "haschildrencode";
            public const string haschildrencodename = "haschildrencodename";
            public const string home2 = "home2";
            public const string importsequencenumber = "importsequencenumber";
            public const string isbackofficecustomer = "isbackofficecustomer";
            public const string isbackofficecustomername = "isbackofficecustomername";
            public const string isprivatename = "isprivatename";
            public const string jobtitle = "jobtitle";
            public const string lastname = "lastname";
            public const string lastonholdtime = "lastonholdtime";
            public const string lastusedincampaign = "lastusedincampaign";
            public const string leadsourcecode = "leadsourcecode";
            public const string leadsourcecodename = "leadsourcecodename";
            public const string managername = "managername";
            public const string managerphone = "managerphone";
            public const string marketingonly = "marketingonly";
            public const string marketingonlyname = "marketingonlyname";
            public const string mastercontactidname = "mastercontactidname";
            public const string mastercontactidyominame = "mastercontactidyominame";
            public const string masterid = "masterid";
            public const string merged = "merged";
            public const string mergedname = "mergedname";
            public const string middlename = "middlename";
            public const string mobilephone = "mobilephone";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyexternalparty = "modifiedbyexternalparty";
            public const string modifiedbyexternalpartyname = "modifiedbyexternalpartyname";
            public const string modifiedbyexternalpartyyominame = "modifiedbyexternalpartyyominame";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string msa_contact_managingpartner = "msa_contact_managingpartner";
            public const string msa_managingpartnerid = "msa_managingpartnerid";
            public const string msa_managingpartneridname = "msa_managingpartneridname";
            public const string msa_managingpartneridyominame = "msa_managingpartneridyominame";
            public const string msdyn_contactkpiid = "msdyn_contactkpiid";
            public const string msdyn_contactkpiidname = "msdyn_contactkpiidname";
            public const string msdyn_decisioninfluencetag = "msdyn_decisioninfluencetag";
            public const string msdyn_decisioninfluencetagname = "msdyn_decisioninfluencetagname";
            public const string msdyn_disablewebtracking = "msdyn_disablewebtracking";
            public const string msdyn_disablewebtrackingname = "msdyn_disablewebtrackingname";
            public const string msdyn_gdproptout = "msdyn_gdproptout";
            public const string msdyn_gdproptoutname = "msdyn_gdproptoutname";
            public const string msdyn_isassistantinorgchart = "msdyn_isassistantinorgchart";
            public const string msdyn_isassistantinorgchartname = "msdyn_isassistantinorgchartname";
            public const string msdyn_isminor = "msdyn_isminor";
            public const string msdyn_isminorname = "msdyn_isminorname";
            public const string msdyn_isminorwithparentalconsent = "msdyn_isminorwithparentalconsent";
            public const string msdyn_isminorwithparentalconsentname = "msdyn_isminorwithparentalconsentname";
            public const string msdyn_orgchangestatus = "msdyn_orgchangestatus";
            public const string msdyn_orgchangestatusname = "msdyn_orgchangestatusname";
            public const string msdyn_portaltermsagreementdate = "msdyn_portaltermsagreementdate";
            public const string msdyn_primarytimezone = "msdyn_primarytimezone";
            public const string msdyn_segmentid = "msdyn_segmentid";
            public const string msdyn_segmentidname = "msdyn_segmentidname";
            public const string msft_datastate = "msft_datastate";
            public const string msft_datastatename = "msft_datastatename";
            public const string mspp_userpreferredlcid = "mspp_userpreferredlcid";
            public const string mspp_userpreferredlcidname = "mspp_userpreferredlcidname";
            public const string nickname = "nickname";
            public const string numberofchildren = "numberofchildren";
            public const string ofm_assistance_request_contact = "ofm_assistance_request_contact";
            public const string ofm_contact_account = "ofm_contact_account";
            public const string ofm_contact_applications = "ofm_contact_applications";
            public const string ofm_contact_funding = "ofm_contact_funding";
            public const string ofm_contact_funding_decliner = "ofm_contact_funding_decliner";
            public const string ofm_contact_survey_response = "ofm_contact_survey_response";
            public const string ofm_createdby_application = "ofm_createdby_application";
            public const string ofm_expenseauthority_application = "ofm_expenseauthority_application";
            public const string ofm_facility_business_bceid = "ofm_facility_business_bceid";
            public const string ofm_first_name = "ofm_first_name";
            public const string ofm_last_name = "ofm_last_name";
            public const string ofm_portal_role_contact = "ofm_portal_role_contact";
            public const string ofm_portal_role_id = "ofm_portal_role_id";
            public const string ofm_portal_role_idname = "ofm_portal_role_idname";
            public const string ofm_request_contact = "ofm_request_contact";
            public const string ofm_secondary_contact_application = "ofm_secondary_contact_application";
            public const string ofm_social_insurance_number = "ofm_social_insurance_number";
            public const string ofm_social_insurance_number_for_mask = "ofm_social_insurance_number_for_mask";
            public const string ofm_submittedby_application = "ofm_submittedby_application";
            public const string ofm_supplier_issue = "ofm_supplier_issue";
            public const string ofm_supplier_issuename = "ofm_supplier_issuename";
            public const string ofm_supplier_number = "ofm_supplier_number";
            public const string ofm_supplier_site_number = "ofm_supplier_site_number";
            public const string onholdtime = "onholdtime";
            public const string originatingleadid = "originatingleadid";
            public const string originatingleadidname = "originatingleadidname";
            public const string originatingleadidyominame = "originatingleadidyominame";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string pager = "pager";
            public const string parent_contactid = "parent_contactid";
            public const string parent_contactidname = "parent_contactidname";
            public const string parent_contactidyominame = "parent_contactidyominame";
            public const string parentcontactid = "parentcontactid";
            public const string parentcontactidname = "parentcontactidname";
            public const string parentcontactidyominame = "parentcontactidyominame";
            public const string parentcustomerid = "parentcustomerid";
            public const string parentcustomeridname = "parentcustomeridname";
            public const string parentcustomeridyominame = "parentcustomeridyominame";
            public const string participatesinworkflow = "participatesinworkflow";
            public const string participatesinworkflowname = "participatesinworkflowname";
            public const string paymenttermscode = "paymenttermscode";
            public const string paymenttermscodename = "paymenttermscodename";
            public const string preferredappointmentdaycode = "preferredappointmentdaycode";
            public const string preferredappointmentdaycodename = "preferredappointmentdaycodename";
            public const string preferredappointmenttimecode = "preferredappointmenttimecode";
            public const string preferredappointmenttimecodename = "preferredappointmenttimecodename";
            public const string preferredcontactmethodcode = "preferredcontactmethodcode";
            public const string preferredcontactmethodcodename = "preferredcontactmethodcodename";
            public const string preferredequipmentid = "preferredequipmentid";
            public const string preferredequipmentidname = "preferredequipmentidname";
            public const string preferredserviceid = "preferredserviceid";
            public const string preferredserviceidname = "preferredserviceidname";
            public const string preferredsystemuserid = "preferredsystemuserid";
            public const string preferredsystemuseridname = "preferredsystemuseridname";
            public const string preferredsystemuseridyominame = "preferredsystemuseridyominame";
            public const string processid = "processid";
            public const string Referencedcontact_customer_contacts = "Referencedcontact_customer_contacts";
            public const string Referencedcontact_master_contact = "Referencedcontact_master_contact";
            public const string Referencedcontact_parent_contact = "Referencedcontact_parent_contact";
            public const string salutation = "salutation";
            public const string shippingmethodcode = "shippingmethodcode";
            public const string shippingmethodcodename = "shippingmethodcodename";
            public const string slaid = "slaid";
            public const string slainvokedid = "slainvokedid";
            public const string slainvokedidname = "slainvokedidname";
            public const string slaname = "slaname";
            public const string spousesname = "spousesname";
            public const string stageid = "stageid";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string subscriptionid = "subscriptionid";
            public const string suffix = "suffix";
            public const string team_contacts = "team_contacts";
            public const string teamsfollowed = "teamsfollowed";
            public const string telephone1 = "telephone1";
            public const string telephone2 = "telephone2";
            public const string telephone3 = "telephone3";
            public const string territorycode = "territorycode";
            public const string territorycodename = "territorycodename";
            public const string timespentbymeonemailandmeetings = "timespentbymeonemailandmeetings";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string transactioncurrencyid = "transactioncurrencyid";
            public const string transactioncurrencyidname = "transactioncurrencyidname";
            public const string traversedpath = "traversedpath";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
            public const string websiteurl = "websiteurl";
            public const string yomifirstname = "yomifirstname";
            public const string yomifullname = "yomifullname";
            public const string yomilastname = "yomilastname";
            public const string yomimiddlename = "yomimiddlename";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public Contact(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public Contact(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public Contact(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ccof_userid|ccof_username";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public Contact() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "contactid";

        public const string PrimaryNameAttribute = "fullname";

        public const string EntitySchemaName = "Contact";

        public const string EntityLogicalName = "contact";

        public const string EntityLogicalCollectionName = "contacts";

        public const string EntitySetName = "contacts";

        /// <summary>
        /// Unique identifier of the account with which the contact is associated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountid")]
        public Microsoft.Xrm.Sdk.EntityReference accountid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("accountid");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountidname")]
        public string accountidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("accountid"))
                {
                    return this.FormattedValues["accountid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountidyominame")]
        public string accountidyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("accountid"))
                {
                    return this.FormattedValues["accountid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select the contact's role within the company or sales process, such as decision maker, employee, or influencer.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountrolecode")]
        public virtual Contact_accountrolecode? accountrolecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_accountrolecode?)(EntityOptionSetEnum.GetEnum(this, "accountrolecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("accountrolecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountrolecodename")]
        public string accountrolecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("accountrolecode"))
                {
                    return this.FormattedValues["accountrolecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for address 1.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_addressid")]
        public System.Nullable<System.Guid> address1_addressid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("address1_addressid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_addressid", value);
            }
        }

        /// <summary>
        /// Select the primary address type.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_addresstypecode")]
        public virtual Contact_address1_addresstypecode? address1_addresstypecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_address1_addresstypecode?)(EntityOptionSetEnum.GetEnum(this, "address1_addresstypecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_addresstypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_addresstypecodename")]
        public string address1_addresstypecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("address1_addresstypecode"))
                {
                    return this.FormattedValues["address1_addresstypecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the city for the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_city")]
        public string address1_city
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_city");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_city", value);
            }
        }

        /// <summary>
        /// Shows the complete primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_composite")]
        public string address1_composite
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_composite");
            }
        }

        /// <summary>
        /// Type the country or region for the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_country")]
        public string address1_country
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_country");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_country", value);
            }
        }

        /// <summary>
        /// Type the county for the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_county")]
        public string address1_county
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_county");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_county", value);
            }
        }

        /// <summary>
        /// Type the fax number associated with the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_fax")]
        public string address1_fax
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_fax");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_fax", value);
            }
        }

        /// <summary>
        /// Select the freight terms for the primary address to make sure shipping orders are processed correctly.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_freighttermscode")]
        public virtual Contact_address1_freighttermscode? address1_freighttermscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_address1_freighttermscode?)(EntityOptionSetEnum.GetEnum(this, "address1_freighttermscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_freighttermscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_freighttermscodename")]
        public string address1_freighttermscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("address1_freighttermscode"))
                {
                    return this.FormattedValues["address1_freighttermscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the latitude value for the primary address for use in mapping and other applications.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_latitude")]
        public System.Nullable<double> address1_latitude
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<double>>("address1_latitude");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_latitude", value);
            }
        }

        /// <summary>
        /// Type the first line of the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_line1")]
        public string address1_line1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_line1");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_line1", value);
            }
        }

        /// <summary>
        /// Type the second line of the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_line2")]
        public string address1_line2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_line2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_line2", value);
            }
        }

        /// <summary>
        /// Type the third line of the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_line3")]
        public string address1_line3
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_line3");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_line3", value);
            }
        }

        /// <summary>
        /// Type the longitude value for the primary address for use in mapping and other applications.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_longitude")]
        public System.Nullable<double> address1_longitude
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<double>>("address1_longitude");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_longitude", value);
            }
        }

        /// <summary>
        /// Type a descriptive name for the primary address, such as Corporate Headquarters.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_name")]
        public string address1_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_name", value);
            }
        }

        /// <summary>
        /// Type the ZIP Code or postal code for the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_postalcode")]
        public string address1_postalcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_postalcode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_postalcode", value);
            }
        }

        /// <summary>
        /// Type the post office box number of the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_postofficebox")]
        public string address1_postofficebox
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_postofficebox");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_postofficebox", value);
            }
        }

        /// <summary>
        /// Type the name of the main contact at the account's primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_primarycontactname")]
        public string address1_primarycontactname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_primarycontactname");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_primarycontactname", value);
            }
        }

        /// <summary>
        /// Select a shipping method for deliveries sent to this address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_shippingmethodcode")]
        public virtual Contact_address1_shippingmethodcode? address1_shippingmethodcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_address1_shippingmethodcode?)(EntityOptionSetEnum.GetEnum(this, "address1_shippingmethodcode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_shippingmethodcodename")]
        public string address1_shippingmethodcodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("address1_shippingmethodcode"))
                {
                    return this.FormattedValues["address1_shippingmethodcode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the state or province of the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_stateorprovince")]
        public string address1_stateorprovince
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_stateorprovince");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_stateorprovince", value);
            }
        }

        /// <summary>
        /// Type the main phone number associated with the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_telephone1")]
        public string address1_telephone1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_telephone1");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_telephone1", value);
            }
        }

        /// <summary>
        /// Type a second phone number associated with the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_telephone2")]
        public string address1_telephone2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_telephone2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_telephone2", value);
            }
        }

        /// <summary>
        /// Type a third phone number associated with the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_telephone3")]
        public string address1_telephone3
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_telephone3");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_telephone3", value);
            }
        }

        /// <summary>
        /// Type the UPS zone of the primary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_upszone")]
        public string address1_upszone
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address1_upszone");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_upszone", value);
            }
        }

        /// <summary>
        /// Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_utcoffset")]
        public System.Nullable<int> address1_utcoffset
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("address1_utcoffset");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address1_utcoffset", value);
            }
        }

        /// <summary>
        /// Unique identifier for address 2.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_addressid")]
        public System.Nullable<System.Guid> address2_addressid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("address2_addressid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_addressid", value);
            }
        }

        /// <summary>
        /// Select the secondary address type.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_addresstypecode")]
        public virtual Contact_address2_addresstypecode? address2_addresstypecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_address2_addresstypecode?)(EntityOptionSetEnum.GetEnum(this, "address2_addresstypecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_addresstypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_addresstypecodename")]
        public string address2_addresstypecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("address2_addresstypecode"))
                {
                    return this.FormattedValues["address2_addresstypecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the city for the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_city")]
        public string address2_city
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_city");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_city", value);
            }
        }

        /// <summary>
        /// Shows the complete secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_composite")]
        public string address2_composite
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_composite");
            }
        }

        /// <summary>
        /// Type the country or region for the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_country")]
        public string address2_country
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_country");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_country", value);
            }
        }

        /// <summary>
        /// Type the county for the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_county")]
        public string address2_county
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_county");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_county", value);
            }
        }

        /// <summary>
        /// Type the fax number associated with the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_fax")]
        public string address2_fax
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_fax");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_fax", value);
            }
        }

        /// <summary>
        /// Select the freight terms for the secondary address to make sure shipping orders are processed correctly.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_freighttermscode")]
        public virtual Contact_address2_freighttermscode? address2_freighttermscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_address2_freighttermscode?)(EntityOptionSetEnum.GetEnum(this, "address2_freighttermscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_freighttermscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_freighttermscodename")]
        public string address2_freighttermscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("address2_freighttermscode"))
                {
                    return this.FormattedValues["address2_freighttermscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the latitude value for the secondary address for use in mapping and other applications.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_latitude")]
        public System.Nullable<double> address2_latitude
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<double>>("address2_latitude");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_latitude", value);
            }
        }

        /// <summary>
        /// Type the first line of the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_line1")]
        public string address2_line1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_line1");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_line1", value);
            }
        }

        /// <summary>
        /// Type the second line of the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_line2")]
        public string address2_line2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_line2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_line2", value);
            }
        }

        /// <summary>
        /// Type the third line of the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_line3")]
        public string address2_line3
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_line3");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_line3", value);
            }
        }

        /// <summary>
        /// Type the longitude value for the secondary address for use in mapping and other applications.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_longitude")]
        public System.Nullable<double> address2_longitude
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<double>>("address2_longitude");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_longitude", value);
            }
        }

        /// <summary>
        /// Type a descriptive name for the secondary address, such as Corporate Headquarters.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_name")]
        public string address2_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_name", value);
            }
        }

        /// <summary>
        /// Type the ZIP Code or postal code for the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_postalcode")]
        public string address2_postalcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_postalcode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_postalcode", value);
            }
        }

        /// <summary>
        /// Type the post office box number of the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_postofficebox")]
        public string address2_postofficebox
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_postofficebox");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_postofficebox", value);
            }
        }

        /// <summary>
        /// Type the name of the main contact at the account's secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_primarycontactname")]
        public string address2_primarycontactname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_primarycontactname");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_primarycontactname", value);
            }
        }

        /// <summary>
        /// Select a shipping method for deliveries sent to this address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_shippingmethodcode")]
        public virtual Contact_address2_shippingmethodcode? address2_shippingmethodcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_address2_shippingmethodcode?)(EntityOptionSetEnum.GetEnum(this, "address2_shippingmethodcode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_shippingmethodcodename")]
        public string address2_shippingmethodcodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("address2_shippingmethodcode"))
                {
                    return this.FormattedValues["address2_shippingmethodcode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the state or province of the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_stateorprovince")]
        public string address2_stateorprovince
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_stateorprovince");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_stateorprovince", value);
            }
        }

        /// <summary>
        /// Type the main phone number associated with the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_telephone1")]
        public string address2_telephone1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_telephone1");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_telephone1", value);
            }
        }

        /// <summary>
        /// Type a second phone number associated with the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_telephone2")]
        public string address2_telephone2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_telephone2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_telephone2", value);
            }
        }

        /// <summary>
        /// Type a third phone number associated with the secondary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_telephone3")]
        public string address2_telephone3
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_telephone3");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_telephone3", value);
            }
        }

        /// <summary>
        /// Type the UPS zone of the secondary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_upszone")]
        public string address2_upszone
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address2_upszone");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_upszone", value);
            }
        }

        /// <summary>
        /// Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_utcoffset")]
        public System.Nullable<int> address2_utcoffset
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("address2_utcoffset");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address2_utcoffset", value);
            }
        }

        /// <summary>
        /// Unique identifier for address 3.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_addressid")]
        public System.Nullable<System.Guid> address3_addressid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("address3_addressid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address3_addressid", value);
            }
        }

        /// <summary>
        /// Select the third address type.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_addresstypecode")]
        public virtual Contact_address3_addresstypecode? address3_addresstypecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_address3_addresstypecode?)(EntityOptionSetEnum.GetEnum(this, "address3_addresstypecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address3_addresstypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_addresstypecodename")]
        public string address3_addresstypecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("address3_addresstypecode"))
                {
                    return this.FormattedValues["address3_addresstypecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the city for the 3rd address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_city")]
        public string address3_city
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address3_city");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address3_city", value);
            }
        }

        /// <summary>
        /// Shows the complete third address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_composite")]
        public string address3_composite
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address3_composite");
            }
        }

        /// <summary>
        /// the country or region for the 3rd address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_country")]
        public string address3_country
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address3_country");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address3_country", value);
            }
        }

        /// <summary>
        /// Type the county for the third address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_county")]
        public string address3_county
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address3_county");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address3_county", value);
            }
        }

        /// <summary>
        /// Type the fax number associated with the third address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_fax")]
        public string address3_fax
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address3_fax");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address3_fax", value);
            }
        }

        /// <summary>
        /// Select the freight terms for the third address to make sure shipping orders are processed correctly.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_freighttermscode")]
        public virtual Contact_address3_freighttermscode? address3_freighttermscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_address3_freighttermscode?)(EntityOptionSetEnum.GetEnum(this, "address3_freighttermscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address3_freighttermscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_freighttermscodename")]
        public string address3_freighttermscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("address3_freighttermscode"))
                {
                    return this.FormattedValues["address3_freighttermscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the latitude value for the third address for use in mapping and other applications.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_latitude")]
        public System.Nullable<double> address3_latitude
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<double>>("address3_latitude");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address3_latitude", value);
            }
        }

        /// <summary>
        /// the first line of the 3rd address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_line1")]
        public string address3_line1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address3_line1");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address3_line1", value);
            }
        }

        /// <summary>
        /// the second line of the 3rd address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_line2")]
        public string address3_line2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address3_line2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address3_line2", value);
            }
        }

        /// <summary>
        /// the third line of the 3rd address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_line3")]
        public string address3_line3
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address3_line3");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address3_line3", value);
            }
        }

        /// <summary>
        /// Type the longitude value for the third address for use in mapping and other applications.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_longitude")]
        public System.Nullable<double> address3_longitude
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<double>>("address3_longitude");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address3_longitude", value);
            }
        }

        /// <summary>
        /// Type a descriptive name for the third address, such as Corporate Headquarters.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_name")]
        public string address3_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address3_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address3_name", value);
            }
        }

        /// <summary>
        /// the ZIP Code or postal code for the 3rd address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_postalcode")]
        public string address3_postalcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address3_postalcode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address3_postalcode", value);
            }
        }

        /// <summary>
        /// the post office box number of the 3rd address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_postofficebox")]
        public string address3_postofficebox
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address3_postofficebox");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address3_postofficebox", value);
            }
        }

        /// <summary>
        /// Type the name of the main contact at the account's third address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_primarycontactname")]
        public string address3_primarycontactname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address3_primarycontactname");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address3_primarycontactname", value);
            }
        }

        /// <summary>
        /// Select a shipping method for deliveries sent to this address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_shippingmethodcode")]
        public virtual Contact_address3_shippingmethodcode? address3_shippingmethodcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_address3_shippingmethodcode?)(EntityOptionSetEnum.GetEnum(this, "address3_shippingmethodcode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address3_shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_shippingmethodcodename")]
        public string address3_shippingmethodcodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("address3_shippingmethodcode"))
                {
                    return this.FormattedValues["address3_shippingmethodcode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// the state or province of the third address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_stateorprovince")]
        public string address3_stateorprovince
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address3_stateorprovince");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address3_stateorprovince", value);
            }
        }

        /// <summary>
        /// Type the main phone number associated with the third address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_telephone1")]
        public string address3_telephone1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address3_telephone1");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address3_telephone1", value);
            }
        }

        /// <summary>
        /// Type a second phone number associated with the third address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_telephone2")]
        public string address3_telephone2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address3_telephone2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address3_telephone2", value);
            }
        }

        /// <summary>
        /// Type a third phone number associated with the primary address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_telephone3")]
        public string address3_telephone3
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address3_telephone3");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address3_telephone3", value);
            }
        }

        /// <summary>
        /// Type the UPS zone of the third address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_upszone")]
        public string address3_upszone
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("address3_upszone");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address3_upszone", value);
            }
        }

        /// <summary>
        /// Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_utcoffset")]
        public System.Nullable<int> address3_utcoffset
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("address3_utcoffset");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("address3_utcoffset", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_confirmremovepassword")]
        public System.Nullable<bool> adx_confirmremovepassword
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("adx_confirmremovepassword");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_confirmremovepassword", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_confirmremovepasswordname")]
        public string adx_confirmremovepasswordname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("adx_confirmremovepassword"))
                {
                    return this.FormattedValues["adx_confirmremovepassword"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_createdbyipaddress")]
        public string adx_createdbyipaddress
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("adx_createdbyipaddress");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_createdbyipaddress", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_createdbyusername")]
        public string adx_createdbyusername
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("adx_createdbyusername");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_createdbyusername", value);
            }
        }

        /// <summary>
        /// Shows the current count of failed password attempts for the contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_accessfailedcount")]
        public System.Nullable<int> adx_identity_accessfailedcount
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("adx_identity_accessfailedcount");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_identity_accessfailedcount", value);
            }
        }

        /// <summary>
        /// Determines if the email is confirmed by the contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_emailaddress1confirmed")]
        public System.Nullable<bool> adx_identity_emailaddress1confirmed
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("adx_identity_emailaddress1confirmed");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_identity_emailaddress1confirmed", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_emailaddress1confirmedname")]
        public string adx_identity_emailaddress1confirmedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("adx_identity_emailaddress1confirmed"))
                {
                    return this.FormattedValues["adx_identity_emailaddress1confirmed"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Indicates the last date and time the user successfully signed in to a portal.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_lastsuccessfullogin")]
        public System.Nullable<System.DateTime> adx_identity_lastsuccessfullogin
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("adx_identity_lastsuccessfullogin");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_identity_lastsuccessfullogin", value);
            }
        }

        /// <summary>
        /// Indicates that the contact can no longer sign in to the portal using the local account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_locallogindisabled")]
        public System.Nullable<bool> adx_identity_locallogindisabled
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("adx_identity_locallogindisabled");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_identity_locallogindisabled", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_locallogindisabledname")]
        public string adx_identity_locallogindisabledname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("adx_identity_locallogindisabled"))
                {
                    return this.FormattedValues["adx_identity_locallogindisabled"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Determines if this contact will track failed access attempts and become locked after too many failed attempts. To prevent the contact from becoming locked, you can disable this setting.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_lockoutenabled")]
        public System.Nullable<bool> adx_identity_lockoutenabled
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("adx_identity_lockoutenabled");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_identity_lockoutenabled", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_lockoutenabledname")]
        public string adx_identity_lockoutenabledname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("adx_identity_lockoutenabled"))
                {
                    return this.FormattedValues["adx_identity_lockoutenabled"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows the moment in time when the locked contact becomes unlocked again.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_lockoutenddate")]
        public System.Nullable<System.DateTime> adx_identity_lockoutenddate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("adx_identity_lockoutenddate");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_identity_lockoutenddate", value);
            }
        }

        /// <summary>
        /// Determines if web authentication is enabled for the contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_logonenabled")]
        public System.Nullable<bool> adx_identity_logonenabled
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("adx_identity_logonenabled");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_identity_logonenabled", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_logonenabledname")]
        public string adx_identity_logonenabledname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("adx_identity_logonenabled"))
                {
                    return this.FormattedValues["adx_identity_logonenabled"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Determines if the phone number is confirmed by the contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_mobilephoneconfirmed")]
        public System.Nullable<bool> adx_identity_mobilephoneconfirmed
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("adx_identity_mobilephoneconfirmed");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_identity_mobilephoneconfirmed", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_mobilephoneconfirmedname")]
        public string adx_identity_mobilephoneconfirmedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("adx_identity_mobilephoneconfirmed"))
                {
                    return this.FormattedValues["adx_identity_mobilephoneconfirmed"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_newpassword")]
        public string adx_identity_newpassword
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("adx_identity_newpassword");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_identity_newpassword", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_passwordhash")]
        public string adx_identity_passwordhash
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("adx_identity_passwordhash");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_identity_passwordhash", value);
            }
        }

        /// <summary>
        /// A token used to manage the web authentication session.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_securitystamp")]
        public string adx_identity_securitystamp
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("adx_identity_securitystamp");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_identity_securitystamp", value);
            }
        }

        /// <summary>
        /// Determines if two-factor authentication is enabled for the contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_twofactorenabled")]
        public System.Nullable<bool> adx_identity_twofactorenabled
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("adx_identity_twofactorenabled");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_identity_twofactorenabled", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_twofactorenabledname")]
        public string adx_identity_twofactorenabledname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("adx_identity_twofactorenabled"))
                {
                    return this.FormattedValues["adx_identity_twofactorenabled"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows the user identity for local web authentication.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_username")]
        public string adx_identity_username
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("adx_identity_username");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_identity_username", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_modifiedbyipaddress")]
        public string adx_modifiedbyipaddress
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("adx_modifiedbyipaddress");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_modifiedbyipaddress", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_modifiedbyusername")]
        public string adx_modifiedbyusername
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("adx_modifiedbyusername");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_modifiedbyusername", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_organizationname")]
        public string adx_organizationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("adx_organizationname");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_organizationname", value);
            }
        }

        /// <summary>
        /// User’s preferred portal LCID
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_preferredlcid")]
        public System.Nullable<int> adx_preferredlcid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("adx_preferredlcid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_preferredlcid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profilealert")]
        public System.Nullable<bool> adx_profilealert
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("adx_profilealert");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_profilealert", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profilealertdate")]
        public System.Nullable<System.DateTime> adx_profilealertdate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("adx_profilealertdate");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_profilealertdate", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profilealertinstructions")]
        public string adx_profilealertinstructions
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("adx_profilealertinstructions");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_profilealertinstructions", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profilealertname")]
        public string adx_profilealertname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("adx_profilealert"))
                {
                    return this.FormattedValues["adx_profilealert"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profileisanonymous")]
        public System.Nullable<bool> adx_profileisanonymous
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("adx_profileisanonymous");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_profileisanonymous", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profileisanonymousname")]
        public string adx_profileisanonymousname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("adx_profileisanonymous"))
                {
                    return this.FormattedValues["adx_profileisanonymous"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profilelastactivity")]
        public System.Nullable<System.DateTime> adx_profilelastactivity
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("adx_profilelastactivity");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_profilelastactivity", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profilemodifiedon")]
        public System.Nullable<System.DateTime> adx_profilemodifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("adx_profilemodifiedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_profilemodifiedon", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_publicprofilecopy")]
        public string adx_publicprofilecopy
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("adx_publicprofilecopy");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_publicprofilecopy", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_timezone")]
        public System.Nullable<int> adx_timezone
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("adx_timezone");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("adx_timezone", value);
            }
        }

        /// <summary>
        /// For system use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging30")]
        public Microsoft.Xrm.Sdk.Money aging30
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging30");
            }
        }

        /// <summary>
        /// Shows the Aging 30 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging30_base")]
        public Microsoft.Xrm.Sdk.Money aging30_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging30_base");
            }
        }

        /// <summary>
        /// For system use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging60")]
        public Microsoft.Xrm.Sdk.Money aging60
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging60");
            }
        }

        /// <summary>
        /// Shows the Aging 60 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging60_base")]
        public Microsoft.Xrm.Sdk.Money aging60_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging60_base");
            }
        }

        /// <summary>
        /// For system use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging90")]
        public Microsoft.Xrm.Sdk.Money aging90
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging90");
            }
        }

        /// <summary>
        /// Shows the Aging 90 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging90_base")]
        public Microsoft.Xrm.Sdk.Money aging90_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging90_base");
            }
        }

        /// <summary>
        /// Enter the date of the contact's wedding or service anniversary for use in customer gift programs or other communications.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("anniversary")]
        public System.Nullable<System.DateTime> anniversary
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("anniversary");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("anniversary", value);
            }
        }

        /// <summary>
        /// Type the contact's annual income for use in profiling and financial analysis.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("annualincome")]
        public Microsoft.Xrm.Sdk.Money annualincome
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("annualincome");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("annualincome", value);
            }
        }

        /// <summary>
        /// Shows the Annual Income field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("annualincome_base")]
        public Microsoft.Xrm.Sdk.Money annualincome_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("annualincome_base");
            }
        }

        /// <summary>
        /// Type the name of the contact's assistant.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("assistantname")]
        public string assistantname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("assistantname");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("assistantname", value);
            }
        }

        /// <summary>
        /// Type the phone number for the contact's assistant.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("assistantphone")]
        public string assistantphone
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("assistantphone");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("assistantphone", value);
            }
        }

        /// <summary>
        /// Enter the contact's birthday for use in customer gift programs or other communications.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("birthdate")]
        public System.Nullable<System.DateTime> birthdate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("birthdate");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("birthdate", value);
            }
        }

        /// <summary>
        /// Type a second business phone number for this contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("business2")]
        public string business2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("business2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("business2", value);
            }
        }

        /// <summary>
        /// Stores Image of the Business Card
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businesscard")]
        public string businesscard
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("businesscard");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("businesscard", value);
            }
        }

        /// <summary>
        /// Stores Business Card Control Properties.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businesscardattributes")]
        public string businesscardattributes
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("businesscardattributes");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("businesscardattributes", value);
            }
        }

        /// <summary>
        /// Type a callback phone number for this contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("callback")]
        public string callback
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("callback");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("callback", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_role")]
        public virtual ccof_ProviderRole? ccof_role
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ccof_ProviderRole?)(EntityOptionSetEnum.GetEnum(this, "ccof_role")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_role", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_rolename")]
        public string ccof_rolename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ccof_role"))
                {
                    return this.FormattedValues["ccof_role"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Keycloak BCeID Guid
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_userid")]
        public string ccof_userid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_userid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_userid", value);
            }
        }

        /// <summary>
        /// BCeID User Name
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_username")]
        public string ccof_username
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_username");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_username", value);
            }
        }

        /// <summary>
        /// Type the names of the contact's children for reference in communications and client programs.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("childrensnames")]
        public string childrensnames
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("childrensnames");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("childrensnames", value);
            }
        }

        /// <summary>
        /// Type the company phone of the contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("company")]
        public string company
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("company");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("company", value);
            }
        }

        /// <summary>
        /// Unique identifier of the contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactid")]
        public System.Nullable<System.Guid> contactid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("contactid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("contactid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.contactid = value;
            }
        }

        /// <summary>
        /// Shows who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        /// <summary>
        /// Shows the external party who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyexternalparty")]
        public Microsoft.Xrm.Sdk.EntityReference createdbyexternalparty
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdbyexternalparty");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyexternalpartyname")]
        public string createdbyexternalpartyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdbyexternalparty"))
                {
                    return this.FormattedValues["createdbyexternalparty"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyexternalpartyyominame")]
        public string createdbyexternalpartyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdbyexternalparty"))
                {
                    return this.FormattedValues["createdbyexternalparty"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Shows who created the record on behalf of another user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the credit limit of the contact for reference when you address invoice and accounting issues with the customer.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("creditlimit")]
        public Microsoft.Xrm.Sdk.Money creditlimit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("creditlimit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("creditlimit", value);
            }
        }

        /// <summary>
        /// Shows the Credit Limit field converted to the system's default base currency for reporting purposes. The calculations use the exchange rate specified in the Currencies area.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("creditlimit_base")]
        public Microsoft.Xrm.Sdk.Money creditlimit_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("creditlimit_base");
            }
        }

        /// <summary>
        /// Select whether the contact is on a credit hold, for reference when addressing invoice and accounting issues.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("creditonhold")]
        public System.Nullable<bool> creditonhold
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("creditonhold");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("creditonhold", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("creditonholdname")]
        public string creditonholdname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("creditonhold"))
                {
                    return this.FormattedValues["creditonhold"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select the size of the contact's company for segmentation and reporting purposes.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customersizecode")]
        public virtual Contact_customersizecode? customersizecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_customersizecode?)(EntityOptionSetEnum.GetEnum(this, "customersizecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("customersizecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customersizecodename")]
        public string customersizecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("customersizecode"))
                {
                    return this.FormattedValues["customersizecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select the category that best describes the relationship between the contact and your organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customertypecode")]
        public virtual Contact_customertypecode? customertypecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_customertypecode?)(EntityOptionSetEnum.GetEnum(this, "customertypecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("customertypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customertypecodename")]
        public string customertypecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("customertypecode"))
                {
                    return this.FormattedValues["customertypecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Choose the default price list associated with the contact to make sure the correct product prices for this customer are applied in sales opportunities, quotes, and orders.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultpricelevelid")]
        public Microsoft.Xrm.Sdk.EntityReference defaultpricelevelid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("defaultpricelevelid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("defaultpricelevelid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultpricelevelidname")]
        public string defaultpricelevelidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("defaultpricelevelid"))
                {
                    return this.FormattedValues["defaultpricelevelid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the department or business unit where the contact works in the parent company or business.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("department")]
        public string department
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("department");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("department", value);
            }
        }

        /// <summary>
        /// Type additional information to describe the contact, such as an excerpt from the company's website.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
        public string description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("description", value);
            }
        }

        /// <summary>
        /// Select whether the contact accepts bulk email sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the contact can be added to marketing lists, but will be excluded from the email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotbulkemail")]
        public System.Nullable<bool> donotbulkemail
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("donotbulkemail");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("donotbulkemail", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotbulkemailname")]
        public string donotbulkemailname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("donotbulkemail"))
                {
                    return this.FormattedValues["donotbulkemail"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select whether the contact accepts bulk postal mail sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the contact can be added to marketing lists, but will be excluded from the letters.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotbulkpostalmail")]
        public System.Nullable<bool> donotbulkpostalmail
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("donotbulkpostalmail");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("donotbulkpostalmail", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotbulkpostalmailname")]
        public string donotbulkpostalmailname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("donotbulkpostalmail"))
                {
                    return this.FormattedValues["donotbulkpostalmail"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select whether the contact allows direct email sent from Microsoft Dynamics 365. If Do Not Allow is selected, Microsoft Dynamics 365 will not send the email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotemail")]
        public System.Nullable<bool> donotemail
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("donotemail");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("donotemail", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotemailname")]
        public string donotemailname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("donotemail"))
                {
                    return this.FormattedValues["donotemail"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select whether the contact allows faxes. If Do Not Allow is selected, the contact will be excluded from any fax activities distributed in marketing campaigns.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotfax")]
        public System.Nullable<bool> donotfax
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("donotfax");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("donotfax", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotfaxname")]
        public string donotfaxname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("donotfax"))
                {
                    return this.FormattedValues["donotfax"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select whether the contact accepts phone calls. If Do Not Allow is selected, the contact will be excluded from any phone call activities distributed in marketing campaigns.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotphone")]
        public System.Nullable<bool> donotphone
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("donotphone");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("donotphone", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotphonename")]
        public string donotphonename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("donotphone"))
                {
                    return this.FormattedValues["donotphone"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select whether the contact allows direct mail. If Do Not Allow is selected, the contact will be excluded from letter activities distributed in marketing campaigns.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotpostalmail")]
        public System.Nullable<bool> donotpostalmail
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("donotpostalmail");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("donotpostalmail", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotpostalmailname")]
        public string donotpostalmailname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("donotpostalmail"))
                {
                    return this.FormattedValues["donotpostalmail"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotsendmarketingmaterialname")]
        public string donotsendmarketingmaterialname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("donotsendmm"))
                {
                    return this.FormattedValues["donotsendmm"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select whether the contact accepts marketing materials, such as brochures or catalogs. Contacts that opt out can be excluded from marketing initiatives.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotsendmm")]
        public System.Nullable<bool> donotsendmm
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("donotsendmm");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("donotsendmm", value);
            }
        }

        /// <summary>
        /// Select the contact's highest level of education for use in segmentation and analysis.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("educationcode")]
        public virtual Contact_educationcode? educationcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_educationcode?)(EntityOptionSetEnum.GetEnum(this, "educationcode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("educationcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("educationcodename")]
        public string educationcodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("educationcode"))
                {
                    return this.FormattedValues["educationcode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the primary email address for the contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress1")]
        public string emailaddress1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("emailaddress1");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("emailaddress1", value);
            }
        }

        /// <summary>
        /// Type the secondary email address for the contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress2")]
        public string emailaddress2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("emailaddress2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("emailaddress2", value);
            }
        }

        /// <summary>
        /// Type an alternate email address for the contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress3")]
        public string emailaddress3
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("emailaddress3");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("emailaddress3", value);
            }
        }

        /// <summary>
        /// Type the employee ID or number for the contact for reference in orders, service cases, or other communications with the contact's organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("employeeid")]
        public string employeeid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("employeeid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("employeeid", value);
            }
        }

        /// <summary>
        /// Shows the default image for the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
        public byte[] entityimage
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<byte[]>("entityimage");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("entityimage", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
        public System.Nullable<long> entityimage_timestamp
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("entityimage_timestamp");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
        public string entityimage_url
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("entityimage_url");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
        public System.Nullable<System.Guid> entityimageid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("entityimageid");
            }
        }

        /// <summary>
        /// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
        public System.Nullable<decimal> exchangerate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
            }
        }

        /// <summary>
        /// Identifier for an external user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("externaluseridentifier")]
        public string externaluseridentifier
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("externaluseridentifier");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("externaluseridentifier", value);
            }
        }

        /// <summary>
        /// Select the marital status of the contact for reference in follow-up phone calls and other communications.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("familystatuscode")]
        public virtual Contact_familystatuscode? familystatuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_familystatuscode?)(EntityOptionSetEnum.GetEnum(this, "familystatuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("familystatuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("familystatuscodename")]
        public string familystatuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("familystatuscode"))
                {
                    return this.FormattedValues["familystatuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the fax number for the contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fax")]
        public string fax
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("fax");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("fax", value);
            }
        }

        /// <summary>
        /// Type the contact's first name to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("firstname")]
        public string firstname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("firstname");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("firstname", value);
            }
        }

        /// <summary>
        /// Information about whether to allow following email activity like opens, attachment views and link clicks for emails sent to the contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("followemail")]
        public System.Nullable<bool> followemail
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("followemail");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("followemail", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("followemailname")]
        public string followemailname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("followemail"))
                {
                    return this.FormattedValues["followemail"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the URL for the contact's FTP site to enable users to access data and share documents.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ftpsiteurl")]
        public string ftpsiteurl
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ftpsiteurl");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ftpsiteurl", value);
            }
        }

        /// <summary>
        /// Combines and shows the contact's first and last names so that the full name can be displayed in views and reports.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fullname")]
        public string fullname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("fullname");
            }
        }

        /// <summary>
        /// Select the contact's gender to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("gendercode")]
        public virtual Contact_gendercode? gendercode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_gendercode?)(EntityOptionSetEnum.GetEnum(this, "gendercode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("gendercode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("gendercodename")]
        public string gendercodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("gendercode"))
                {
                    return this.FormattedValues["gendercode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the passport number or other government ID for the contact for use in documents or reports.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("governmentid")]
        public string governmentid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("governmentid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("governmentid", value);
            }
        }

        /// <summary>
        /// Select whether the contact has any children for reference in follow-up phone calls and other communications.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("haschildrencode")]
        public virtual Contact_haschildrencode? haschildrencode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_haschildrencode?)(EntityOptionSetEnum.GetEnum(this, "haschildrencode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("haschildrencode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("haschildrencodename")]
        public string haschildrencodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("haschildrencode"))
                {
                    return this.FormattedValues["haschildrencode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type a second home phone number for this contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("home2")]
        public string home2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("home2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("home2", value);
            }
        }

        /// <summary>
        /// Unique identifier of the data import or data migration that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Select whether the contact exists in a separate accounting or other system, such as Microsoft Dynamics GP or another ERP database, for use in integration processes.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbackofficecustomer")]
        public System.Nullable<bool> isbackofficecustomer
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isbackofficecustomer");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("isbackofficecustomer", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbackofficecustomername")]
        public string isbackofficecustomername
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("isbackofficecustomer"))
                {
                    return this.FormattedValues["isbackofficecustomer"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isprivatename")]
        public string isprivatename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("isprivate"))
                {
                    return this.FormattedValues["isprivate"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the job title of the contact to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("jobtitle")]
        public string jobtitle
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("jobtitle");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("jobtitle", value);
            }
        }

        /// <summary>
        /// Type the contact's last name to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastname")]
        public string lastname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("lastname");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("lastname", value);
            }
        }

        /// <summary>
        /// Contains the date and time stamp of the last on hold time.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastonholdtime")]
        public System.Nullable<System.DateTime> lastonholdtime
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastonholdtime");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("lastonholdtime", value);
            }
        }

        /// <summary>
        /// Shows the date when the contact was last included in a marketing campaign or quick campaign.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastusedincampaign")]
        public System.Nullable<System.DateTime> lastusedincampaign
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastusedincampaign");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("lastusedincampaign", value);
            }
        }

        /// <summary>
        /// Select the primary marketing source that directed the contact to your organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("leadsourcecode")]
        public virtual Contact_leadsourcecode? leadsourcecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_leadsourcecode?)(EntityOptionSetEnum.GetEnum(this, "leadsourcecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("leadsourcecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("leadsourcecodename")]
        public string leadsourcecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("leadsourcecode"))
                {
                    return this.FormattedValues["leadsourcecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the name of the contact's manager for use in escalating issues or other follow-up communications with the contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("managername")]
        public string managername
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("managername");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("managername", value);
            }
        }

        /// <summary>
        /// Type the phone number for the contact's manager.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("managerphone")]
        public string managerphone
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("managerphone");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("managerphone", value);
            }
        }

        /// <summary>
        /// Whether is only for marketing
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("marketingonly")]
        public System.Nullable<bool> marketingonly
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("marketingonly");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("marketingonly", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("marketingonlyname")]
        public string marketingonlyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("marketingonly"))
                {
                    return this.FormattedValues["marketingonly"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mastercontactidname")]
        public string mastercontactidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("masterid"))
                {
                    return this.FormattedValues["masterid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mastercontactidyominame")]
        public string mastercontactidyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("masterid"))
                {
                    return this.FormattedValues["masterid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier of the master contact for merge.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("masterid")]
        public Microsoft.Xrm.Sdk.EntityReference masterid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("masterid");
            }
        }

        /// <summary>
        /// Shows whether the account has been merged with a master contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("merged")]
        public System.Nullable<bool> merged
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("merged");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mergedname")]
        public string mergedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("merged"))
                {
                    return this.FormattedValues["merged"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the contact's middle name or initial to make sure the contact is addressed correctly.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("middlename")]
        public string middlename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("middlename");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("middlename", value);
            }
        }

        /// <summary>
        /// Type the mobile phone number for the contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mobilephone")]
        public string mobilephone
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("mobilephone");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("mobilephone", value);
            }
        }

        /// <summary>
        /// Shows who last updated the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        /// <summary>
        /// Shows the external party who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyexternalparty")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedbyexternalparty
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedbyexternalparty");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyexternalpartyname")]
        public string modifiedbyexternalpartyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedbyexternalparty"))
                {
                    return this.FormattedValues["modifiedbyexternalparty"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyexternalpartyyominame")]
        public string modifiedbyexternalpartyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedbyexternalparty"))
                {
                    return this.FormattedValues["modifiedbyexternalparty"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Shows who last updated the record on behalf of another user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for Account associated with Contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msa_managingpartnerid")]
        public Microsoft.Xrm.Sdk.EntityReference msa_managingpartnerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msa_managingpartnerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msa_managingpartnerid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msa_managingpartneridname")]
        public string msa_managingpartneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msa_managingpartnerid"))
                {
                    return this.FormattedValues["msa_managingpartnerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msa_managingpartneridyominame")]
        public string msa_managingpartneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msa_managingpartnerid"))
                {
                    return this.FormattedValues["msa_managingpartnerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Maps to contact KPI records
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_contactkpiid")]
        public Microsoft.Xrm.Sdk.EntityReference msdyn_contactkpiid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_contactkpiid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_contactkpiid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_contactkpiidname")]
        public string msdyn_contactkpiidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_contactkpiid"))
                {
                    return this.FormattedValues["msdyn_contactkpiid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Indicate buying influence using labels
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_decisioninfluencetag")]
        public virtual Contact_msdyn_decisioninfluencetag? msdyn_decisioninfluencetag
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_msdyn_decisioninfluencetag?)(EntityOptionSetEnum.GetEnum(this, "msdyn_decisioninfluencetag")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_decisioninfluencetag", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_decisioninfluencetagname")]
        public string msdyn_decisioninfluencetagname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_decisioninfluencetag"))
                {
                    return this.FormattedValues["msdyn_decisioninfluencetag"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Indicates that the contact has opted out of web tracking.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_disablewebtracking")]
        public System.Nullable<bool> msdyn_disablewebtracking
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("msdyn_disablewebtracking");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_disablewebtracking", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_disablewebtrackingname")]
        public string msdyn_disablewebtrackingname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_disablewebtracking"))
                {
                    return this.FormattedValues["msdyn_disablewebtracking"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Describes whether contact is opted out or not
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_gdproptout")]
        public System.Nullable<bool> msdyn_gdproptout
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("msdyn_gdproptout");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_gdproptout", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_gdproptoutname")]
        public string msdyn_gdproptoutname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_gdproptout"))
                {
                    return this.FormattedValues["msdyn_gdproptout"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Describes if the contact is an assistant in org chart
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_isassistantinorgchart")]
        public System.Nullable<bool> msdyn_isassistantinorgchart
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("msdyn_isassistantinorgchart");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_isassistantinorgchart", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_isassistantinorgchartname")]
        public string msdyn_isassistantinorgchartname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_isassistantinorgchart"))
                {
                    return this.FormattedValues["msdyn_isassistantinorgchart"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Indicates that the contact is considered a minor in their jurisdiction.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_isminor")]
        public System.Nullable<bool> msdyn_isminor
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("msdyn_isminor");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_isminor", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_isminorname")]
        public string msdyn_isminorname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_isminor"))
                {
                    return this.FormattedValues["msdyn_isminor"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Indicates that the contact is considered a minor in their jurisdiction and has parental consent.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_isminorwithparentalconsent")]
        public System.Nullable<bool> msdyn_isminorwithparentalconsent
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("msdyn_isminorwithparentalconsent");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_isminorwithparentalconsent", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_isminorwithparentalconsentname")]
        public string msdyn_isminorwithparentalconsentname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_isminorwithparentalconsent"))
                {
                    return this.FormattedValues["msdyn_isminorwithparentalconsent"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Whether or not the contact belongs to the associated account
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_orgchangestatus")]
        public virtual Contact_msdyn_orgchangestatus? msdyn_orgchangestatus
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_msdyn_orgchangestatus?)(EntityOptionSetEnum.GetEnum(this, "msdyn_orgchangestatus")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_orgchangestatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_orgchangestatusname")]
        public string msdyn_orgchangestatusname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_orgchangestatus"))
                {
                    return this.FormattedValues["msdyn_orgchangestatus"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Indicates the date and time that the person agreed to the portal terms and conditions.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_portaltermsagreementdate")]
        public System.Nullable<System.DateTime> msdyn_portaltermsagreementdate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("msdyn_portaltermsagreementdate");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_portaltermsagreementdate", value);
            }
        }

        /// <summary>
        /// Indicates the primary time zone that the contact works on.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_primarytimezone")]
        public System.Nullable<int> msdyn_primarytimezone
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("msdyn_primarytimezone");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_primarytimezone", value);
            }
        }

        /// <summary>
        /// Unique identifier for Segment associated with contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_segmentid")]
        public Microsoft.Xrm.Sdk.EntityReference msdyn_segmentid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_segmentid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_segmentid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_segmentidname")]
        public string msdyn_segmentidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_segmentid"))
                {
                    return this.FormattedValues["msdyn_segmentid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msft_datastate")]
        public virtual msft_DataState? msft_datastate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((msft_DataState?)(EntityOptionSetEnum.GetEnum(this, "msft_datastate")));
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msft_datastatename")]
        public string msft_datastatename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msft_datastate"))
                {
                    return this.FormattedValues["msft_datastate"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// User’s preferred portal language
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mspp_userpreferredlcid")]
        public virtual powerpagelanguages? mspp_userpreferredlcid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((powerpagelanguages?)(EntityOptionSetEnum.GetEnum(this, "mspp_userpreferredlcid")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("mspp_userpreferredlcid", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mspp_userpreferredlcidname")]
        public string mspp_userpreferredlcidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("mspp_userpreferredlcid"))
                {
                    return this.FormattedValues["mspp_userpreferredlcid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the contact's nickname.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("nickname")]
        public string nickname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("nickname");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("nickname", value);
            }
        }

        /// <summary>
        /// Type the number of children the contact has for reference in follow-up phone calls and other communications.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("numberofchildren")]
        public System.Nullable<int> numberofchildren
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("numberofchildren");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("numberofchildren", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_first_name")]
        public string ofm_first_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_first_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_first_name", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_last_name")]
        public string ofm_last_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_last_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_last_name", value);
            }
        }

        /// <summary>
        /// Unique identifier for Portal Role associated with Contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_portal_role_id")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_portal_role_id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_portal_role_id");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_portal_role_id", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_portal_role_idname")]
        public string ofm_portal_role_idname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_portal_role_id"))
                {
                    return this.FormattedValues["ofm_portal_role_id"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_social_insurance_number")]
        public string ofm_social_insurance_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_social_insurance_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_social_insurance_number", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_social_insurance_number_for_mask")]
        public string ofm_social_insurance_number_for_mask
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_social_insurance_number_for_mask");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_social_insurance_number_for_mask", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supplier_issue")]
        public virtual Contact_ofm_supplier_issue? ofm_supplier_issue
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_ofm_supplier_issue?)(EntityOptionSetEnum.GetEnum(this, "ofm_supplier_issue")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_supplier_issue", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supplier_issuename")]
        public string ofm_supplier_issuename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_supplier_issue"))
                {
                    return this.FormattedValues["ofm_supplier_issue"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supplier_number")]
        public string ofm_supplier_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_supplier_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_supplier_number", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supplier_site_number")]
        public string ofm_supplier_site_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_supplier_site_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_supplier_site_number", value);
            }
        }

        /// <summary>
        /// Shows how long, in minutes, that the record was on hold.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onholdtime")]
        public System.Nullable<int> onholdtime
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("onholdtime");
            }
        }

        /// <summary>
        /// Shows the lead that the contact was created if the contact was created by converting a lead in Microsoft Dynamics 365. This is used to relate the contact to the data on the originating lead for use in reporting and analytics.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingleadid")]
        public Microsoft.Xrm.Sdk.EntityReference originatingleadid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("originatingleadid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("originatingleadid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingleadidname")]
        public string originatingleadidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("originatingleadid"))
                {
                    return this.FormattedValues["originatingleadid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingleadidyominame")]
        public string originatingleadidyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("originatingleadid"))
                {
                    return this.FormattedValues["originatingleadid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier of the business unit that owns the contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier of the team who owns the contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier of the user who owns the contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Type the pager number for the contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pager")]
        public string pager
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("pager");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("pager", value);
            }
        }

        /// <summary>
        /// For internal use only
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parent_contactid")]
        public Microsoft.Xrm.Sdk.EntityReference parent_contactid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parent_contactid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("parent_contactid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parent_contactidname")]
        public string parent_contactidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("parent_contactid"))
                {
                    return this.FormattedValues["parent_contactid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parent_contactidyominame")]
        public string parent_contactidyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("parent_contactid"))
                {
                    return this.FormattedValues["parent_contactid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier of the parent contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcontactid")]
        public Microsoft.Xrm.Sdk.EntityReference parentcontactid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentcontactid");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcontactidname")]
        public string parentcontactidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("parentcontactid"))
                {
                    return this.FormattedValues["parentcontactid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcontactidyominame")]
        public string parentcontactidyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("parentcontactid"))
                {
                    return this.FormattedValues["parentcontactid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select the parent account or parent contact for the contact to provide a quick link to additional details, such as financial information, activities, and opportunities.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcustomerid")]
        public Microsoft.Xrm.Sdk.EntityReference parentcustomerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentcustomerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("parentcustomerid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcustomeridname")]
        public string parentcustomeridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("parentcustomerid"))
                {
                    return this.FormattedValues["parentcustomerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcustomeridyominame")]
        public string parentcustomeridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("parentcustomerid"))
                {
                    return this.FormattedValues["parentcustomerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows whether the contact participates in workflow rules.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("participatesinworkflow")]
        public System.Nullable<bool> participatesinworkflow
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("participatesinworkflow");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("participatesinworkflow", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("participatesinworkflowname")]
        public string participatesinworkflowname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("participatesinworkflow"))
                {
                    return this.FormattedValues["participatesinworkflow"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select the payment terms to indicate when the customer needs to pay the total amount.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("paymenttermscode")]
        public virtual Contact_paymenttermscode? paymenttermscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_paymenttermscode?)(EntityOptionSetEnum.GetEnum(this, "paymenttermscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("paymenttermscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("paymenttermscodename")]
        public string paymenttermscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("paymenttermscode"))
                {
                    return this.FormattedValues["paymenttermscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select the preferred day of the week for service appointments.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredappointmentdaycode")]
        public virtual Contact_preferredappointmentdaycode? preferredappointmentdaycode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_preferredappointmentdaycode?)(EntityOptionSetEnum.GetEnum(this, "preferredappointmentdaycode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("preferredappointmentdaycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredappointmentdaycodename")]
        public string preferredappointmentdaycodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("preferredappointmentdaycode"))
                {
                    return this.FormattedValues["preferredappointmentdaycode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select the preferred time of day for service appointments.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredappointmenttimecode")]
        public virtual Contact_preferredappointmenttimecode? preferredappointmenttimecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_preferredappointmenttimecode?)(EntityOptionSetEnum.GetEnum(this, "preferredappointmenttimecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("preferredappointmenttimecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredappointmenttimecodename")]
        public string preferredappointmenttimecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("preferredappointmenttimecode"))
                {
                    return this.FormattedValues["preferredappointmenttimecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select the preferred method of contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredcontactmethodcode")]
        public virtual Contact_preferredcontactmethodcode? preferredcontactmethodcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_preferredcontactmethodcode?)(EntityOptionSetEnum.GetEnum(this, "preferredcontactmethodcode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("preferredcontactmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredcontactmethodcodename")]
        public string preferredcontactmethodcodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("preferredcontactmethodcode"))
                {
                    return this.FormattedValues["preferredcontactmethodcode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Choose the contact's preferred service facility or equipment to make sure services are scheduled correctly for the customer.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredequipmentid")]
        public Microsoft.Xrm.Sdk.EntityReference preferredequipmentid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("preferredequipmentid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("preferredequipmentid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredequipmentidname")]
        public string preferredequipmentidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("preferredequipmentid"))
                {
                    return this.FormattedValues["preferredequipmentid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Choose the contact's preferred service to make sure services are scheduled correctly for the customer.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredserviceid")]
        public Microsoft.Xrm.Sdk.EntityReference preferredserviceid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("preferredserviceid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("preferredserviceid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredserviceidname")]
        public string preferredserviceidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("preferredserviceid"))
                {
                    return this.FormattedValues["preferredserviceid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Choose the regular or preferred customer service representative for reference when scheduling service activities for the contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredsystemuserid")]
        public Microsoft.Xrm.Sdk.EntityReference preferredsystemuserid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("preferredsystemuserid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("preferredsystemuserid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredsystemuseridname")]
        public string preferredsystemuseridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("preferredsystemuserid"))
                {
                    return this.FormattedValues["preferredsystemuserid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredsystemuseridyominame")]
        public string preferredsystemuseridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("preferredsystemuserid"))
                {
                    return this.FormattedValues["preferredsystemuserid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows the ID of the process.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
        public System.Nullable<System.Guid> processid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("processid", value);
            }
        }

        /// <summary>
        /// Type the salutation of the contact to make sure the contact is addressed correctly in sales calls, email messages, and marketing campaigns.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("salutation")]
        public string salutation
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("salutation");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("salutation", value);
            }
        }

        /// <summary>
        /// Select a shipping method for deliveries sent to this address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("shippingmethodcode")]
        public virtual Contact_shippingmethodcode? shippingmethodcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_shippingmethodcode?)(EntityOptionSetEnum.GetEnum(this, "shippingmethodcode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("shippingmethodcodename")]
        public string shippingmethodcodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("shippingmethodcode"))
                {
                    return this.FormattedValues["shippingmethodcode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Choose the service level agreement (SLA) that you want to apply to the Contact record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
        public Microsoft.Xrm.Sdk.EntityReference slaid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slaid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("slaid", value);
            }
        }

        /// <summary>
        /// Last SLA that was applied to this case. This field is for internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
        public Microsoft.Xrm.Sdk.EntityReference slainvokedid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slainvokedid");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedidname")]
        public string slainvokedidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("slainvokedid"))
                {
                    return this.FormattedValues["slainvokedid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaname")]
        public string slaname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("slaid"))
                {
                    return this.FormattedValues["slaid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the name of the contact's spouse or partner for reference during calls, events, or other communications with the contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("spousesname")]
        public string spousesname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("spousesname");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("spousesname", value);
            }
        }

        /// <summary>
        /// Shows the ID of the stage.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
        public System.Nullable<System.Guid> stageid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("stageid", value);
            }
        }

        /// <summary>
        /// Shows whether the contact is active or inactive. Inactive contacts are read-only and can't be edited unless they are reactivated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual contact_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((contact_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select the contact's status.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual Contact_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subscriptionid")]
        public System.Nullable<System.Guid> subscriptionid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("subscriptionid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("subscriptionid", value);
            }
        }

        /// <summary>
        /// Type the suffix used in the contact's name, such as Jr. or Sr. to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("suffix")]
        public string suffix
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("suffix");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("suffix", value);
            }
        }

        /// <summary>
        /// Number of users or conversations followed the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamsfollowed")]
        public System.Nullable<int> teamsfollowed
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("teamsfollowed");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("teamsfollowed", value);
            }
        }

        /// <summary>
        /// Type the main phone number for this contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("telephone1")]
        public string telephone1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("telephone1");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("telephone1", value);
            }
        }

        /// <summary>
        /// Type a second phone number for this contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("telephone2")]
        public string telephone2
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("telephone2");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("telephone2", value);
            }
        }

        /// <summary>
        /// Type a third phone number for this contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("telephone3")]
        public string telephone3
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("telephone3");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("telephone3", value);
            }
        }

        /// <summary>
        /// Select a region or territory for the contact for use in segmentation and analysis.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("territorycode")]
        public virtual Contact_territorycode? territorycode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Contact_territorycode?)(EntityOptionSetEnum.GetEnum(this, "territorycode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("territorycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("territorycodename")]
        public string territorycodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("territorycode"))
                {
                    return this.FormattedValues["territorycode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Total time spent for emails (read and write) and meetings by me in relation to the contact record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timespentbymeonemailandmeetings")]
        public string timespentbymeonemailandmeetings
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("timespentbymeonemailandmeetings");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Choose the local currency for the record to make sure budgets are reported in the correct currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("transactioncurrencyid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
        public string transactioncurrencyidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("transactioncurrencyid"))
                {
                    return this.FormattedValues["transactioncurrencyid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
        public string traversedpath
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("traversedpath");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("traversedpath", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version number of the contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// Type the contact's professional or personal website or blog URL.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("websiteurl")]
        public string websiteurl
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("websiteurl");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("websiteurl", value);
            }
        }

        /// <summary>
        /// Type the phonetic spelling of the contact's first name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yomifirstname")]
        public string yomifirstname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("yomifirstname");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("yomifirstname", value);
            }
        }

        /// <summary>
        /// Shows the combined Yomi first and last names of the contact so that the full phonetic name can be displayed in views and reports.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yomifullname")]
        public string yomifullname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("yomifullname");
            }
        }

        /// <summary>
        /// Type the phonetic spelling of the contact's last name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yomilastname")]
        public string yomilastname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("yomilastname");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("yomilastname", value);
            }
        }

        /// <summary>
        /// Type the phonetic spelling of the contact's middle name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yomimiddlename")]
        public string yomimiddlename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("yomimiddlename");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("yomimiddlename", value);
            }
        }

        /// <summary>
        /// 1:N account_primary_contact
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_primary_contact")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Account> account_primary_contact
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.Account>("account_primary_contact", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.Account>("account_primary_contact", null, value);
            }
        }

        /// <summary>
        /// 1:N contact_customer_contacts
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_customer_contacts", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Contact> Referencedcontact_customer_contacts
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.Contact>("contact_customer_contacts", Microsoft.Xrm.Sdk.EntityRole.Referenced);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.Contact>("contact_customer_contacts", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
            }
        }

        /// <summary>
        /// 1:N Contact_Email_EmailSender
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contact_Email_EmailSender")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Email> Contact_Email_EmailSender
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.Email>("Contact_Email_EmailSender", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.Email>("Contact_Email_EmailSender", null, value);
            }
        }

        /// <summary>
        /// 1:N Contact_Emails
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contact_Emails")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Email> Contact_Emails
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.Email>("Contact_Emails", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.Email>("Contact_Emails", null, value);
            }
        }

        /// <summary>
        /// 1:N contact_master_contact
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_master_contact", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Contact> Referencedcontact_master_contact
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.Contact>("contact_master_contact", Microsoft.Xrm.Sdk.EntityRole.Referenced);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.Contact>("contact_master_contact", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
            }
        }

        /// <summary>
        /// 1:N contact_parent_contact
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_parent_contact", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Contact> Referencedcontact_parent_contact
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.Contact>("contact_parent_contact", Microsoft.Xrm.Sdk.EntityRole.Referenced);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.Contact>("contact_parent_contact", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
            }
        }

        /// <summary>
        /// 1:N ofm_assistance_request_contact
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_assistance_request_contact")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_assistance_request> ofm_assistance_request_contact
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_assistance_request>("ofm_assistance_request_contact", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_assistance_request>("ofm_assistance_request_contact", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_contact_account
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_contact_account")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Account> ofm_contact_account
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.Account>("ofm_contact_account", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.Account>("ofm_contact_account", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_contact_applications
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_contact_applications")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_application> ofm_contact_applications
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_application>("ofm_contact_applications", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_application>("ofm_contact_applications", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_contact_funding
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_contact_funding")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_funding> ofm_contact_funding
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_funding>("ofm_contact_funding", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_funding>("ofm_contact_funding", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_contact_funding_decliner
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_contact_funding_decliner")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_funding> ofm_contact_funding_decliner
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_funding>("ofm_contact_funding_decliner", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_funding>("ofm_contact_funding_decliner", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_contact_survey_response
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_contact_survey_response")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_survey_response> ofm_contact_survey_response
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_survey_response>("ofm_contact_survey_response", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_survey_response>("ofm_contact_survey_response", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_createdby_application
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_createdby_application")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_application> ofm_createdby_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_application>("ofm_createdby_application", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_application>("ofm_createdby_application", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_expenseauthority_application
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_expenseauthority_application")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_application> ofm_expenseauthority_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_application>("ofm_expenseauthority_application", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_application>("ofm_expenseauthority_application", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_facility_business_bceid
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_facility_business_bceid")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_bceid_facility> ofm_facility_business_bceid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_bceid_facility>("ofm_facility_business_bceid", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_bceid_facility>("ofm_facility_business_bceid", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_request_contact
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_request_contact")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_assistance_request> ofm_request_contact
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_assistance_request>("ofm_request_contact", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_assistance_request>("ofm_request_contact", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_secondary_contact_application
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_secondary_contact_application")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_application> ofm_secondary_contact_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_application>("ofm_secondary_contact_application", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_application>("ofm_secondary_contact_application", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_submittedby_application
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_submittedby_application")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_application> ofm_submittedby_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_application>("ofm_submittedby_application", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_application>("ofm_submittedby_application", null, value);
            }
        }

        /// <summary>
        /// N:1 contact_customer_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcustomerid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_customer_accounts")]
        public ECC.Core.DataContext.Account contact_customer_accounts
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Account>("contact_customer_accounts", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Account>("contact_customer_accounts", null, value);
            }
        }

        /// <summary>
        /// N:1 contact_customer_contacts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcustomerid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_customer_contacts", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
        public ECC.Core.DataContext.Contact Referencingcontact_customer_contacts
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("contact_customer_contacts", Microsoft.Xrm.Sdk.EntityRole.Referencing);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Contact>("contact_customer_contacts", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
            }
        }

        /// <summary>
        /// N:1 contact_master_contact
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("masterid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_master_contact", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
        public ECC.Core.DataContext.Contact Referencingcontact_master_contact
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("contact_master_contact", Microsoft.Xrm.Sdk.EntityRole.Referencing);
            }
        }

        /// <summary>
        /// N:1 contact_parent_contact
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parent_contactid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_parent_contact", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
        public ECC.Core.DataContext.Contact Referencingcontact_parent_contact
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("contact_parent_contact", Microsoft.Xrm.Sdk.EntityRole.Referencing);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Contact>("contact_parent_contact", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
            }
        }

        /// <summary>
        /// N:1 msa_contact_managingpartner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msa_managingpartnerid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msa_contact_managingpartner")]
        public ECC.Core.DataContext.Account msa_contact_managingpartner
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Account>("msa_contact_managingpartner", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Account>("msa_contact_managingpartner", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_portal_role_contact
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_portal_role_id")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_portal_role_contact")]
        public ECC.Core.DataContext.ofm_portal_role ofm_portal_role_contact
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_portal_role>("ofm_portal_role_contact", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_portal_role>("ofm_portal_role_contact", null, value);
            }
        }

        /// <summary>
        /// N:1 team_contacts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_contacts")]
        public ECC.Core.DataContext.Team team_contacts
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_contacts", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public Contact(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["contactid"] = base.Id;
                        break;
                    case "contactid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// Activity that is delivered using email protocols.
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("email")]
    public partial class Email : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the email entity
        /// </summary>
        public partial class Fields
        {
            public const string acceptingentityid = "acceptingentityid";
            public const string acceptingentityidname = "acceptingentityidname";
            public const string Account_Email_EmailSender = "Account_Email_EmailSender";
            public const string Account_Email_SendersAccount = "Account_Email_SendersAccount";
            public const string Account_Emails = "Account_Emails";
            public const string activityadditionalparams = "activityadditionalparams";
            public const string activityid = "activityid";
            public const string Id = "activityid";
            public const string activitytypecode = "activitytypecode";
            public const string activitytypecodename = "activitytypecodename";
            public const string actualdurationminutes = "actualdurationminutes";
            public const string actualend = "actualend";
            public const string actualstart = "actualstart";
            public const string attachmentcount = "attachmentcount";
            public const string attachmentopencount = "attachmentopencount";
            public const string baseconversationindexhash = "baseconversationindexhash";
            public const string bcc = "bcc";
            public const string category = "category";
            public const string cc = "cc";
            public const string ccof_change_request = "ccof_change_request";
            public const string ccof_change_requestname = "ccof_change_requestname";
            public const string ccof_emailtype = "ccof_emailtype";
            public const string ccof_emailtypename = "ccof_emailtypename";
            public const string ccof_program_year = "ccof_program_year";
            public const string ccof_regardingccfri = "ccof_regardingccfri";
            public const string ccof_regardingccfriname = "ccof_regardingccfriname";
            public const string compressed = "compressed";
            public const string compressedname = "compressedname";
            public const string Contact_Email_EmailSender = "Contact_Email_EmailSender";
            public const string Contact_Emails = "Contact_Emails";
            public const string conversationindex = "conversationindex";
            public const string conversationtrackingid = "conversationtrackingid";
            public const string correlatedactivityid = "correlatedactivityid";
            public const string correlatedactivityidname = "correlatedactivityidname";
            public const string correlatedsubjectchanged = "correlatedsubjectchanged";
            public const string correlatedsubjectchangedname = "correlatedsubjectchangedname";
            public const string correlationmethod = "correlationmethod";
            public const string correlationmethodname = "correlationmethodname";
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string delayedemailsendtime = "delayedemailsendtime";
            public const string deliveryattempts = "deliveryattempts";
            public const string deliveryprioritycode = "deliveryprioritycode";
            public const string deliveryprioritycodename = "deliveryprioritycodename";
            public const string deliveryreceiptrequested = "deliveryreceiptrequested";
            public const string deliveryreceiptrequestedname = "deliveryreceiptrequestedname";
            public const string description = "description";
            public const string descriptionblobid = "descriptionblobid";
            public const string descriptionblobid_name = "descriptionblobid_name";
            public const string directioncode = "directioncode";
            public const string directioncodename = "directioncodename";
            public const string Referencingemail_email_CorrelatedActivityId = "email_email_CorrelatedActivityId";
            public const string Referencingemail_email_parentactivityid = "email_email_parentactivityid";
            public const string emailreminderexpirytime = "emailreminderexpirytime";
            public const string emailreminderstatus = "emailreminderstatus";
            public const string emailreminderstatusname = "emailreminderstatusname";
            public const string emailremindertext = "emailremindertext";
            public const string emailremindertype = "emailremindertype";
            public const string emailremindertypename = "emailremindertypename";
            public const string emailsender = "emailsender";
            public const string emailsendername = "emailsendername";
            public const string emailsenderyominame = "emailsenderyominame";
            public const string emailtrackingid = "emailtrackingid";
            public const string exchangerate = "exchangerate";
            public const string followemailuserpreference = "followemailuserpreference";
            public const string followemailuserpreferencename = "followemailuserpreferencename";
            public const string from = "from";
            public const string importsequencenumber = "importsequencenumber";
            public const string inreplyto = "inreplyto";
            public const string internetmessageheaders = "internetmessageheaders";
            public const string isbilled = "isbilled";
            public const string isbilledname = "isbilledname";
            public const string isduplicatesenderunresolved = "isduplicatesenderunresolved";
            public const string isduplicatesenderunresolvedname = "isduplicatesenderunresolvedname";
            public const string isemailfollowed = "isemailfollowed";
            public const string isemailfollowedname = "isemailfollowedname";
            public const string isemailreminderset = "isemailreminderset";
            public const string isemailremindersetname = "isemailremindersetname";
            public const string isregularactivity = "isregularactivity";
            public const string isregularactivityname = "isregularactivityname";
            public const string isunsafe = "isunsafe";
            public const string isworkflowcreated = "isworkflowcreated";
            public const string isworkflowcreatedname = "isworkflowcreatedname";
            public const string lastonholdtime = "lastonholdtime";
            public const string lastopenedtime = "lastopenedtime";
            public const string linksclickedcount = "linksclickedcount";
            public const string messageid = "messageid";
            public const string messageiddupcheck = "messageiddupcheck";
            public const string mimetype = "mimetype";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string msdyn_copilotengaged = "msdyn_copilotengaged";
            public const string msdyn_copilotengagedname = "msdyn_copilotengagedname";
            public const string msdyn_emailengagementinteractions = "msdyn_emailengagementinteractions";
            public const string msdyn_recipientlist = "msdyn_recipientlist";
            public const string msdyn_sentiment = "msdyn_sentiment";
            public const string msdyn_sentimentname = "msdyn_sentimentname";
            public const string msdyn_sentimentreason = "msdyn_sentimentreason";
            public const string msdyn_sentimentreasonname = "msdyn_sentimentreasonname";
            public const string msft_datastate = "msft_datastate";
            public const string msft_datastatename = "msft_datastatename";
            public const string notifications = "notifications";
            public const string notificationsname = "notificationsname";
            public const string ofm_assistance_request_Emails = "ofm_assistance_request_Emails";
            public const string ofm_communication_type = "ofm_communication_type";
            public const string ofm_communication_typename = "ofm_communication_typename";
            public const string ofm_due_date = "ofm_due_date";
            public const string ofm_email_communication_type = "ofm_email_communication_type";
            public const string ofm_email_reminder = "ofm_email_reminder";
            public const string ofm_expiry_time = "ofm_expiry_time";
            public const string ofm_funding_Emails = "ofm_funding_Emails";
            public const string ofm_is_read = "ofm_is_read";
            public const string ofm_is_readname = "ofm_is_readname";
            public const string ofm_regarding_data = "ofm_regarding_data";
            public const string ofm_sent_on = "ofm_sent_on";
            public const string ofm_show_notification_on_portal = "ofm_show_notification_on_portal";
            public const string ofm_show_notification_on_portalname = "ofm_show_notification_on_portalname";
            public const string onholdtime = "onholdtime";
            public const string opencount = "opencount";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string parentactivityid = "parentactivityid";
            public const string parentactivityidname = "parentactivityidname";
            public const string parentsensitivitylabelid = "parentsensitivitylabelid";
            public const string postponeemailprocessinguntil = "postponeemailprocessinguntil";
            public const string prioritycode = "prioritycode";
            public const string prioritycodename = "prioritycodename";
            public const string processid = "processid";
            public const string readreceiptrequested = "readreceiptrequested";
            public const string readreceiptrequestedname = "readreceiptrequestedname";
            public const string receivingmailboxid = "receivingmailboxid";
            public const string receivingmailboxidname = "receivingmailboxidname";
            public const string Referencedemail_email_CorrelatedActivityId = "Referencedemail_email_CorrelatedActivityId";
            public const string Referencedemail_email_parentactivityid = "Referencedemail_email_parentactivityid";
            public const string regardingobjectid = "regardingobjectid";
            public const string regardingobjectidname = "regardingobjectidname";
            public const string regardingobjectidyominame = "regardingobjectidyominame";
            public const string related = "related";
            public const string reminderactioncardid = "reminderactioncardid";
            public const string replycount = "replycount";
            public const string reservedforinternaluse = "reservedforinternaluse";
            public const string scheduleddurationminutes = "scheduleddurationminutes";
            public const string scheduledend = "scheduledend";
            public const string scheduledstart = "scheduledstart";
            public const string sender = "sender";
            public const string sendermailboxid = "sendermailboxid";
            public const string sendermailboxidname = "sendermailboxidname";
            public const string sendersaccount = "sendersaccount";
            public const string sendersaccountname = "sendersaccountname";
            public const string sendersaccountyominame = "sendersaccountyominame";
            public const string sensitivitylabelid = "sensitivitylabelid";
            public const string sensitivitylabelidname = "sensitivitylabelidname";
            public const string sensitivitylabelinfo = "sensitivitylabelinfo";
            public const string senton = "senton";
            public const string serviceid = "serviceid";
            public const string serviceidname = "serviceidname";
            public const string slaid = "slaid";
            public const string slainvokedid = "slainvokedid";
            public const string slainvokedidname = "slainvokedidname";
            public const string slaname = "slaname";
            public const string sortdate = "sortdate";
            public const string stageid = "stageid";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string subcategory = "subcategory";
            public const string subject = "subject";
            public const string submittedby = "submittedby";
            public const string team_email = "team_email";
            public const string templateid = "templateid";
            public const string templateidname = "templateidname";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string to = "to";
            public const string torecipients = "torecipients";
            public const string trackingtoken = "trackingtoken";
            public const string transactioncurrencyid = "transactioncurrencyid";
            public const string transactioncurrencyidname = "transactioncurrencyidname";
            public const string traversedpath = "traversedpath";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public Email(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public Email(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public Email(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public Email() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "activityid";

        public const string PrimaryNameAttribute = "subject";

        public const string EntitySchemaName = "Email";

        public const string EntityLogicalName = "email";

        public const string EntityLogicalCollectionName = "emails";

        public const string EntitySetName = "emails";

        /// <summary>
        /// The Entity that Accepted the Email
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("acceptingentityid")]
        public Microsoft.Xrm.Sdk.EntityReference acceptingentityid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("acceptingentityid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("acceptingentityid", value);
            }
        }

        /// <summary>
        /// Accepting Entity Name
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("acceptingentityidname")]
        public string acceptingentityidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("acceptingentityid"))
                {
                    return this.FormattedValues["acceptingentityid"];
                }
                else
                {
                    return default(string);
                }
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("acceptingentityidname", value);
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityadditionalparams")]
        public string activityadditionalparams
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("activityadditionalparams");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("activityadditionalparams", value);
            }
        }

        /// <summary>
        /// Unique identifier of the email activity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
        public System.Nullable<System.Guid> activityid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("activityid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("activityid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.activityid = value;
            }
        }

        /// <summary>
        /// Shows the type of activity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activitytypecode")]
        public string activitytypecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("activitytypecode");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activitytypecodename")]
        public string activitytypecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("activitytypecode"))
                {
                    return this.FormattedValues["activitytypecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the number of minutes spent creating and sending the email. The duration is used in reporting.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualdurationminutes")]
        public System.Nullable<int> actualdurationminutes
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("actualdurationminutes");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("actualdurationminutes", value);
            }
        }

        /// <summary>
        /// Enter the actual end date and time of the email. By default, it displays the date and time when the activity was completed or canceled, but can be edited to capture the actual time to create and send the email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualend")]
        public System.Nullable<System.DateTime> actualend
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("actualend");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("actualend", value);
            }
        }

        /// <summary>
        /// Enter the actual start date and time for the email. By default, it displays the date and time when the activity was created, but can be edited to capture the actual time to create and send the email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualstart")]
        public System.Nullable<System.DateTime> actualstart
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("actualstart");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("actualstart", value);
            }
        }

        /// <summary>
        /// Shows the umber of attachments of the email message.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("attachmentcount")]
        public System.Nullable<int> attachmentcount
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("attachmentcount");
            }
        }

        /// <summary>
        /// Shows the number of times an email attachment has been viewed.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("attachmentopencount")]
        public System.Nullable<int> attachmentopencount
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("attachmentopencount");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("attachmentopencount", value);
            }
        }

        /// <summary>
        /// Hash of base of conversation index.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("baseconversationindexhash")]
        public System.Nullable<int> baseconversationindexhash
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("baseconversationindexhash");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("baseconversationindexhash", value);
            }
        }

        /// <summary>
        /// Enter the recipients that are included on the email distribution, but are not displayed to other recipients.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bcc")]
        public System.Collections.Generic.IEnumerable<Microsoft.Xrm.Sdk.Entity> bcc
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("bcc");
                if (((collection != null)
                            && (collection.Entities != null)))
                {
                    return System.Linq.Enumerable.Cast<Microsoft.Xrm.Sdk.Entity>(collection.Entities);
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                if ((value == null))
                {
                    this.SetAttributeValue("bcc", value);
                }
                else
                {
                    this.SetAttributeValue("bcc", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
                }
            }
        }

        /// <summary>
        /// Type a category to identify the email type, such as lead outreach, customer follow-up, or service alert, to tie the email to a business group or function.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("category")]
        public string category
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("category");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("category", value);
            }
        }

        /// <summary>
        /// Enter the recipients that should be copied on the email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc")]
        public System.Collections.Generic.IEnumerable<Microsoft.Xrm.Sdk.Entity> cc
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("cc");
                if (((collection != null)
                            && (collection.Entities != null)))
                {
                    return System.Linq.Enumerable.Cast<Microsoft.Xrm.Sdk.Entity>(collection.Entities);
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                if ((value == null))
                {
                    this.SetAttributeValue("cc", value);
                }
                else
                {
                    this.SetAttributeValue("cc", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_change_request")]
        public Microsoft.Xrm.Sdk.EntityReference ccof_change_request
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ccof_change_request");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_change_request", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_change_requestname")]
        public string ccof_change_requestname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ccof_change_request"))
                {
                    return this.FormattedValues["ccof_change_request"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_emailtype")]
        public virtual ccof_ccfriEmailType? ccof_emailtype
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ccof_ccfriEmailType?)(EntityOptionSetEnum.GetEnum(this, "ccof_emailtype")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_emailtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_emailtypename")]
        public string ccof_emailtypename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ccof_emailtype"))
                {
                    return this.FormattedValues["ccof_emailtype"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Show Fiscal Yeare on Email for CCOF
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_program_year")]
        public string ccof_program_year
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ccof_program_year");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_program_year", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_regardingccfri")]
        public Microsoft.Xrm.Sdk.EntityReference ccof_regardingccfri
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ccof_regardingccfri");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ccof_regardingccfri", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_regardingccfriname")]
        public string ccof_regardingccfriname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ccof_regardingccfri"))
                {
                    return this.FormattedValues["ccof_regardingccfri"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Indicates if the body is compressed.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("compressed")]
        public System.Nullable<bool> compressed
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("compressed");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("compressedname")]
        public string compressedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("compressed"))
                {
                    return this.FormattedValues["compressed"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Identifier for all the email responses for this conversation.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("conversationindex")]
        public string conversationindex
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("conversationindex");
            }
        }

        /// <summary>
        /// Conversation Tracking Id.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("conversationtrackingid")]
        public System.Nullable<System.Guid> conversationtrackingid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("conversationtrackingid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("conversationtrackingid", value);
            }
        }

        /// <summary>
        /// Correlated Activity Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("correlatedactivityid")]
        public Microsoft.Xrm.Sdk.EntityReference correlatedactivityid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("correlatedactivityid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("correlatedactivityid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("correlatedactivityidname")]
        public string correlatedactivityidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("correlatedactivityid"))
                {
                    return this.FormattedValues["correlatedactivityid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Indicates if the subject changed compared to the subject of the correlated email
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("correlatedsubjectchanged")]
        public System.Nullable<bool> correlatedsubjectchanged
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("correlatedsubjectchanged");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("correlatedsubjectchanged", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("correlatedsubjectchangedname")]
        public string correlatedsubjectchangedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("correlatedsubjectchanged"))
                {
                    return this.FormattedValues["correlatedsubjectchanged"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows how an email is correlated to an existing email in Microsoft Dynamics 365. XHeader and CustomCorrelation are not used. For system use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("correlationmethod")]
        public virtual Email_correlationmethod? correlationmethod
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Email_correlationmethod?)(EntityOptionSetEnum.GetEnum(this, "correlationmethod")));
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("correlationmethodname")]
        public string correlationmethodname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("correlationmethod"))
                {
                    return this.FormattedValues["correlationmethod"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Shows who created the record on behalf of another user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Enter the expected date and time when email will be sent.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("delayedemailsendtime")]
        public System.Nullable<System.DateTime> delayedemailsendtime
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("delayedemailsendtime");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("delayedemailsendtime", value);
            }
        }

        /// <summary>
        /// Shows the count of the number of attempts made to send the email. The count is used as an indicator of email routing issues.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deliveryattempts")]
        public System.Nullable<int> deliveryattempts
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("deliveryattempts");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("deliveryattempts", value);
            }
        }

        /// <summary>
        /// Select the priority of delivery of the email to the email server.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deliveryprioritycode")]
        public virtual activitypointer_DeliveryPriorityCode? deliveryprioritycode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((activitypointer_DeliveryPriorityCode?)(EntityOptionSetEnum.GetEnum(this, "deliveryprioritycode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("deliveryprioritycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deliveryprioritycodename")]
        public string deliveryprioritycodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("deliveryprioritycode"))
                {
                    return this.FormattedValues["deliveryprioritycode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select whether the sender should receive confirmation that the email was delivered.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deliveryreceiptrequested")]
        public System.Nullable<bool> deliveryreceiptrequested
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("deliveryreceiptrequested");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("deliveryreceiptrequested", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deliveryreceiptrequestedname")]
        public string deliveryreceiptrequestedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("deliveryreceiptrequested"))
                {
                    return this.FormattedValues["deliveryreceiptrequested"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type the greeting and message text of the email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
        public string description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("description", value);
            }
        }

        /// <summary>
        /// File that contains description content.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("descriptionblobid")]
        public object descriptionblobid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<object>("descriptionblobid");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("descriptionblobid_name")]
        public string descriptionblobid_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("descriptionblobid"))
                {
                    return this.FormattedValues["descriptionblobid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select the direction of the email as incoming or outbound.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("directioncode")]
        public System.Nullable<bool> directioncode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("directioncode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("directioncode", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("directioncodename")]
        public string directioncodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("directioncode"))
                {
                    return this.FormattedValues["directioncode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows the date and time when an email reminder expires.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailreminderexpirytime")]
        public System.Nullable<System.DateTime> emailreminderexpirytime
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("emailreminderexpirytime");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("emailreminderexpirytime", value);
            }
        }

        /// <summary>
        /// Shows the status of the email reminder.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailreminderstatus")]
        public virtual Email_emailreminderstatus? emailreminderstatus
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Email_emailreminderstatus?)(EntityOptionSetEnum.GetEnum(this, "emailreminderstatus")));
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailreminderstatusname")]
        public string emailreminderstatusname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("emailreminderstatus"))
                {
                    return this.FormattedValues["emailreminderstatus"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailremindertext")]
        public string emailremindertext
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("emailremindertext");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("emailremindertext", value);
            }
        }

        /// <summary>
        /// Shows the type of the email reminder.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailremindertype")]
        public virtual Email_emailremindertype? emailremindertype
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Email_emailremindertype?)(EntityOptionSetEnum.GetEnum(this, "emailremindertype")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("emailremindertype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailremindertypename")]
        public string emailremindertypename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("emailremindertype"))
                {
                    return this.FormattedValues["emailremindertype"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows the sender of the email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailsender")]
        public Microsoft.Xrm.Sdk.EntityReference emailsender
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("emailsender");
            }
        }

        /// <summary>
        /// Shows the name of the sender of the email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailsendername")]
        public string emailsendername
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("emailsender"))
                {
                    return this.FormattedValues["emailsender"];
                }
                else
                {
                    return default(string);
                }
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("emailsendername", value);
            }
        }

        /// <summary>
        /// Shows the yomi name of the email sender
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailsenderyominame")]
        public string emailsenderyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("emailsender"))
                {
                    return this.FormattedValues["emailsender"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Email Tracking Id.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailtrackingid")]
        public System.Nullable<System.Guid> emailtrackingid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("emailtrackingid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("emailtrackingid", value);
            }
        }

        /// <summary>
        /// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
        public System.Nullable<decimal> exchangerate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
            }
        }

        /// <summary>
        /// Select whether the email allows following recipient activities sent from Microsoft Dynamics 365.This is user preference state which can be overridden by system evaluated state.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("followemailuserpreference")]
        public System.Nullable<bool> followemailuserpreference
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("followemailuserpreference");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("followemailuserpreference", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("followemailuserpreferencename")]
        public string followemailuserpreferencename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("followemailuserpreference"))
                {
                    return this.FormattedValues["followemailuserpreference"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Enter the sender of the email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("from")]
        public System.Collections.Generic.IEnumerable<Microsoft.Xrm.Sdk.Entity> from
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("from");
                if (((collection != null)
                            && (collection.Entities != null)))
                {
                    return System.Linq.Enumerable.Cast<Microsoft.Xrm.Sdk.Entity>(collection.Entities);
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                if ((value == null))
                {
                    this.SetAttributeValue("from", value);
                }
                else
                {
                    this.SetAttributeValue("from", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
                }
            }
        }

        /// <summary>
        /// Unique identifier of the data import or data migration that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Type the ID of the email message that this email activity is a response to.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("inreplyto")]
        public string inreplyto
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("inreplyto");
            }
        }

        /// <summary>
        /// Contains a set of internet headers associated to the email message in json format
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("internetmessageheaders")]
        public string internetmessageheaders
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("internetmessageheaders");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("internetmessageheaders", value);
            }
        }

        /// <summary>
        /// Information regarding whether the email activity was billed as part of resolving a case.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbilled")]
        public System.Nullable<bool> isbilled
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isbilled");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("isbilled", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbilledname")]
        public string isbilledname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("isbilled"))
                {
                    return this.FormattedValues["isbilled"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Indicates if the sender of the email is unresolved in case of multiple match
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isduplicatesenderunresolved")]
        public System.Nullable<bool> isduplicatesenderunresolved
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isduplicatesenderunresolved");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("isduplicatesenderunresolved", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isduplicatesenderunresolvedname")]
        public string isduplicatesenderunresolvedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("isduplicatesenderunresolved"))
                {
                    return this.FormattedValues["isduplicatesenderunresolved"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only. Shows whether this email is followed. This is evaluated state which overrides user selection of follow email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isemailfollowed")]
        public System.Nullable<bool> isemailfollowed
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isemailfollowed");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isemailfollowedname")]
        public string isemailfollowedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("isemailfollowed"))
                {
                    return this.FormattedValues["isemailfollowed"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only. Shows whether this email Reminder is Set.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isemailreminderset")]
        public System.Nullable<bool> isemailreminderset
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isemailreminderset");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isemailremindersetname")]
        public string isemailremindersetname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("isemailreminderset"))
                {
                    return this.FormattedValues["isemailreminderset"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Information regarding whether the activity is a regular activity type or event type.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isregularactivity")]
        public System.Nullable<bool> isregularactivity
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isregularactivity");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isregularactivityname")]
        public string isregularactivityname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("isregularactivity"))
                {
                    return this.FormattedValues["isregularactivity"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isunsafe")]
        public System.Nullable<int> isunsafe
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("isunsafe");
            }
        }

        /// <summary>
        /// Indication if the email was created by a workflow rule.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isworkflowcreated")]
        public System.Nullable<bool> isworkflowcreated
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isworkflowcreated");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("isworkflowcreated", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isworkflowcreatedname")]
        public string isworkflowcreatedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("isworkflowcreated"))
                {
                    return this.FormattedValues["isworkflowcreated"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Contains the date and time stamp of the last on hold time.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastonholdtime")]
        public System.Nullable<System.DateTime> lastonholdtime
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastonholdtime");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("lastonholdtime", value);
            }
        }

        /// <summary>
        /// Shows the latest date and time when email was opened.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastopenedtime")]
        public System.Nullable<System.DateTime> lastopenedtime
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastopenedtime");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("lastopenedtime", value);
            }
        }

        /// <summary>
        /// Shows the number of times a link in an email has been clicked.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("linksclickedcount")]
        public System.Nullable<int> linksclickedcount
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("linksclickedcount");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("linksclickedcount", value);
            }
        }

        /// <summary>
        /// Unique identifier of the email message. Used only for email that is received.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("messageid")]
        public string messageid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("messageid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("messageid", value);
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("messageiddupcheck")]
        [System.ObsoleteAttribute()]
        public System.Nullable<System.Guid> messageiddupcheck
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("messageiddupcheck");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("messageiddupcheck", value);
            }
        }

        /// <summary>
        /// MIME type of the email message data.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mimetype")]
        public string mimetype
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("mimetype");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("mimetype", value);
            }
        }

        /// <summary>
        /// Shows who last updated the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Shows who last updated the record on behalf of another user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_copilotengaged")]
        public System.Nullable<bool> msdyn_copilotengaged
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("msdyn_copilotengaged");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_copilotengaged", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_copilotengagedname")]
        public string msdyn_copilotengagedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_copilotengaged"))
                {
                    return this.FormattedValues["msdyn_copilotengaged"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Email engagement interactions
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_emailengagementinteractions")]
        public string msdyn_emailengagementinteractions
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msdyn_emailengagementinteractions");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_emailengagementinteractions", value);
            }
        }

        /// <summary>
        /// Individual email will be sent to each recipient.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_recipientlist")]
        public string msdyn_recipientlist
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msdyn_recipientlist");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_recipientlist", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_sentiment")]
        public virtual Email_msdyn_sentiment? msdyn_sentiment
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Email_msdyn_sentiment?)(EntityOptionSetEnum.GetEnum(this, "msdyn_sentiment")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_sentiment", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_sentimentname")]
        public string msdyn_sentimentname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_sentiment"))
                {
                    return this.FormattedValues["msdyn_sentiment"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sentiment Reason
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_sentimentreason")]
        public virtual Email_msdyn_sentimentreason? msdyn_sentimentreason
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Email_msdyn_sentimentreason?)(EntityOptionSetEnum.GetEnum(this, "msdyn_sentimentreason")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_sentimentreason", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_sentimentreasonname")]
        public string msdyn_sentimentreasonname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_sentimentreason"))
                {
                    return this.FormattedValues["msdyn_sentimentreason"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msft_datastate")]
        public virtual msft_DataState? msft_datastate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((msft_DataState?)(EntityOptionSetEnum.GetEnum(this, "msft_datastate")));
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msft_datastatename")]
        public string msft_datastatename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msft_datastate"))
                {
                    return this.FormattedValues["msft_datastate"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select the notification code to identify issues with the email recipients or attachments, such as blocked attachments.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("notifications")]
        public virtual Email_notifications? notifications
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Email_notifications?)(EntityOptionSetEnum.GetEnum(this, "notifications")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("notifications", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("notificationsname")]
        public string notificationsname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("notifications"))
                {
                    return this.FormattedValues["notifications"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_communication_type")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_communication_type
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_communication_type");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_communication_type", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_communication_typename")]
        public string ofm_communication_typename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_communication_type"))
                {
                    return this.FormattedValues["ofm_communication_type"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The due date on the email created in OFM
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_due_date")]
        public System.Nullable<System.DateTime> ofm_due_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_due_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_due_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_expiry_time")]
        public System.Nullable<System.DateTime> ofm_expiry_time
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_expiry_time");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_expiry_time", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_is_read")]
        public System.Nullable<bool> ofm_is_read
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_is_read");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_is_read", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_is_readname")]
        public string ofm_is_readname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_is_read"))
                {
                    return this.FormattedValues["ofm_is_read"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regarding_data")]
        public string ofm_regarding_data
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_regarding_data");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_regarding_data", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_sent_on")]
        public System.Nullable<System.DateTime> ofm_sent_on
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_sent_on");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_sent_on", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_show_notification_on_portal")]
        public System.Nullable<bool> ofm_show_notification_on_portal
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_show_notification_on_portal");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_show_notification_on_portal", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_show_notification_on_portalname")]
        public string ofm_show_notification_on_portalname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_show_notification_on_portal"))
                {
                    return this.FormattedValues["ofm_show_notification_on_portal"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows how long, in minutes, that the record was on hold.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onholdtime")]
        public System.Nullable<int> onholdtime
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("onholdtime");
            }
        }

        /// <summary>
        /// Shows the number of times an email has been opened.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opencount")]
        public System.Nullable<int> opencount
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("opencount");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("opencount", value);
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier of the business unit that owns the email activity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier of the team who owns the email activity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier of the user who owns the email activity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Select the activity that the email is associated with.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentactivityid")]
        public Microsoft.Xrm.Sdk.EntityReference parentactivityid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentactivityid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("parentactivityid", value);
            }
        }

        /// <summary>
        /// Parent Activity Name
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentactivityidname")]
        public string parentactivityidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("parentactivityid"))
                {
                    return this.FormattedValues["parentactivityid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentsensitivitylabelid")]
        public System.Nullable<System.Guid> parentsensitivitylabelid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("parentsensitivitylabelid");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("postponeemailprocessinguntil")]
        public System.Nullable<System.DateTime> postponeemailprocessinguntil
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("postponeemailprocessinguntil");
            }
        }

        /// <summary>
        /// Select the priority so that preferred customers or critical issues are handled quickly.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycode")]
        public virtual Email_prioritycode? prioritycode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Email_prioritycode?)(EntityOptionSetEnum.GetEnum(this, "prioritycode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("prioritycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycodename")]
        public string prioritycodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("prioritycode"))
                {
                    return this.FormattedValues["prioritycode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows the ID of the process.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
        public System.Nullable<System.Guid> processid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("processid", value);
            }
        }

        /// <summary>
        /// Indicates that a read receipt is requested.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("readreceiptrequested")]
        public System.Nullable<bool> readreceiptrequested
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("readreceiptrequested");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("readreceiptrequested", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("readreceiptrequestedname")]
        public string readreceiptrequestedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("readreceiptrequested"))
                {
                    return this.FormattedValues["readreceiptrequested"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The Mailbox that Received the Email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("receivingmailboxid")]
        public Microsoft.Xrm.Sdk.EntityReference receivingmailboxid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("receivingmailboxid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("receivingmailboxid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("receivingmailboxidname")]
        public string receivingmailboxidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("receivingmailboxid"))
                {
                    return this.FormattedValues["receivingmailboxid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Choose the record that the email relates to.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        public Microsoft.Xrm.Sdk.EntityReference regardingobjectid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("regardingobjectid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectidname")]
        public string regardingobjectidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("regardingobjectid"))
                {
                    return this.FormattedValues["regardingobjectid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectidyominame")]
        public string regardingobjectidyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("regardingobjectid"))
                {
                    return this.FormattedValues["regardingobjectid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Enter the related records for the email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("related")]
        public System.Collections.Generic.IEnumerable<Microsoft.Xrm.Sdk.Entity> related
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("related");
                if (((collection != null)
                            && (collection.Entities != null)))
                {
                    return System.Linq.Enumerable.Cast<Microsoft.Xrm.Sdk.Entity>(collection.Entities);
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                if ((value == null))
                {
                    this.SetAttributeValue("related", value);
                }
                else
                {
                    this.SetAttributeValue("related", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
                }
            }
        }

        /// <summary>
        /// Reminder Action Card Id.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reminderactioncardid")]
        public System.Nullable<System.Guid> reminderactioncardid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("reminderactioncardid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("reminderactioncardid", value);
            }
        }

        /// <summary>
        /// Shows the number of replies received for an email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("replycount")]
        public System.Nullable<int> replycount
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("replycount");
            }
        }

        /// <summary>
        /// For internal use only
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reservedforinternaluse")]
        public string reservedforinternaluse
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("reservedforinternaluse");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("reservedforinternaluse", value);
            }
        }

        /// <summary>
        /// Scheduled duration of the email activity, specified in minutes.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduleddurationminutes")]
        public System.Nullable<int> scheduleddurationminutes
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("scheduleddurationminutes");
            }
        }

        /// <summary>
        /// Enter the expected due date and time for the activity to be completed to provide details about when the email will be sent.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledend")]
        public System.Nullable<System.DateTime> scheduledend
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledend");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("scheduledend", value);
            }
        }

        /// <summary>
        /// Enter the expected start date and time for the activity to provide details about the tentative time when the email activity must be initiated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledstart")]
        public System.Nullable<System.DateTime> scheduledstart
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledstart");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("scheduledstart", value);
            }
        }

        /// <summary>
        /// Sender of the email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sender")]
        public string sender
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("sender");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("sender", value);
            }
        }

        /// <summary>
        /// Select the mailbox associated with the sender of the email message.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendermailboxid")]
        public Microsoft.Xrm.Sdk.EntityReference sendermailboxid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("sendermailboxid");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendermailboxidname")]
        public string sendermailboxidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("sendermailboxid"))
                {
                    return this.FormattedValues["sendermailboxid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows the parent account of the sender of the email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendersaccount")]
        public Microsoft.Xrm.Sdk.EntityReference sendersaccount
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("sendersaccount");
            }
        }

        /// <summary>
        /// Shows the name of the sender account of the email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendersaccountname")]
        public string sendersaccountname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("sendersaccount"))
                {
                    return this.FormattedValues["sendersaccount"];
                }
                else
                {
                    return default(string);
                }
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("sendersaccountname", value);
            }
        }

        /// <summary>
        /// Shows the name of the sender account yomi name 
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendersaccountyominame")]
        public string sendersaccountyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("sendersaccount"))
                {
                    return this.FormattedValues["sendersaccount"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The sensitivity label assigned to the Email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sensitivitylabelid")]
        public Microsoft.Xrm.Sdk.EntityReference sensitivitylabelid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("sensitivitylabelid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("sensitivitylabelid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sensitivitylabelidname")]
        public string sensitivitylabelidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("sensitivitylabelid"))
                {
                    return this.FormattedValues["sensitivitylabelid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sensitivitylabelinfo")]
        public string sensitivitylabelinfo
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("sensitivitylabelinfo");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("sensitivitylabelinfo", value);
            }
        }

        /// <summary>
        /// Shows the date and time that the email was sent.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("senton")]
        public System.Nullable<System.DateTime> senton
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("senton");
            }
        }

        /// <summary>
        /// Unique identifier for the associated service.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceid")]
        public Microsoft.Xrm.Sdk.EntityReference serviceid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("serviceid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("serviceid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceidname")]
        public string serviceidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("serviceid"))
                {
                    return this.FormattedValues["serviceid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Choose the service level agreement (SLA) that you want to apply to the email record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
        public Microsoft.Xrm.Sdk.EntityReference slaid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slaid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("slaid", value);
            }
        }

        /// <summary>
        /// Last SLA that was applied to this email. This field is for internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
        public Microsoft.Xrm.Sdk.EntityReference slainvokedid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slainvokedid");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedidname")]
        public string slainvokedidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("slainvokedid"))
                {
                    return this.FormattedValues["slainvokedid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaname")]
        public string slaname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("slaid"))
                {
                    return this.FormattedValues["slaid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows the date and time by which the activities are sorted.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sortdate")]
        public System.Nullable<System.DateTime> sortdate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("sortdate");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("sortdate", value);
            }
        }

        /// <summary>
        /// Shows the ID of the stage.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
        public System.Nullable<System.Guid> stageid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("stageid", value);
            }
        }

        /// <summary>
        /// Shows whether the email is open, completed, or canceled. Completed and canceled email is read-only and can't be edited.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual email_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((email_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Select the email's status.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual Email_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Email_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Type a subcategory to identify the email type and relate the activity to a specific product, sales region, business group, or other function.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subcategory")]
        public string subcategory
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("subcategory");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("subcategory", value);
            }
        }

        /// <summary>
        /// Type a short description about the objective or primary topic of the email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subject")]
        public string subject
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("subject");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("subject", value);
            }
        }

        /// <summary>
        /// Shows the Microsoft Office Outlook account for the user who submitted the email to Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("submittedby")]
        public string submittedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("submittedby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("submittedby", value);
            }
        }

        /// <summary>
        /// For internal use only. ID for template used in email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("templateid")]
        public Microsoft.Xrm.Sdk.EntityReference templateid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("templateid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("templateid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("templateidname")]
        public string templateidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("templateid"))
                {
                    return this.FormattedValues["templateid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Enter the account, contact, lead, queue, or user recipients for the email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("to")]
        public System.Collections.Generic.IEnumerable<Microsoft.Xrm.Sdk.Entity> to
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("to");
                if (((collection != null)
                            && (collection.Entities != null)))
                {
                    return System.Linq.Enumerable.Cast<Microsoft.Xrm.Sdk.Entity>(collection.Entities);
                }
                else
                {
                    return null;
                }
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                if ((value == null))
                {
                    this.SetAttributeValue("to", value);
                }
                else
                {
                    this.SetAttributeValue("to", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
                }
            }
        }

        /// <summary>
        /// Shows the email addresses corresponding to the recipients.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("torecipients")]
        public string torecipients
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("torecipients");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("torecipients", value);
            }
        }

        /// <summary>
        /// Shows the tracking token assigned to the email to make sure responses are automatically tracked in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("trackingtoken")]
        public string trackingtoken
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("trackingtoken");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("trackingtoken", value);
            }
        }

        /// <summary>
        /// Choose the local currency for the record to make sure budgets are reported in the correct currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("transactioncurrencyid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
        public string transactioncurrencyidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("transactioncurrencyid"))
                {
                    return this.FormattedValues["transactioncurrencyid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
        public string traversedpath
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("traversedpath");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("traversedpath", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version number of the email message.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N email_email_CorrelatedActivityId
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("email_email_CorrelatedActivityId", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Email> Referencedemail_email_CorrelatedActivityId
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.Email>("email_email_CorrelatedActivityId", Microsoft.Xrm.Sdk.EntityRole.Referenced);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.Email>("email_email_CorrelatedActivityId", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
            }
        }

        /// <summary>
        /// 1:N email_email_parentactivityid
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("email_email_parentactivityid", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Email> Referencedemail_email_parentactivityid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.Email>("email_email_parentactivityid", Microsoft.Xrm.Sdk.EntityRole.Referenced);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.Email>("email_email_parentactivityid", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
            }
        }

        /// <summary>
        /// 1:N ofm_email_reminder
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_email_reminder")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_reminder> ofm_email_reminder
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_reminder>("ofm_email_reminder", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_reminder>("ofm_email_reminder", null, value);
            }
        }

        /// <summary>
        /// N:1 Account_Email_EmailSender
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailsender")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Account_Email_EmailSender")]
        public ECC.Core.DataContext.Account Account_Email_EmailSender
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Account>("Account_Email_EmailSender", null);
            }
        }

        /// <summary>
        /// N:1 Account_Email_SendersAccount
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendersaccount")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Account_Email_SendersAccount")]
        public ECC.Core.DataContext.Account Account_Email_SendersAccount
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Account>("Account_Email_SendersAccount", null);
            }
        }

        /// <summary>
        /// N:1 Account_Emails
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Account_Emails")]
        public ECC.Core.DataContext.Account Account_Emails
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Account>("Account_Emails", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Account>("Account_Emails", null, value);
            }
        }

        /// <summary>
        /// N:1 Contact_Email_EmailSender
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailsender")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contact_Email_EmailSender")]
        public ECC.Core.DataContext.Contact Contact_Email_EmailSender
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("Contact_Email_EmailSender", null);
            }
        }

        /// <summary>
        /// N:1 Contact_Emails
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contact_Emails")]
        public ECC.Core.DataContext.Contact Contact_Emails
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("Contact_Emails", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Contact>("Contact_Emails", null, value);
            }
        }

        /// <summary>
        /// N:1 email_email_CorrelatedActivityId
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("correlatedactivityid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("email_email_CorrelatedActivityId", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
        public ECC.Core.DataContext.Email Referencingemail_email_CorrelatedActivityId
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Email>("email_email_CorrelatedActivityId", Microsoft.Xrm.Sdk.EntityRole.Referencing);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Email>("email_email_CorrelatedActivityId", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
            }
        }

        /// <summary>
        /// N:1 email_email_parentactivityid
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentactivityid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("email_email_parentactivityid", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
        public ECC.Core.DataContext.Email Referencingemail_email_parentactivityid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Email>("email_email_parentactivityid", Microsoft.Xrm.Sdk.EntityRole.Referencing);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Email>("email_email_parentactivityid", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
            }
        }

        /// <summary>
        /// N:1 ofm_assistance_request_Emails
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_assistance_request_Emails")]
        public ECC.Core.DataContext.ofm_assistance_request ofm_assistance_request_Emails
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_assistance_request>("ofm_assistance_request_Emails", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_assistance_request>("ofm_assistance_request_Emails", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_email_communication_type
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_communication_type")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_email_communication_type")]
        public ECC.Core.DataContext.ofm_communication_type ofm_email_communication_type
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_communication_type>("ofm_email_communication_type", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_communication_type>("ofm_email_communication_type", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_funding_Emails
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_funding_Emails")]
        public ECC.Core.DataContext.ofm_funding ofm_funding_Emails
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_funding>("ofm_funding_Emails", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_funding>("ofm_funding_Emails", null, value);
            }
        }

        /// <summary>
        /// N:1 team_email
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_email")]
        public ECC.Core.DataContext.Team team_email
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_email", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public Email(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["activityid"] = base.Id;
                        break;
                    case "activityid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// Set of surveys to collect feedback.
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("msfp_project")]
    public partial class msfp_project : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the msfp_project entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string msfp_customerinsightsconfiguration = "msfp_customerinsightsconfiguration";
            public const string msfp_dataclassification = "msfp_dataclassification";
            public const string msfp_description = "msfp_description";
            public const string msfp_environmentid = "msfp_environmentid";
            public const string msfp_environmentregion = "msfp_environmentregion";
            public const string msfp_msfp_project_msfp_survey_project = "msfp_msfp_project_msfp_survey_project";
            public const string msfp_name = "msfp_name";
            public const string msfp_permanentid = "msfp_permanentid";
            public const string msfp_projectid = "msfp_projectid";
            public const string Id = "msfp_projectid";
            public const string msfp_status = "msfp_status";
            public const string msfp_statusname = "msfp_statusname";
            public const string msfp_templateid = "msfp_templateid";
            public const string msfp_templateversion = "msfp_templateversion";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_msfp_project = "team_msfp_project";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public msfp_project(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public msfp_project(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public msfp_project(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public msfp_project() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "msfp_projectid";

        public const string PrimaryNameAttribute = "msfp_name";

        public const string EntitySchemaName = "msfp_project";

        public const string EntityLogicalName = "msfp_project";

        public const string EntityLogicalCollectionName = "msfp_projects";

        public const string EntitySetName = "msfp_projects";

        /// <summary>
        /// User who created the project.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the project was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// User who modified the project.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the project was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Stores Customer Insights configuration in JSON format.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_customerinsightsconfiguration")]
        public string msfp_customerinsightsconfiguration
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_customerinsightsconfiguration");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_customerinsightsconfiguration", value);
            }
        }

        /// <summary>
        /// Classification allows organization to protect data based on our policies and standards.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_dataclassification")]
        public string msfp_dataclassification
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_dataclassification");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_dataclassification", value);
            }
        }

        /// <summary>
        /// Description of the project.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_description")]
        public string msfp_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_description", value);
            }
        }

        /// <summary>
        /// Environment ID where project is stored.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_environmentid")]
        public string msfp_environmentid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_environmentid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_environmentid", value);
            }
        }

        /// <summary>
        /// Environment region where project is stored.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_environmentregion")]
        public string msfp_environmentregion
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_environmentregion");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_environmentregion", value);
            }
        }

        /// <summary>
        /// Name of the project.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_name")]
        public string msfp_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_name", value);
            }
        }

        /// <summary>
        /// Permanent ID is auto-generated for a new project. For a copied project, the ID is carried over from the original project.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_permanentid")]
        public string msfp_permanentid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_permanentid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_permanentid", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_projectid")]
        public System.Nullable<System.Guid> msfp_projectid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("msfp_projectid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_projectid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_projectid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.msfp_projectid = value;
            }
        }

        /// <summary>
        /// Status of the project.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_status")]
        public virtual msfp_project_msfp_status? msfp_status
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((msfp_project_msfp_status?)(EntityOptionSetEnum.GetEnum(this, "msfp_status")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_status", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_statusname")]
        public string msfp_statusname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msfp_status"))
                {
                    return this.FormattedValues["msfp_status"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Project template ID.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_templateid")]
        public string msfp_templateid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_templateid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_templateid", value);
            }
        }

        /// <summary>
        /// Version number of the project template.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_templateversion")]
        public string msfp_templateversion
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_templateversion");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_templateversion", value);
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Customer Voice project
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual msfp_project_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((msfp_project_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Customer Voice project
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual msfp_project_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((msfp_project_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N msfp_msfp_project_msfp_survey_project
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msfp_msfp_project_msfp_survey_project")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.msfp_survey> msfp_msfp_project_msfp_survey_project
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.msfp_survey>("msfp_msfp_project_msfp_survey_project", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.msfp_survey>("msfp_msfp_project_msfp_survey_project", null, value);
            }
        }

        /// <summary>
        /// N:1 team_msfp_project
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_msfp_project")]
        public ECC.Core.DataContext.Team team_msfp_project
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_msfp_project", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public msfp_project(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["msfp_projectid"] = base.Id;
                        break;
                    case "msfp_projectid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// Question in a survey to collect feedback.
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("msfp_question")]
    public partial class msfp_question : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the msfp_question entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string msfp_choicetype = "msfp_choicetype";
            public const string msfp_choicetypename = "msfp_choicetypename";
            public const string msfp_correctanswer = "msfp_correctanswer";
            public const string msfp_imageproperties = "msfp_imageproperties";
            public const string msfp_maximumrating = "msfp_maximumrating";
            public const string msfp_msfp_survey_msfp_question_Survey = "msfp_msfp_survey_msfp_question_Survey";
            public const string msfp_multiline = "msfp_multiline";
            public const string msfp_multilinename = "msfp_multilinename";
            public const string msfp_name = "msfp_name";
            public const string msfp_order = "msfp_order";
            public const string msfp_otherproperties = "msfp_otherproperties";
            public const string msfp_permanentid = "msfp_permanentid";
            public const string msfp_questionchoices = "msfp_questionchoices";
            public const string msfp_questionid = "msfp_questionid";
            public const string Id = "msfp_questionid";
            public const string msfp_questiontext = "msfp_questiontext";
            public const string msfp_questiontype = "msfp_questiontype";
            public const string msfp_questiontypename = "msfp_questiontypename";
            public const string msfp_responserequired = "msfp_responserequired";
            public const string msfp_responserequiredname = "msfp_responserequiredname";
            public const string msfp_sequence = "msfp_sequence";
            public const string msfp_sourceparentquestionidentifier = "msfp_sourceparentquestionidentifier";
            public const string msfp_sourcequestionidentifier = "msfp_sourcequestionidentifier";
            public const string msfp_sourcesurveyidentifier = "msfp_sourcesurveyidentifier";
            public const string msfp_subtitle = "msfp_subtitle";
            public const string msfp_survey = "msfp_survey";
            public const string msfp_surveyname = "msfp_surveyname";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_msfp_question = "team_msfp_question";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public msfp_question(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public msfp_question(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public msfp_question(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "msfp_sourcequestionidentifier,msfp_sourcesurveyidentifier";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public msfp_question() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "msfp_questionid";

        public const string PrimaryNameAttribute = "msfp_name";

        public const string EntitySchemaName = "msfp_question";

        public const string EntityLogicalName = "msfp_question";

        public const string EntityLogicalCollectionName = "msfp_questions";

        public const string EntitySetName = "msfp_questions";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows whether the question accepts single line or multiple lines of response.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_choicetype")]
        public virtual msfp_question_msfp_choicetype? msfp_choicetype
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((msfp_question_msfp_choicetype?)(EntityOptionSetEnum.GetEnum(this, "msfp_choicetype")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_choicetype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_choicetypename")]
        public string msfp_choicetypename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msfp_choicetype"))
                {
                    return this.FormattedValues["msfp_choicetype"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Stores the correct answer in case of quizzes.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_correctanswer")]
        public string msfp_correctanswer
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_correctanswer");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_correctanswer", value);
            }
        }

        /// <summary>
        /// Question image properties in JSON format.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_imageproperties")]
        public string msfp_imageproperties
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_imageproperties");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_imageproperties", value);
            }
        }

        /// <summary>
        /// Stores maximum rating of rating question type
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_maximumrating")]
        public System.Nullable<int> msfp_maximumrating
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("msfp_maximumrating");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_maximumrating", value);
            }
        }

        /// <summary>
        /// Shows if the text question is multiple lines or not
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_multiline")]
        public System.Nullable<bool> msfp_multiline
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("msfp_multiline");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_multiline", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_multilinename")]
        public string msfp_multilinename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msfp_multiline"))
                {
                    return this.FormattedValues["msfp_multiline"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The name of the custom entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_name")]
        public string msfp_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_name", value);
            }
        }

        /// <summary>
        /// Order of the question in the survey.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_order")]
        public System.Nullable<decimal> msfp_order
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("msfp_order");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_order", value);
            }
        }

        /// <summary>
        /// Stores other question properties in JSON format.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_otherproperties")]
        public string msfp_otherproperties
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_otherproperties");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_otherproperties", value);
            }
        }

        /// <summary>
        /// Permanent ID is auto-generated for a new survey question. For a copied survey, the ID is carried over from the original survey question.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_permanentid")]
        public string msfp_permanentid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_permanentid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_permanentid", value);
            }
        }

        /// <summary>
        /// Stores the list of answer options
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_questionchoices")]
        public string msfp_questionchoices
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_questionchoices");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_questionchoices", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_questionid")]
        public System.Nullable<System.Guid> msfp_questionid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("msfp_questionid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_questionid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_questionid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.msfp_questionid = value;
            }
        }

        /// <summary>
        /// Text of the question in the survey.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_questiontext")]
        public string msfp_questiontext
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_questiontext");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_questiontext", value);
            }
        }

        /// <summary>
        /// Stores the type of question to display.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_questiontype")]
        public virtual msfp_question_msfp_questiontype? msfp_questiontype
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((msfp_question_msfp_questiontype?)(EntityOptionSetEnum.GetEnum(this, "msfp_questiontype")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_questiontype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_questiontypename")]
        public string msfp_questiontypename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msfp_questiontype"))
                {
                    return this.FormattedValues["msfp_questiontype"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Shows if the question is mandatory.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_responserequired")]
        public System.Nullable<bool> msfp_responserequired
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("msfp_responserequired");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_responserequired", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_responserequiredname")]
        public string msfp_responserequiredname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msfp_responserequired"))
                {
                    return this.FormattedValues["msfp_responserequired"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Order of the question in the survey.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_sequence")]
        public System.Nullable<int> msfp_sequence
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("msfp_sequence");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_sequence", value);
            }
        }

        /// <summary>
        /// Unique identifier for the parent question in the source application.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_sourceparentquestionidentifier")]
        public string msfp_sourceparentquestionidentifier
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_sourceparentquestionidentifier");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_sourceparentquestionidentifier", value);
            }
        }

        /// <summary>
        /// Unique identifier for the question in the source application.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_sourcequestionidentifier")]
        public string msfp_sourcequestionidentifier
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_sourcequestionidentifier");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_sourcequestionidentifier", value);
            }
        }

        /// <summary>
        /// Unique identifier for the survey in the source application.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_sourcesurveyidentifier")]
        public string msfp_sourcesurveyidentifier
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_sourcesurveyidentifier");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_sourcesurveyidentifier", value);
            }
        }

        /// <summary>
        /// Stores subtitle of a question.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_subtitle")]
        public string msfp_subtitle
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_subtitle");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_subtitle", value);
            }
        }

        /// <summary>
        /// Unique identifier of the survey to which the question belongs.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_survey")]
        public Microsoft.Xrm.Sdk.EntityReference msfp_survey
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msfp_survey");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_survey", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_surveyname")]
        public string msfp_surveyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msfp_survey"))
                {
                    return this.FormattedValues["msfp_survey"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Question
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual msfp_question_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((msfp_question_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Question
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual msfp_question_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((msfp_question_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 msfp_msfp_survey_msfp_question_Survey
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_survey")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msfp_msfp_survey_msfp_question_Survey")]
        public ECC.Core.DataContext.msfp_survey msfp_msfp_survey_msfp_question_Survey
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.msfp_survey>("msfp_msfp_survey_msfp_question_Survey", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.msfp_survey>("msfp_msfp_survey_msfp_question_Survey", null, value);
            }
        }

        /// <summary>
        /// N:1 team_msfp_question
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_msfp_question")]
        public ECC.Core.DataContext.Team team_msfp_question
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_msfp_question", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public msfp_question(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["msfp_questionid"] = base.Id;
                        break;
                    case "msfp_questionid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// Set of questions to collect feedback.
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("msfp_survey")]
    public partial class msfp_survey : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the msfp_survey entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string msdyn_inspection = "msdyn_inspection";
            public const string msdyn_inspectionname = "msdyn_inspectionname";
            public const string msdyn_mcsbotstatus = "msdyn_mcsbotstatus";
            public const string msdyn_mcsbotstatusname = "msdyn_mcsbotstatusname";
            public const string msdyn_microsoftcopilotstudiobot = "msdyn_microsoftcopilotstudiobot";
            public const string msdyn_microsoftcopilotstudiobotname = "msdyn_microsoftcopilotstudiobotname";
            public const string msdyn_surveyprovider = "msdyn_surveyprovider";
            public const string msdyn_surveyprovidername = "msdyn_surveyprovidername";
            public const string msfp_acceptanonymousresponses = "msfp_acceptanonymousresponses";
            public const string msfp_acceptanonymousresponsesname = "msfp_acceptanonymousresponsesname";
            public const string msfp_anonymousurl = "msfp_anonymousurl";
            public const string msfp_description = "msfp_description";
            public const string msfp_embedcode = "msfp_embedcode";
            public const string msfp_enddate = "msfp_enddate";
            public const string msfp_friendlyname = "msfp_friendlyname";
            public const string msfp_msfp_project_msfp_survey_project = "msfp_msfp_project_msfp_survey_project";
            public const string msfp_msfp_survey_msfp_question_Survey = "msfp_msfp_survey_msfp_question_Survey";
            public const string msfp_name = "msfp_name";
            public const string msfp_otherproperties = "msfp_otherproperties";
            public const string msfp_permanentid = "msfp_permanentid";
            public const string msfp_project = "msfp_project";
            public const string msfp_projectname = "msfp_projectname";
            public const string msfp_publishedby = "msfp_publishedby";
            public const string msfp_publishedbyname = "msfp_publishedbyname";
            public const string msfp_publishedbyyominame = "msfp_publishedbyyominame";
            public const string msfp_publishedon = "msfp_publishedon";
            public const string msfp_sourcesurveyidentifier = "msfp_sourcesurveyidentifier";
            public const string msfp_sourcesurveymodifieddate = "msfp_sourcesurveymodifieddate";
            public const string msfp_sourcesurveyversion = "msfp_sourcesurveyversion";
            public const string msfp_startdate = "msfp_startdate";
            public const string msfp_surveyid = "msfp_surveyid";
            public const string Id = "msfp_surveyid";
            public const string msfp_surveysource = "msfp_surveysource";
            public const string msfp_surveyurl = "msfp_surveyurl";
            public const string msfp_variables = "msfp_variables";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_msfp_survey = "team_msfp_survey";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public msfp_survey(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public msfp_survey(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public msfp_survey(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "msfp_sourcesurveyidentifier";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public msfp_survey() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "msfp_surveyid";

        public const string PrimaryNameAttribute = "msfp_name";

        public const string EntitySchemaName = "msfp_survey";

        public const string EntityLogicalName = "msfp_survey";

        public const string EntityLogicalCollectionName = "msfp_surveies";

        public const string EntitySetName = "msfp_surveies";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for Inspection Template associated with Survey.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_inspection")]
        public Microsoft.Xrm.Sdk.EntityReference msdyn_inspection
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_inspection");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_inspection", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_inspectionname")]
        public string msdyn_inspectionname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_inspection"))
                {
                    return this.FormattedValues["msdyn_inspection"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// MCS Bot Status
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_mcsbotstatus")]
        public virtual msfp_survey_msdyn_mcsbotstatus? msdyn_mcsbotstatus
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((msfp_survey_msdyn_mcsbotstatus?)(EntityOptionSetEnum.GetEnum(this, "msdyn_mcsbotstatus")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_mcsbotstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_mcsbotstatusname")]
        public string msdyn_mcsbotstatusname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_mcsbotstatus"))
                {
                    return this.FormattedValues["msdyn_mcsbotstatus"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_microsoftcopilotstudiobot")]
        public Microsoft.Xrm.Sdk.EntityReference msdyn_microsoftcopilotstudiobot
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_microsoftcopilotstudiobot");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_microsoftcopilotstudiobot", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_microsoftcopilotstudiobotname")]
        public string msdyn_microsoftcopilotstudiobotname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_microsoftcopilotstudiobot"))
                {
                    return this.FormattedValues["msdyn_microsoftcopilotstudiobot"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_surveyprovider")]
        public virtual msdyn_SurveyProvider? msdyn_surveyprovider
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((msdyn_SurveyProvider?)(EntityOptionSetEnum.GetEnum(this, "msdyn_surveyprovider")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msdyn_surveyprovider", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_surveyprovidername")]
        public string msdyn_surveyprovidername
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msdyn_surveyprovider"))
                {
                    return this.FormattedValues["msdyn_surveyprovider"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Specifies if responses can be accepted from anonymous respondents.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_acceptanonymousresponses")]
        public System.Nullable<bool> msfp_acceptanonymousresponses
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("msfp_acceptanonymousresponses");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_acceptanonymousresponses", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_acceptanonymousresponsesname")]
        public string msfp_acceptanonymousresponsesname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msfp_acceptanonymousresponses"))
                {
                    return this.FormattedValues["msfp_acceptanonymousresponses"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Link to the anonymous survey response.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_anonymousurl")]
        public string msfp_anonymousurl
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_anonymousurl");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_anonymousurl", value);
            }
        }

        /// <summary>
        /// Description of the survey.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_description")]
        public string msfp_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_description", value);
            }
        }

        /// <summary>
        /// Embed code for the survey
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_embedcode")]
        public string msfp_embedcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_embedcode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_embedcode", value);
            }
        }

        /// <summary>
        /// End date and time of the survey, if configured.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_enddate")]
        public System.Nullable<System.DateTime> msfp_enddate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("msfp_enddate");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_enddate", value);
            }
        }

        /// <summary>
        /// Friendly name of the survey.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_friendlyname")]
        public string msfp_friendlyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_friendlyname");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_friendlyname", value);
            }
        }

        /// <summary>
        /// The name of the custom entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_name")]
        public string msfp_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_name", value);
            }
        }

        /// <summary>
        /// Other survey properties in JSON format.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_otherproperties")]
        public string msfp_otherproperties
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_otherproperties");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_otherproperties", value);
            }
        }

        /// <summary>
        /// Permanent ID is auto-generated for a new survey. For a copied survey, the ID is carried over from the original survey.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_permanentid")]
        public string msfp_permanentid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_permanentid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_permanentid", value);
            }
        }

        /// <summary>
        /// Project associated with the survey.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_project")]
        public Microsoft.Xrm.Sdk.EntityReference msfp_project
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msfp_project");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_project", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_projectname")]
        public string msfp_projectname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msfp_project"))
                {
                    return this.FormattedValues["msfp_project"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// User who published the survey.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_publishedby")]
        public Microsoft.Xrm.Sdk.EntityReference msfp_publishedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msfp_publishedby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_publishedby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_publishedbyname")]
        public string msfp_publishedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msfp_publishedby"))
                {
                    return this.FormattedValues["msfp_publishedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_publishedbyyominame")]
        public string msfp_publishedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msfp_publishedby"))
                {
                    return this.FormattedValues["msfp_publishedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time on which the survey was published.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_publishedon")]
        public System.Nullable<System.DateTime> msfp_publishedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("msfp_publishedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_publishedon", value);
            }
        }

        /// <summary>
        /// Unique identifier for the survey in the source application.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_sourcesurveyidentifier")]
        public string msfp_sourcesurveyidentifier
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_sourcesurveyidentifier");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_sourcesurveyidentifier", value);
            }
        }

        /// <summary>
        /// Date when a survey is modified in source.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_sourcesurveymodifieddate")]
        public System.Nullable<System.DateTime> msfp_sourcesurveymodifieddate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("msfp_sourcesurveymodifieddate");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_sourcesurveymodifieddate", value);
            }
        }

        /// <summary>
        /// Version number of the survey.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_sourcesurveyversion")]
        public string msfp_sourcesurveyversion
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_sourcesurveyversion");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_sourcesurveyversion", value);
            }
        }

        /// <summary>
        /// Start date and time of the survey, if configured.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_startdate")]
        public System.Nullable<System.DateTime> msfp_startdate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("msfp_startdate");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_startdate", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_surveyid")]
        public System.Nullable<System.Guid> msfp_surveyid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("msfp_surveyid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_surveyid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_surveyid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.msfp_surveyid = value;
            }
        }

        /// <summary>
        /// Source through which the survey was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_surveysource")]
        public string msfp_surveysource
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_surveysource");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_surveysource", value);
            }
        }

        /// <summary>
        /// Link to the survey in Customer Voice.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_surveyurl")]
        public string msfp_surveyurl
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_surveyurl");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_surveyurl", value);
            }
        }

        /// <summary>
        /// Stores survey variables and their default values in JSON format.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_variables")]
        public string msfp_variables
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("msfp_variables");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("msfp_variables", value);
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Survey
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual msfp_survey_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((msfp_survey_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Survey
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual msfp_survey_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((msfp_survey_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N msfp_msfp_survey_msfp_question_Survey
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msfp_msfp_survey_msfp_question_Survey")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.msfp_question> msfp_msfp_survey_msfp_question_Survey
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.msfp_question>("msfp_msfp_survey_msfp_question_Survey", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.msfp_question>("msfp_msfp_survey_msfp_question_Survey", null, value);
            }
        }

        /// <summary>
        /// N:1 msfp_msfp_project_msfp_survey_project
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfp_project")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msfp_msfp_project_msfp_survey_project")]
        public ECC.Core.DataContext.msfp_project msfp_msfp_project_msfp_survey_project
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.msfp_project>("msfp_msfp_project_msfp_survey_project", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.msfp_project>("msfp_msfp_project_msfp_survey_project", null, value);
            }
        }

        /// <summary>
        /// N:1 team_msfp_survey
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_msfp_survey")]
        public ECC.Core.DataContext.Team team_msfp_survey
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_msfp_survey", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public msfp_survey(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["msfp_surveyid"] = base.Id;
                        break;
                    case "msfp_surveyid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_ack_codes")]
    public partial class ofm_ack_codes : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_ack_codes entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_ack_codesid = "ofm_ack_codesid";
            public const string Id = "ofm_ack_codesid";
            public const string ofm_ack_number = "ofm_ack_number";
            public const string ofm_cohort = "ofm_cohort";
            public const string ofm_cohortid = "ofm_cohortid";
            public const string ofm_cohortidname = "ofm_cohortidname";
            public const string ofm_id = "ofm_id";
            public const string ofm_payment_type = "ofm_payment_type";
            public const string ofm_payment_typename = "ofm_payment_typename";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_ack_codes = "team_ofm_ack_codes";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_ack_codes(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_ack_codes(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_ack_codes(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ofm_id";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_ack_codes() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_ack_codesid";

        public const string PrimaryNameAttribute = "ofm_id";

        public const string EntitySchemaName = "ofm_ack_codes";

        public const string EntityLogicalName = "ofm_ack_codes";

        public const string EntityLogicalCollectionName = "ofm_ack_codeses";

        public const string EntitySetName = "ofm_ack_codeses";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ack_codesid")]
        public System.Nullable<System.Guid> ofm_ack_codesid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_ack_codesid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_ack_codesid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ack_codesid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_ack_codesid = value;
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ack_number")]
        public string ofm_ack_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_ack_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_ack_number", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cohort")]
        public string ofm_cohort
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_cohort");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_cohort", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cohortid")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_cohortid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_cohortid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_cohortid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cohortidname")]
        public string ofm_cohortidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_cohortid"))
                {
                    return this.FormattedValues["ofm_cohortid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_id")]
        public string ofm_id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_id");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_id", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_payment_type")]
        public virtual ecc_payment_type? ofm_payment_type
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_payment_type?)(EntityOptionSetEnum.GetEnum(this, "ofm_payment_type")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_payment_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_payment_typename")]
        public string ofm_payment_typename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_payment_type"))
                {
                    return this.FormattedValues["ofm_payment_type"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the ACK Codes
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_ack_codes_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_ack_codes_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the ACK Codes
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_ack_codes_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_ack_codes_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 team_ofm_ack_codes
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_ack_codes")]
        public ECC.Core.DataContext.Team team_ofm_ack_codes
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_ack_codes", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_ack_codes(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_ack_codesid"] = base.Id;
                        break;
                    case "ofm_ack_codesid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// Supplementary Application Record
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_allowance")]
    public partial class ofm_allowance : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_allowance entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string exchangerate = "exchangerate";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_allowance_number = "ofm_allowance_number";
            public const string ofm_allowance_type = "ofm_allowance_type";
            public const string ofm_allowance_typename = "ofm_allowance_typename";
            public const string ofm_allowanceid = "ofm_allowanceid";
            public const string Id = "ofm_allowanceid";
            public const string ofm_application = "ofm_application";
            public const string ofm_application_allowance = "ofm_application_allowance";
            public const string ofm_applicationname = "ofm_applicationname";
            public const string ofm_approval_pdf = "ofm_approval_pdf";
            public const string ofm_approval_pdf_name = "ofm_approval_pdf_name";
            public const string ofm_denial_reason = "ofm_denial_reason";
            public const string ofm_document_allowance = "ofm_document_allowance";
            public const string ofm_end_date = "ofm_end_date";
            public const string ofm_finance_lease_agreement_transportation = "ofm_finance_lease_agreement_transportation";
            public const string ofm_finance_lease_agreement_transportationname = "ofm_finance_lease_agreement_transportationname";
            public const string ofm_funding_amount = "ofm_funding_amount";
            public const string ofm_funding_amount_base = "ofm_funding_amount_base";
            public const string ofm_funding_number = "ofm_funding_number";
            public const string ofm_inclusion_policy_support = "ofm_inclusion_policy_support";
            public const string ofm_inclusion_policy_supportname = "ofm_inclusion_policy_supportname";
            public const string ofm_indigenous_description = "ofm_indigenous_description";
            public const string ofm_indigenous_expenses = "ofm_indigenous_expenses";
            public const string ofm_indigenous_expensesname = "ofm_indigenous_expensesname";
            public const string ofm_intended_use_of_funds_indigenous = "ofm_intended_use_of_funds_indigenous";
            public const string ofm_intended_use_of_funds_indigenousname = "ofm_intended_use_of_funds_indigenousname";
            public const string ofm_intended_use_of_funds_support = "ofm_intended_use_of_funds_support";
            public const string ofm_intended_use_of_funds_supportname = "ofm_intended_use_of_funds_supportname";
            public const string ofm_kms_same_as_odometer_transportation = "ofm_kms_same_as_odometer_transportation";
            public const string ofm_kms_same_as_odometer_transportationname = "ofm_kms_same_as_odometer_transportationname";
            public const string ofm_monthly_amount = "ofm_monthly_amount";
            public const string ofm_monthly_amount_base = "ofm_monthly_amount_base";
            public const string ofm_monthly_km_check_transportation = "ofm_monthly_km_check_transportation";
            public const string ofm_monthly_km_check_transportationname = "ofm_monthly_km_check_transportationname";
            public const string ofm_needs_description = "ofm_needs_description";
            public const string ofm_needs_expenses = "ofm_needs_expenses";
            public const string ofm_needs_expensesname = "ofm_needs_expensesname";
            public const string ofm_notification_sent = "ofm_notification_sent";
            public const string ofm_notification_sentname = "ofm_notification_sentname";
            public const string ofm_payment_allowance = "ofm_payment_allowance";
            public const string ofm_pcm_validated = "ofm_pcm_validated";
            public const string ofm_pcm_validatedname = "ofm_pcm_validatedname";
            public const string ofm_picture_of_odometer_transportation = "ofm_picture_of_odometer_transportation";
            public const string ofm_picture_of_odometer_transportationname = "ofm_picture_of_odometer_transportationname";
            public const string ofm_reminder = "ofm_reminder";
            public const string ofm_reminder_allowance = "ofm_reminder_allowance";
            public const string ofm_remindername = "ofm_remindername";
            public const string ofm_renewal_term = "ofm_renewal_term";
            public const string ofm_retroactive_amount = "ofm_retroactive_amount";
            public const string ofm_retroactive_amount_base = "ofm_retroactive_amount_base";
            public const string ofm_retroactive_date = "ofm_retroactive_date";
            public const string ofm_sourceid = "ofm_sourceid";
            public const string ofm_start_date = "ofm_start_date";
            public const string ofm_submittedon = "ofm_submittedon";
            public const string ofm_summary_declaration = "ofm_summary_declaration";
            public const string ofm_summary_declarationname = "ofm_summary_declarationname";
            public const string ofm_summary_ministry_last_updated = "ofm_summary_ministry_last_updated";
            public const string ofm_summary_provider_last_updated = "ofm_summary_provider_last_updated";
            public const string ofm_supplementary_application_pdf = "ofm_supplementary_application_pdf";
            public const string ofm_supplementary_application_pdf_name = "ofm_supplementary_application_pdf_name";
            public const string ofm_supplementary_schedule = "ofm_supplementary_schedule";
            public const string ofm_supplementary_schedulename = "ofm_supplementary_schedulename";
            public const string ofm_supplementaryschedule_allowance = "ofm_supplementaryschedule_allowance";
            public const string ofm_transport_estimated_yearly_km = "ofm_transport_estimated_yearly_km";
            public const string ofm_transport_monthly_lease = "ofm_transport_monthly_lease";
            public const string ofm_transport_monthly_lease_base = "ofm_transport_monthly_lease_base";
            public const string ofm_transport_odometer = "ofm_transport_odometer";
            public const string ofm_transport_vehicle_vin = "ofm_transport_vehicle_vin";
            public const string ofm_vehicle_use_is_eligible_transportation = "ofm_vehicle_use_is_eligible_transportation";
            public const string ofm_vehicle_use_is_eligible_transportationname = "ofm_vehicle_use_is_eligible_transportationname";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_allowance = "team_ofm_allowance";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string transactioncurrencyid = "transactioncurrencyid";
            public const string transactioncurrencyidname = "transactioncurrencyidname";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_allowance(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_allowance(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_allowance(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ofm_sourceid";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_allowance() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_allowanceid";

        public const string PrimaryNameAttribute = "ofm_allowance_number";

        public const string EntitySchemaName = "ofm_allowance";

        public const string EntityLogicalName = "ofm_allowance";

        public const string EntityLogicalCollectionName = "ofm_allowances";

        public const string EntitySetName = "ofm_allowances";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Exchange rate for the currency associated with the entity with respect to the base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
        public System.Nullable<decimal> exchangerate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// OFM Allowance Record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_allowance_number")]
        public string ofm_allowance_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_allowance_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_allowance_number", value);
            }
        }

        /// <summary>
        /// Allowance Type
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_allowance_type")]
        public virtual ecc_allowance_type? ofm_allowance_type
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_allowance_type?)(EntityOptionSetEnum.GetEnum(this, "ofm_allowance_type")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_allowance_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_allowance_typename")]
        public string ofm_allowance_typename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_allowance_type"))
                {
                    return this.FormattedValues["ofm_allowance_type"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_allowanceid")]
        public System.Nullable<System.Guid> ofm_allowanceid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_allowanceid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_allowanceid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_allowanceid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_allowanceid = value;
            }
        }

        /// <summary>
        /// The associated Application on the allowance record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_application");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_application", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_applicationname")]
        public string ofm_applicationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_application"))
                {
                    return this.FormattedValues["ofm_application"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_approval_pdf")]
        public object ofm_approval_pdf
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<object>("ofm_approval_pdf");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_approval_pdf_name")]
        public string ofm_approval_pdf_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_approval_pdf"))
                {
                    return this.FormattedValues["ofm_approval_pdf"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_denial_reason")]
        public string ofm_denial_reason
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_denial_reason");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_denial_reason", value);
            }
        }

        /// <summary>
        /// End Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_end_date")]
        public System.Nullable<System.DateTime> ofm_end_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_end_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_end_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_finance_lease_agreement_transportation")]
        public virtual ofm_verification_checklist_status? ofm_finance_lease_agreement_transportation
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_verification_checklist_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_finance_lease_agreement_transportation")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_finance_lease_agreement_transportation", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_finance_lease_agreement_transportationname")]
        public string ofm_finance_lease_agreement_transportationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_finance_lease_agreement_transportation"))
                {
                    return this.FormattedValues["ofm_finance_lease_agreement_transportation"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_funding_amount")]
        public Microsoft.Xrm.Sdk.Money ofm_funding_amount
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_funding_amount");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_funding_amount", value);
            }
        }

        /// <summary>
        /// Value of the Funding Amount in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_funding_amount_base")]
        public Microsoft.Xrm.Sdk.Money ofm_funding_amount_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_funding_amount_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_funding_number")]
        public string ofm_funding_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_funding_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_funding_number", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_inclusion_policy_support")]
        public virtual ofm_verification_checklist_status? ofm_inclusion_policy_support
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_verification_checklist_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_inclusion_policy_support")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_inclusion_policy_support", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_inclusion_policy_supportname")]
        public string ofm_inclusion_policy_supportname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_inclusion_policy_support"))
                {
                    return this.FormattedValues["ofm_inclusion_policy_support"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Please describe how you intend to use this funding (IP)
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_indigenous_description")]
        public string ofm_indigenous_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_indigenous_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_indigenous_description", value);
            }
        }

        /// <summary>
        /// Select the option(s) on how you intend to use this funding (IP)
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_indigenous_expenses")]
        public virtual System.Collections.Generic.IEnumerable<ecc_indigenous_programming_expenses> ofm_indigenous_expenses
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return EntityOptionSetEnum.GetMultiEnum<ecc_indigenous_programming_expenses>(this, "ofm_indigenous_expenses");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_indigenous_expenses", EntityOptionSetEnum.GetMultiEnum(this, "ofm_indigenous_expenses", value));
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_indigenous_expensesname")]
        public string ofm_indigenous_expensesname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_indigenous_expenses"))
                {
                    return this.FormattedValues["ofm_indigenous_expenses"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_intended_use_of_funds_indigenous")]
        public virtual ofm_verification_checklist_status? ofm_intended_use_of_funds_indigenous
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_verification_checklist_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_intended_use_of_funds_indigenous")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_intended_use_of_funds_indigenous", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_intended_use_of_funds_indigenousname")]
        public string ofm_intended_use_of_funds_indigenousname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_intended_use_of_funds_indigenous"))
                {
                    return this.FormattedValues["ofm_intended_use_of_funds_indigenous"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_intended_use_of_funds_support")]
        public virtual ofm_verification_checklist_status? ofm_intended_use_of_funds_support
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_verification_checklist_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_intended_use_of_funds_support")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_intended_use_of_funds_support", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_intended_use_of_funds_supportname")]
        public string ofm_intended_use_of_funds_supportname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_intended_use_of_funds_support"))
                {
                    return this.FormattedValues["ofm_intended_use_of_funds_support"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_kms_same_as_odometer_transportation")]
        public virtual ofm_verification_checklist_status? ofm_kms_same_as_odometer_transportation
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_verification_checklist_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_kms_same_as_odometer_transportation")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_kms_same_as_odometer_transportation", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_kms_same_as_odometer_transportationname")]
        public string ofm_kms_same_as_odometer_transportationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_kms_same_as_odometer_transportation"))
                {
                    return this.FormattedValues["ofm_kms_same_as_odometer_transportation"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_monthly_amount")]
        public Microsoft.Xrm.Sdk.Money ofm_monthly_amount
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_monthly_amount");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_monthly_amount", value);
            }
        }

        /// <summary>
        /// Value of the Monthly Amount in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_monthly_amount_base")]
        public Microsoft.Xrm.Sdk.Money ofm_monthly_amount_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_monthly_amount_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_monthly_km_check_transportation")]
        public virtual ofm_verification_checklist_status? ofm_monthly_km_check_transportation
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_verification_checklist_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_monthly_km_check_transportation")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_monthly_km_check_transportation", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_monthly_km_check_transportationname")]
        public string ofm_monthly_km_check_transportationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_monthly_km_check_transportation"))
                {
                    return this.FormattedValues["ofm_monthly_km_check_transportation"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Please describe how you intend to use this funding (SNs)
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_needs_description")]
        public string ofm_needs_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_needs_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_needs_description", value);
            }
        }

        /// <summary>
        /// Select the option(s) on how you intend to use this funding (SN)
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_needs_expenses")]
        public virtual System.Collections.Generic.IEnumerable<ecc_support_needs_expenses> ofm_needs_expenses
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return EntityOptionSetEnum.GetMultiEnum<ecc_support_needs_expenses>(this, "ofm_needs_expenses");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_needs_expenses", EntityOptionSetEnum.GetMultiEnum(this, "ofm_needs_expenses", value));
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_needs_expensesname")]
        public string ofm_needs_expensesname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_needs_expenses"))
                {
                    return this.FormattedValues["ofm_needs_expenses"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_notification_sent")]
        public System.Nullable<bool> ofm_notification_sent
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_notification_sent");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_notification_sent", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_notification_sentname")]
        public string ofm_notification_sentname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_notification_sent"))
                {
                    return this.FormattedValues["ofm_notification_sent"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pcm_validated")]
        public System.Nullable<bool> ofm_pcm_validated
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_pcm_validated");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_pcm_validated", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pcm_validatedname")]
        public string ofm_pcm_validatedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_pcm_validated"))
                {
                    return this.FormattedValues["ofm_pcm_validated"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_picture_of_odometer_transportation")]
        public virtual ofm_verification_checklist_status? ofm_picture_of_odometer_transportation
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_verification_checklist_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_picture_of_odometer_transportation")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_picture_of_odometer_transportation", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_picture_of_odometer_transportationname")]
        public string ofm_picture_of_odometer_transportationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_picture_of_odometer_transportation"))
                {
                    return this.FormattedValues["ofm_picture_of_odometer_transportation"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The associated Reminder
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_reminder")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_reminder
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_reminder");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_reminder", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_remindername")]
        public string ofm_remindername
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_reminder"))
                {
                    return this.FormattedValues["ofm_reminder"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Renewal Term
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_renewal_term")]
        public System.Nullable<int> ofm_renewal_term
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_renewal_term");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_renewal_term", value);
            }
        }

        /// <summary>
        /// Retroactive Amount
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_retroactive_amount")]
        public Microsoft.Xrm.Sdk.Money ofm_retroactive_amount
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_retroactive_amount");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_retroactive_amount", value);
            }
        }

        /// <summary>
        /// Value of the Retroactive Amount in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_retroactive_amount_base")]
        public Microsoft.Xrm.Sdk.Money ofm_retroactive_amount_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_retroactive_amount_base");
            }
        }

        /// <summary>
        /// Retroactive Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_retroactive_date")]
        public System.Nullable<System.DateTime> ofm_retroactive_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_retroactive_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_retroactive_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_sourceid")]
        public string ofm_sourceid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_sourceid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_sourceid", value);
            }
        }

        /// <summary>
        /// Start Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_start_date")]
        public System.Nullable<System.DateTime> ofm_start_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_start_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_start_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_submittedon")]
        public System.Nullable<System.DateTime> ofm_submittedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_submittedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_submittedon", value);
            }
        }

        /// <summary>
        /// I certify that all of the information provided is true and complete to the best of my knowledge.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_summary_declaration")]
        public System.Nullable<bool> ofm_summary_declaration
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_summary_declaration");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_summary_declaration", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_summary_declarationname")]
        public string ofm_summary_declarationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_summary_declaration"))
                {
                    return this.FormattedValues["ofm_summary_declaration"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_summary_ministry_last_updated")]
        public System.Nullable<System.DateTime> ofm_summary_ministry_last_updated
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_summary_ministry_last_updated");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_summary_ministry_last_updated", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_summary_provider_last_updated")]
        public System.Nullable<System.DateTime> ofm_summary_provider_last_updated
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_summary_provider_last_updated");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_summary_provider_last_updated", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supplementary_application_pdf")]
        public object ofm_supplementary_application_pdf
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<object>("ofm_supplementary_application_pdf");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supplementary_application_pdf_name")]
        public string ofm_supplementary_application_pdf_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_supplementary_application_pdf"))
                {
                    return this.FormattedValues["ofm_supplementary_application_pdf"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The associated Supplementary Schedule on the allowance record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supplementary_schedule")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_supplementary_schedule
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_supplementary_schedule");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_supplementary_schedule", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supplementary_schedulename")]
        public string ofm_supplementary_schedulename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_supplementary_schedule"))
                {
                    return this.FormattedValues["ofm_supplementary_schedule"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_transport_estimated_yearly_km")]
        public System.Nullable<int> ofm_transport_estimated_yearly_km
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_transport_estimated_yearly_km");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_transport_estimated_yearly_km", value);
            }
        }

        /// <summary>
        /// Monthly Lease
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_transport_monthly_lease")]
        public Microsoft.Xrm.Sdk.Money ofm_transport_monthly_lease
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_transport_monthly_lease");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_transport_monthly_lease", value);
            }
        }

        /// <summary>
        /// Value of the Monthly Lease in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_transport_monthly_lease_base")]
        public Microsoft.Xrm.Sdk.Money ofm_transport_monthly_lease_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_transport_monthly_lease_base");
            }
        }

        /// <summary>
        /// Odometer
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_transport_odometer")]
        public System.Nullable<int> ofm_transport_odometer
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_transport_odometer");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_transport_odometer", value);
            }
        }

        /// <summary>
        /// VIN
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_transport_vehicle_vin")]
        public string ofm_transport_vehicle_vin
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_transport_vehicle_vin");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_transport_vehicle_vin", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_vehicle_use_is_eligible_transportation")]
        public virtual ofm_verification_checklist_status? ofm_vehicle_use_is_eligible_transportation
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_verification_checklist_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_vehicle_use_is_eligible_transportation")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_vehicle_use_is_eligible_transportation", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_vehicle_use_is_eligible_transportationname")]
        public string ofm_vehicle_use_is_eligible_transportationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_vehicle_use_is_eligible_transportation"))
                {
                    return this.FormattedValues["ofm_vehicle_use_is_eligible_transportation"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Allowance
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_allowance_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_allowance_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Allowance
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_allowance_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_allowance_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the currency associated with the entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("transactioncurrencyid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
        public string transactioncurrencyidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("transactioncurrencyid"))
                {
                    return this.FormattedValues["transactioncurrencyid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N ofm_document_allowance
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_document_allowance")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_document> ofm_document_allowance
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_document>("ofm_document_allowance", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_document>("ofm_document_allowance", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_payment_allowance
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_payment_allowance")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_payment> ofm_payment_allowance
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_payment>("ofm_payment_allowance", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_payment>("ofm_payment_allowance", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_application_allowance
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_application_allowance")]
        public ECC.Core.DataContext.ofm_application ofm_application_allowance
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_application_allowance", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_application_allowance", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_reminder_allowance
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_reminder")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_reminder_allowance")]
        public ECC.Core.DataContext.ofm_reminder ofm_reminder_allowance
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_reminder>("ofm_reminder_allowance", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_reminder>("ofm_reminder_allowance", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_supplementaryschedule_allowance
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supplementary_schedule")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_supplementaryschedule_allowance")]
        public ECC.Core.DataContext.ofm_supplementary_schedule ofm_supplementaryschedule_allowance
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_supplementary_schedule>("ofm_supplementaryschedule_allowance", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_supplementary_schedule>("ofm_supplementaryschedule_allowance", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_allowance
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_allowance")]
        public ECC.Core.DataContext.Team team_ofm_allowance
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_allowance", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_allowance(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_allowanceid"] = base.Id;
                        break;
                    case "ofm_allowanceid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// New and renewal application record
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_application")]
    public partial class ofm_application : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_application entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string exchangerate = "exchangerate";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_accb_participation = "ofm_accb_participation";
            public const string ofm_accb_participationname = "ofm_accb_participationname";
            public const string ofm_Application = "ofm_application";
            public const string ofm_application_allowance = "ofm_application_allowance";
            public const string ofm_application_expense = "ofm_application_expense";
            public const string ofm_application_funding = "ofm_application_funding";
            public const string ofm_application_paymentrequest = "ofm_application_paymentrequest";
            public const string ofm_application_pdf = "ofm_application_pdf";
            public const string ofm_application_pdf_name = "ofm_application_pdf_name";
            public const string ofm_application_provideremployee = "ofm_application_provideremployee";
            public const string ofm_application_reminder = "ofm_application_reminder";
            public const string Referencingofm_application_RenewalApplicationId = "ofm_application_RenewalApplicationId";
            public const string ofm_application_review_complete = "ofm_application_review_complete";
            public const string ofm_application_review_completename = "ofm_application_review_completename";
            public const string ofm_application_type = "ofm_application_type";
            public const string ofm_application_typename = "ofm_application_typename";
            public const string ofm_applicationid = "ofm_applicationid";
            public const string Id = "ofm_applicationid";
            public const string ofm_armslengthlease = "ofm_armslengthlease";
            public const string ofm_armslengthleasename = "ofm_armslengthleasename";
            public const string ofm_ccfri_participation = "ofm_ccfri_participation";
            public const string ofm_ccfri_participationname = "ofm_ccfri_participationname";
            public const string ofm_contact = "ofm_contact";
            public const string ofm_contact_applications = "ofm_contact_applications";
            public const string ofm_contactname = "ofm_contactname";
            public const string ofm_contactyominame = "ofm_contactyominame";
            public const string ofm_costs_applicable_fee = "ofm_costs_applicable_fee";
            public const string ofm_costs_applicable_fee_base = "ofm_costs_applicable_fee_base";
            public const string ofm_costs_facility_type = "ofm_costs_facility_type";
            public const string ofm_costs_facility_typename = "ofm_costs_facility_typename";
            public const string ofm_costs_furniture_equipment = "ofm_costs_furniture_equipment";
            public const string ofm_costs_furniture_equipment_base = "ofm_costs_furniture_equipment_base";
            public const string ofm_costs_lease_end_date = "ofm_costs_lease_end_date";
            public const string ofm_costs_lease_start_date = "ofm_costs_lease_start_date";
            public const string ofm_costs_maintenance_repairs = "ofm_costs_maintenance_repairs";
            public const string ofm_costs_maintenance_repairs_base = "ofm_costs_maintenance_repairs_base";
            public const string ofm_costs_mortgage = "ofm_costs_mortgage";
            public const string ofm_costs_mortgage_base = "ofm_costs_mortgage_base";
            public const string ofm_costs_property_insurance = "ofm_costs_property_insurance";
            public const string ofm_costs_property_insurance_base = "ofm_costs_property_insurance_base";
            public const string ofm_costs_property_municipal_tax = "ofm_costs_property_municipal_tax";
            public const string ofm_costs_property_municipal_tax_base = "ofm_costs_property_municipal_tax_base";
            public const string ofm_costs_rent_lease = "ofm_costs_rent_lease";
            public const string ofm_costs_rent_lease_base = "ofm_costs_rent_lease_base";
            public const string ofm_costs_strata_fee = "ofm_costs_strata_fee";
            public const string ofm_costs_strata_fee_base = "ofm_costs_strata_fee_base";
            public const string ofm_costs_supplies = "ofm_costs_supplies";
            public const string ofm_costs_supplies_base = "ofm_costs_supplies_base";
            public const string ofm_costs_upkeep_labour_supplies = "ofm_costs_upkeep_labour_supplies";
            public const string ofm_costs_upkeep_labour_supplies_base = "ofm_costs_upkeep_labour_supplies_base";
            public const string ofm_costs_utilities = "ofm_costs_utilities";
            public const string ofm_costs_utilities_base = "ofm_costs_utilities_base";
            public const string ofm_costs_year_facility_costs = "ofm_costs_year_facility_costs";
            public const string ofm_costs_year_facility_costs_base = "ofm_costs_year_facility_costs_base";
            public const string ofm_costs_yearly_operating_costs = "ofm_costs_yearly_operating_costs";
            public const string ofm_costs_yearly_operating_costs_base = "ofm_costs_yearly_operating_costs_base";
            public const string ofm_createdby = "ofm_createdby";
            public const string ofm_createdby_application = "ofm_createdby_application";
            public const string ofm_createdbyname = "ofm_createdbyname";
            public const string ofm_createdbyyominame = "ofm_createdbyyominame";
            public const string ofm_document_application = "ofm_document_application";
            public const string ofm_ece_certificates_good_standing = "ofm_ece_certificates_good_standing";
            public const string ofm_ece_certificates_good_standingname = "ofm_ece_certificates_good_standingname";
            public const string ofm_ecewe_participation = "ofm_ecewe_participation";
            public const string ofm_ecewe_participationname = "ofm_ecewe_participationname";
            public const string ofm_economic_analysis_participation = "ofm_economic_analysis_participation";
            public const string ofm_economic_analysis_participationname = "ofm_economic_analysis_participationname";
            public const string ofm_expense_authority = "ofm_expense_authority";
            public const string ofm_expense_authorityname = "ofm_expense_authorityname";
            public const string ofm_expense_authorityyominame = "ofm_expense_authorityyominame";
            public const string ofm_expenseauthority_application = "ofm_expenseauthority_application";
            public const string ofm_facility = "ofm_facility";
            public const string ofm_facility_application = "ofm_facility_application";
            public const string ofm_facilityname = "ofm_facilityname";
            public const string ofm_facilityyominame = "ofm_facilityyominame";
            public const string ofm_familyprovider_banner = "ofm_familyprovider_banner";
            public const string ofm_fiscal_year_end = "ofm_fiscal_year_end";
            public const string ofm_funding_number_base = "ofm_funding_number_base";
            public const string ofm_funding_version_number = "ofm_funding_version_number";
            public const string ofm_greaterthan_1_year_ccof_or_tdad = "ofm_greaterthan_1_year_ccof_or_tdad";
            public const string ofm_greaterthan_1_year_ccof_or_tdadname = "ofm_greaterthan_1_year_ccof_or_tdadname";
            public const string ofm_gt_2mliability_insurance_coverage = "ofm_gt_2mliability_insurance_coverage";
            public const string ofm_gt_2mliability_insurance_coveragename = "ofm_gt_2mliability_insurance_coveragename";
            public const string ofm_health_authority_good_standing = "ofm_health_authority_good_standing";
            public const string ofm_health_authority_good_standingname = "ofm_health_authority_good_standingname";
            public const string ofm_integrationlog_application = "ofm_integrationlog_application";
            public const string ofm_last_funding_mod = "ofm_last_funding_mod";
            public const string ofm_licence_declaration = "ofm_licence_declaration";
            public const string ofm_licence_declarationname = "ofm_licence_declarationname";
            public const string ofm_ministry_good_standing = "ofm_ministry_good_standing";
            public const string ofm_ministry_good_standingname = "ofm_ministry_good_standingname";
            public const string ofm_month_to_month = "ofm_month_to_month";
            public const string ofm_month_to_monthname = "ofm_month_to_monthname";
            public const string ofm_operate_separate_bank_account = "ofm_operate_separate_bank_account";
            public const string ofm_operate_separate_bank_accountname = "ofm_operate_separate_bank_accountname";
            public const string ofm_organization = "ofm_organization";
            public const string ofm_organization_application = "ofm_organization_application";
            public const string ofm_organizationname = "ofm_organizationname";
            public const string ofm_organizationyominame = "ofm_organizationyominame";
            public const string ofm_payment_application = "ofm_payment_application";
            public const string ofm_pcm_banner = "ofm_pcm_banner";
            public const string ofm_pcm_indicator = "ofm_pcm_indicator";
            public const string ofm_pcm_indicatorname = "ofm_pcm_indicatorname";
            public const string ofm_pcmreview_application = "ofm_pcmreview_application";
            public const string ofm_provide_actual_expenses = "ofm_provide_actual_expenses";
            public const string ofm_provide_actual_expensesname = "ofm_provide_actual_expensesname";
            public const string ofm_provide_previous_fy_financial_statements = "ofm_provide_previous_fy_financial_statements";
            public const string ofm_provide_previous_fy_financial_statementsname = "ofm_provide_previous_fy_financial_statementsname";
            public const string ofm_provider_type = "ofm_provider_type";
            public const string ofm_provider_typename = "ofm_provider_typename";
            public const string ofm_ranking = "ofm_ranking";
            public const string ofm_renewalapplicationid = "ofm_renewalapplicationid";
            public const string ofm_renewalapplicationidname = "ofm_renewalapplicationidname";
            public const string ofm_renewalapplicationstatus = "ofm_renewalapplicationstatus";
            public const string ofm_renewalapplicationstatusname = "ofm_renewalapplicationstatusname";
            public const string ofm_request_application = "ofm_request_application";
            public const string ofm_review_underway_banner = "ofm_review_underway_banner";
            public const string ofm_room_split_banner = "ofm_room_split_banner";
            public const string ofm_room_split_indicator = "ofm_room_split_indicator";
            public const string ofm_room_split_indicatorname = "ofm_room_split_indicatorname";
            public const string ofm_secondary_contact = "ofm_secondary_contact";
            public const string ofm_secondary_contact_application = "ofm_secondary_contact_application";
            public const string ofm_secondary_contactname = "ofm_secondary_contactname";
            public const string ofm_secondary_contactyominame = "ofm_secondary_contactyominame";
            public const string ofm_sourceid = "ofm_sourceid";
            public const string ofm_staff_ec_educator_assistant_ft = "ofm_staff_ec_educator_assistant_ft";
            public const string ofm_staff_ec_educator_assistant_pt = "ofm_staff_ec_educator_assistant_pt";
            public const string ofm_staff_ec_educator_ft = "ofm_staff_ec_educator_ft";
            public const string ofm_staff_ec_educator_pt = "ofm_staff_ec_educator_pt";
            public const string ofm_staff_infant_ec_educator_ft = "ofm_staff_infant_ec_educator_ft";
            public const string ofm_staff_infant_ec_educator_pt = "ofm_staff_infant_ec_educator_pt";
            public const string ofm_staff_responsible_adult_ft = "ofm_staff_responsible_adult_ft";
            public const string ofm_staff_responsible_adult_pt = "ofm_staff_responsible_adult_pt";
            public const string ofm_submittedby_application = "ofm_submittedby_application";
            public const string ofm_summary_declaration = "ofm_summary_declaration";
            public const string ofm_summary_declarationname = "ofm_summary_declarationname";
            public const string ofm_summary_ministry_last_updated = "ofm_summary_ministry_last_updated";
            public const string ofm_summary_ownership = "ofm_summary_ownership";
            public const string ofm_summary_ownershipname = "ofm_summary_ownershipname";
            public const string ofm_summary_provider_last_updated = "ofm_summary_provider_last_updated";
            public const string ofm_summary_signing_authority = "ofm_summary_signing_authority";
            public const string ofm_summary_submittedby = "ofm_summary_submittedby";
            public const string ofm_summary_submittedbyname = "ofm_summary_submittedbyname";
            public const string ofm_summary_submittedbyyominame = "ofm_summary_submittedbyyominame";
            public const string ofm_summary_submittedon = "ofm_summary_submittedon";
            public const string ofm_supplementary_banner = "ofm_supplementary_banner";
            public const string ofm_supplementary_indicator = "ofm_supplementary_indicator";
            public const string ofm_supplementary_indicatorname = "ofm_supplementary_indicatorname";
            public const string ofm_system_bc_registry_good_standing = "ofm_system_bc_registry_good_standing";
            public const string ofm_system_bc_registry_good_standingname = "ofm_system_bc_registry_good_standingname";
            public const string ofm_system_bypass_bc_registry_good_standing = "ofm_system_bypass_bc_registry_good_standing";
            public const string ofm_system_bypass_bc_registry_good_standingname = "ofm_system_bypass_bc_registry_good_standingname";
            public const string ofm_system_bypass_ccof_tdad_participation = "ofm_system_bypass_ccof_tdad_participation";
            public const string ofm_system_bypass_ccof_tdad_participationname = "ofm_system_bypass_ccof_tdad_participationname";
            public const string ofm_system_bypass_financial_good_standing = "ofm_system_bypass_financial_good_standing";
            public const string ofm_system_bypass_financial_good_standingname = "ofm_system_bypass_financial_good_standingname";
            public const string ofm_system_bypass_reason_bc_good_standing = "ofm_system_bypass_reason_bc_good_standing";
            public const string ofm_system_bypass_reason_ccof_tdad = "ofm_system_bypass_reason_ccof_tdad";
            public const string ofm_system_bypass_reason_financial_good = "ofm_system_bypass_reason_financial_good";
            public const string ofm_system_ccof_tdad_participation = "ofm_system_ccof_tdad_participation";
            public const string ofm_system_ccof_tdad_participationname = "ofm_system_ccof_tdad_participationname";
            public const string ofm_system_financial_good_standing = "ofm_system_financial_good_standing";
            public const string ofm_system_financial_good_standingname = "ofm_system_financial_good_standingname";
            public const string ofm_triage_score = "ofm_triage_score";
            public const string ofm_union_cssea = "ofm_union_cssea";
            public const string ofm_union_csseaname = "ofm_union_csseaname";
            public const string ofm_union_description = "ofm_union_description";
            public const string ofm_union_list = "ofm_union_list";
            public const string ofm_union_listname = "ofm_union_listname";
            public const string ofm_unionized = "ofm_unionized";
            public const string ofm_unionizedname = "ofm_unionizedname";
            public const string ofm_unionizedsite_banner = "ofm_unionizedsite_banner";
            public const string ofm_verification_application_licence = "ofm_verification_application_licence";
            public const string ofm_verification_application_licencename = "ofm_verification_application_licencename";
            public const string ofm_verification_application_signed = "ofm_verification_application_signed";
            public const string ofm_verification_application_signedname = "ofm_verification_application_signedname";
            public const string ofm_verification_ece_certificate_status = "ofm_verification_ece_certificate_status";
            public const string ofm_verification_ece_certificate_statusname = "ofm_verification_ece_certificate_statusname";
            public const string ofm_verification_ecea_certificate_status = "ofm_verification_ecea_certificate_status";
            public const string ofm_verification_ecea_certificate_statusname = "ofm_verification_ecea_certificate_statusname";
            public const string ofm_verification_last_update_application_lic = "ofm_verification_last_update_application_lic";
            public const string ofm_verification_last_update_application_sign = "ofm_verification_last_update_application_sign";
            public const string ofm_verification_last_update_by_app_lic = "ofm_verification_last_update_by_app_lic";
            public const string ofm_verification_last_update_by_app_sign = "ofm_verification_last_update_by_app_sign";
            public const string ofm_verification_last_update_by_legal_name = "ofm_verification_last_update_by_legal_name";
            public const string ofm_verification_last_update_by_licence_valid = "ofm_verification_last_update_by_licence_valid";
            public const string ofm_verification_last_update_by_mailing_add = "ofm_verification_last_update_by_mailing_add";
            public const string ofm_verification_last_update_by_mandatory_doc = "ofm_verification_last_update_by_mandatory_doc";
            public const string ofm_verification_last_update_by_new_spaces = "ofm_verification_last_update_by_new_spaces";
            public const string ofm_verification_last_update_by_rent_lease = "ofm_verification_last_update_by_rent_lease";
            public const string ofm_verification_last_update_by_terminate_fun = "ofm_verification_last_update_by_terminate_fun";
            public const string ofm_verification_last_update_by_valid_ece_cer = "ofm_verification_last_update_by_valid_ece_cer";
            public const string ofm_verification_last_update_legal_name = "ofm_verification_last_update_legal_name";
            public const string ofm_verification_last_update_licence_valid = "ofm_verification_last_update_licence_valid";
            public const string ofm_verification_last_update_mailing_address = "ofm_verification_last_update_mailing_address";
            public const string ofm_verification_last_update_mandatory_docs = "ofm_verification_last_update_mandatory_docs";
            public const string ofm_verification_last_update_new_spaces = "ofm_verification_last_update_new_spaces";
            public const string ofm_verification_last_update_rent_lease = "ofm_verification_last_update_rent_lease";
            public const string ofm_verification_last_update_terminate_fundin = "ofm_verification_last_update_terminate_fundin";
            public const string ofm_verification_last_update_valid_ece_cert = "ofm_verification_last_update_valid_ece_cert";
            public const string ofm_verification_legal_name = "ofm_verification_legal_name";
            public const string ofm_verification_legal_namename = "ofm_verification_legal_namename";
            public const string ofm_verification_licence_valid = "ofm_verification_licence_valid";
            public const string ofm_verification_licence_validname = "ofm_verification_licence_validname";
            public const string ofm_verification_mailing_address = "ofm_verification_mailing_address";
            public const string ofm_verification_mailing_addressname = "ofm_verification_mailing_addressname";
            public const string ofm_verification_mandatory_documents = "ofm_verification_mandatory_documents";
            public const string ofm_verification_mandatory_documentsname = "ofm_verification_mandatory_documentsname";
            public const string ofm_verification_new_spaces_funding_site = "ofm_verification_new_spaces_funding_site";
            public const string ofm_verification_new_spaces_funding_sitename = "ofm_verification_new_spaces_funding_sitename";
            public const string ofm_verification_rent_lease = "ofm_verification_rent_lease";
            public const string ofm_verification_rent_leasename = "ofm_verification_rent_leasename";
            public const string ofm_verification_terminate_active_funding = "ofm_verification_terminate_active_funding";
            public const string ofm_verification_terminate_active_fundingname = "ofm_verification_terminate_active_fundingname";
            public const string ofm_verification_valid_ece_certificates = "ofm_verification_valid_ece_certificates";
            public const string ofm_verification_valid_ece_certificatesname = "ofm_verification_valid_ece_certificatesname";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string Referencedofm_application_RenewalApplicationId = "Referencedofm_application_RenewalApplicationId";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_application = "team_ofm_application";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string transactioncurrencyid = "transactioncurrencyid";
            public const string transactioncurrencyidname = "transactioncurrencyidname";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_application(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_application(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_application(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ofm_sourceid";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_application() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_applicationid";

        public const string PrimaryNameAttribute = "ofm_application";

        public const string EntitySchemaName = "ofm_application";

        public const string EntityLogicalName = "ofm_application";

        public const string EntityLogicalCollectionName = "ofm_applications";

        public const string EntitySetName = "ofm_applications";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Exchange rate for the currency associated with the entity with respect to the base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
        public System.Nullable<decimal> exchangerate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_accb_participation")]
        public virtual ecc_ynempty? ofm_accb_participation
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_accb_participation")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_accb_participation", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_accb_participationname")]
        public string ofm_accb_participationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_accb_participation"))
                {
                    return this.FormattedValues["ofm_accb_participation"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// OFM Application for both new and renewals
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application")]
        public string ofm_Application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_application");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_application", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application_pdf")]
        public object ofm_application_pdf
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<object>("ofm_application_pdf");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application_pdf_name")]
        public string ofm_application_pdf_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_application_pdf"))
                {
                    return this.FormattedValues["ofm_application_pdf"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Provider Review Complete
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application_review_complete")]
        public System.Nullable<bool> ofm_application_review_complete
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_application_review_complete");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_application_review_complete", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application_review_completename")]
        public string ofm_application_review_completename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_application_review_complete"))
                {
                    return this.FormattedValues["ofm_application_review_complete"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Application Type
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application_type")]
        public virtual ecc_application_type? ofm_application_type
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_application_type?)(EntityOptionSetEnum.GetEnum(this, "ofm_application_type")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_application_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application_typename")]
        public string ofm_application_typename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_application_type"))
                {
                    return this.FormattedValues["ofm_application_type"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_applicationid")]
        public System.Nullable<System.Guid> ofm_applicationid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_applicationid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_applicationid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_applicationid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_applicationid = value;
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_armslengthlease")]
        public virtual ofm_application_ofm_armslengthlease? ofm_armslengthlease
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_application_ofm_armslengthlease?)(EntityOptionSetEnum.GetEnum(this, "ofm_armslengthlease")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_armslengthlease", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_armslengthleasename")]
        public string ofm_armslengthleasename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_armslengthlease"))
                {
                    return this.FormattedValues["ofm_armslengthlease"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ccfri_participation")]
        public virtual ecc_ynempty? ofm_ccfri_participation
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_ccfri_participation")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_ccfri_participation", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ccfri_participationname")]
        public string ofm_ccfri_participationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_ccfri_participation"))
                {
                    return this.FormattedValues["ofm_ccfri_participation"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The primary contact on the application
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_contact")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_contact
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_contact");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_contact", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_contactname")]
        public string ofm_contactname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_contact"))
                {
                    return this.FormattedValues["ofm_contact"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_contactyominame")]
        public string ofm_contactyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_contact"))
                {
                    return this.FormattedValues["ofm_contact"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Fee (If Applicable)
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_applicable_fee")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_applicable_fee
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_applicable_fee");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_costs_applicable_fee", value);
            }
        }

        /// <summary>
        /// Value of the Fee (if applicable) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_applicable_fee_base")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_applicable_fee_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_applicable_fee_base");
            }
        }

        /// <summary>
        /// Facility Type
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_facility_type")]
        public virtual ofm_facility_type? ofm_costs_facility_type
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_facility_type?)(EntityOptionSetEnum.GetEnum(this, "ofm_costs_facility_type")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_costs_facility_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_facility_typename")]
        public string ofm_costs_facility_typename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_costs_facility_type"))
                {
                    return this.FormattedValues["ofm_costs_facility_type"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Office Furniture and Equipment (Formerly "Furniture and Equipment")
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_furniture_equipment")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_furniture_equipment
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_furniture_equipment");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_costs_furniture_equipment", value);
            }
        }

        /// <summary>
        /// Value of the Office Furniture and Equipment in base currency.
        ///
        ///(Formerly "Furniture and Equipment" (Base))
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_furniture_equipment_base")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_furniture_equipment_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_furniture_equipment_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_lease_end_date")]
        public System.Nullable<System.DateTime> ofm_costs_lease_end_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_costs_lease_end_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_costs_lease_end_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_lease_start_date")]
        public System.Nullable<System.DateTime> ofm_costs_lease_start_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_costs_lease_start_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_costs_lease_start_date", value);
            }
        }

        /// <summary>
        /// Facility Maintenance and Minor Improvements (formerly "Maintenance and repairs")
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_maintenance_repairs")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_maintenance_repairs
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_maintenance_repairs");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_costs_maintenance_repairs", value);
            }
        }

        /// <summary>
        /// Value of the Facility Maintenance and Minor Improvements in base currency.
        ///
        ///(Formerly "Maintenance and repairs (Base)")
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_maintenance_repairs_base")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_maintenance_repairs_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_maintenance_repairs_base");
            }
        }

        /// <summary>
        /// Mortgage
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_mortgage")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_mortgage
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_mortgage");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_costs_mortgage", value);
            }
        }

        /// <summary>
        /// Value of the Mortgage in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_mortgage_base")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_mortgage_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_mortgage_base");
            }
        }

        /// <summary>
        /// Maintenance and Minor Repairs (formerly 'Insurance')
        ///
        ///Insurance (formerly 'Property Insurance')
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_property_insurance")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_property_insurance
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_property_insurance");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_costs_property_insurance", value);
            }
        }

        /// <summary>
        /// Value of the Maintenance and Minor Repairs in base currency. 
        ///
        ///(Formerly 'Insurance')
        ///(Formerly Property Insurance (Base))
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_property_insurance_base")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_property_insurance_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_property_insurance_base");
            }
        }

        /// <summary>
        /// Property/Municipal Tax
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_property_municipal_tax")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_property_municipal_tax
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_property_municipal_tax");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_costs_property_municipal_tax", value);
            }
        }

        /// <summary>
        /// Value of the Property/municipal tax in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_property_municipal_tax_base")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_property_municipal_tax_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_property_municipal_tax_base");
            }
        }

        /// <summary>
        /// Rent/Lease
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_rent_lease")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_rent_lease
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_rent_lease");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_costs_rent_lease", value);
            }
        }

        /// <summary>
        /// Value of the Rent/Lease in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_rent_lease_base")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_rent_lease_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_rent_lease_base");
            }
        }

        /// <summary>
        /// Strata Fees
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_strata_fee")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_strata_fee
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_strata_fee");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_costs_strata_fee", value);
            }
        }

        /// <summary>
        /// Value of the Strata fees in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_strata_fee_base")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_strata_fee_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_strata_fee_base");
            }
        }

        /// <summary>
        /// Janitorial Services (Formerly "Supplies")
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_supplies")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_supplies
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_supplies");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_costs_supplies", value);
            }
        }

        /// <summary>
        /// Value of the Janitorial Services in base currency.
        ///
        ///(Formerly "Supplies" (Base))
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_supplies_base")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_supplies_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_supplies_base");
            }
        }

        /// <summary>
        /// Upkeep (formerly "Upkeep and labour")
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_upkeep_labour_supplies")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_upkeep_labour_supplies
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_upkeep_labour_supplies");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_costs_upkeep_labour_supplies", value);
            }
        }

        /// <summary>
        /// Value of the Upkeep in base currency.
        ///
        ///(Formerly "Upkeep and labour (Base)")
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_upkeep_labour_supplies_base")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_upkeep_labour_supplies_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_upkeep_labour_supplies_base");
            }
        }

        /// <summary>
        /// Utilities
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_utilities")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_utilities
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_utilities");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_costs_utilities", value);
            }
        }

        /// <summary>
        /// Value of the Utilities in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_utilities_base")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_utilities_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_utilities_base");
            }
        }

        /// <summary>
        /// Yearly Facility Costs
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_year_facility_costs")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_year_facility_costs
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_year_facility_costs");
            }
        }

        /// <summary>
        /// Value of the Year facility costs in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_year_facility_costs_base")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_year_facility_costs_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_year_facility_costs_base");
            }
        }

        /// <summary>
        /// Yearly Operating Costs
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_yearly_operating_costs")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_yearly_operating_costs
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_yearly_operating_costs");
            }
        }

        /// <summary>
        /// Value of the Yearly operating costs in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_yearly_operating_costs_base")]
        public Microsoft.Xrm.Sdk.Money ofm_costs_yearly_operating_costs_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_yearly_operating_costs_base");
            }
        }

        /// <summary>
        /// The facility contact who created the application
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_createdby")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_createdby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_createdby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_createdbyname")]
        public string ofm_createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_createdby"))
                {
                    return this.FormattedValues["ofm_createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_createdbyyominame")]
        public string ofm_createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_createdby"))
                {
                    return this.FormattedValues["ofm_createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ece_certificates_good_standing")]
        public virtual ecc_yn_not_applicable? ofm_ece_certificates_good_standing
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_yn_not_applicable?)(EntityOptionSetEnum.GetEnum(this, "ofm_ece_certificates_good_standing")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_ece_certificates_good_standing", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ece_certificates_good_standingname")]
        public string ofm_ece_certificates_good_standingname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_ece_certificates_good_standing"))
                {
                    return this.FormattedValues["ofm_ece_certificates_good_standing"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ecewe_participation")]
        public virtual ecc_yn_not_applicable? ofm_ecewe_participation
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_yn_not_applicable?)(EntityOptionSetEnum.GetEnum(this, "ofm_ecewe_participation")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_ecewe_participation", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ecewe_participationname")]
        public string ofm_ecewe_participationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_ecewe_participation"))
                {
                    return this.FormattedValues["ofm_ecewe_participation"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_economic_analysis_participation")]
        public virtual ecc_ynempty? ofm_economic_analysis_participation
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_economic_analysis_participation")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_economic_analysis_participation", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_economic_analysis_participationname")]
        public string ofm_economic_analysis_participationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_economic_analysis_participation"))
                {
                    return this.FormattedValues["ofm_economic_analysis_participation"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The associated expense authority on the application
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_expense_authority")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_expense_authority
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_expense_authority");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_expense_authority", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_expense_authorityname")]
        public string ofm_expense_authorityname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_expense_authority"))
                {
                    return this.FormattedValues["ofm_expense_authority"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_expense_authorityyominame")]
        public string ofm_expense_authorityyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_expense_authority"))
                {
                    return this.FormattedValues["ofm_expense_authority"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The associated facility on the application
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_facility
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_facility");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_facility", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilityname")]
        public string ofm_facilityname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_facility"))
                {
                    return this.FormattedValues["ofm_facility"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilityyominame")]
        public string ofm_facilityyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_facility"))
                {
                    return this.FormattedValues["ofm_facility"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_familyprovider_banner")]
        public string ofm_familyprovider_banner
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_familyprovider_banner");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_familyprovider_banner", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fiscal_year_end")]
        public System.Nullable<System.DateTime> ofm_fiscal_year_end
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_fiscal_year_end");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_fiscal_year_end", value);
            }
        }

        /// <summary>
        /// The base funding agreement number without the version
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_funding_number_base")]
        public string ofm_funding_number_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_funding_number_base");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_funding_number_base", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_funding_version_number")]
        public System.Nullable<int> ofm_funding_version_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_funding_version_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_funding_version_number", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_greaterthan_1_year_ccof_or_tdad")]
        public virtual ecc_ynempty? ofm_greaterthan_1_year_ccof_or_tdad
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_greaterthan_1_year_ccof_or_tdad")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_greaterthan_1_year_ccof_or_tdad", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_greaterthan_1_year_ccof_or_tdadname")]
        public string ofm_greaterthan_1_year_ccof_or_tdadname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_greaterthan_1_year_ccof_or_tdad"))
                {
                    return this.FormattedValues["ofm_greaterthan_1_year_ccof_or_tdad"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_gt_2mliability_insurance_coverage")]
        public virtual ecc_ynempty? ofm_gt_2mliability_insurance_coverage
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_gt_2mliability_insurance_coverage")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_gt_2mliability_insurance_coverage", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_gt_2mliability_insurance_coveragename")]
        public string ofm_gt_2mliability_insurance_coveragename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_gt_2mliability_insurance_coverage"))
                {
                    return this.FormattedValues["ofm_gt_2mliability_insurance_coverage"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_health_authority_good_standing")]
        public virtual ecc_ynempty? ofm_health_authority_good_standing
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_health_authority_good_standing")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_health_authority_good_standing", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_health_authority_good_standingname")]
        public string ofm_health_authority_good_standingname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_health_authority_good_standing"))
                {
                    return this.FormattedValues["ofm_health_authority_good_standing"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The date a new funding modification was created
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_last_funding_mod")]
        public System.Nullable<System.DateTime> ofm_last_funding_mod
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_last_funding_mod");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_last_funding_mod", value);
            }
        }

        /// <summary>
        /// I confirm that my licence information is correct
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_declaration")]
        public System.Nullable<bool> ofm_licence_declaration
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_licence_declaration");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_licence_declaration", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_declarationname")]
        public string ofm_licence_declarationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_licence_declaration"))
                {
                    return this.FormattedValues["ofm_licence_declaration"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ministry_good_standing")]
        public virtual ecc_ynempty? ofm_ministry_good_standing
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_ministry_good_standing")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_ministry_good_standing", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ministry_good_standingname")]
        public string ofm_ministry_good_standingname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_ministry_good_standing"))
                {
                    return this.FormattedValues["ofm_ministry_good_standing"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_month_to_month")]
        public virtual ecc_ynempty? ofm_month_to_month
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_month_to_month")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_month_to_month", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_month_to_monthname")]
        public string ofm_month_to_monthname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_month_to_month"))
                {
                    return this.FormattedValues["ofm_month_to_month"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_operate_separate_bank_account")]
        public virtual ccof_yesno? ofm_operate_separate_bank_account
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ccof_yesno?)(EntityOptionSetEnum.GetEnum(this, "ofm_operate_separate_bank_account")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_operate_separate_bank_account", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_operate_separate_bank_accountname")]
        public string ofm_operate_separate_bank_accountname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_operate_separate_bank_account"))
                {
                    return this.FormattedValues["ofm_operate_separate_bank_account"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for Organization-Facility associated with Application.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_organization")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_organization
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_organization");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_organization", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_organizationname")]
        public string ofm_organizationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_organization"))
                {
                    return this.FormattedValues["ofm_organization"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_organizationyominame")]
        public string ofm_organizationyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_organization"))
                {
                    return this.FormattedValues["ofm_organization"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pcm_banner")]
        public string ofm_pcm_banner
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_pcm_banner");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_pcm_banner", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pcm_indicator")]
        public System.Nullable<bool> ofm_pcm_indicator
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_pcm_indicator");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_pcm_indicator", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pcm_indicatorname")]
        public string ofm_pcm_indicatorname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_pcm_indicator"))
                {
                    return this.FormattedValues["ofm_pcm_indicator"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_provide_actual_expenses")]
        public virtual ecc_ynempty? ofm_provide_actual_expenses
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_provide_actual_expenses")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_provide_actual_expenses", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_provide_actual_expensesname")]
        public string ofm_provide_actual_expensesname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_provide_actual_expenses"))
                {
                    return this.FormattedValues["ofm_provide_actual_expenses"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_provide_previous_fy_financial_statements")]
        public virtual ecc_ynempty? ofm_provide_previous_fy_financial_statements
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_provide_previous_fy_financial_statements")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_provide_previous_fy_financial_statements", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_provide_previous_fy_financial_statementsname")]
        public string ofm_provide_previous_fy_financial_statementsname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_provide_previous_fy_financial_statements"))
                {
                    return this.FormattedValues["ofm_provide_previous_fy_financial_statements"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Provider Type
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_provider_type")]
        public virtual ecc_provider_type? ofm_provider_type
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_provider_type?)(EntityOptionSetEnum.GetEnum(this, "ofm_provider_type")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_provider_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_provider_typename")]
        public string ofm_provider_typename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_provider_type"))
                {
                    return this.FormattedValues["ofm_provider_type"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ranking")]
        public System.Nullable<int> ofm_ranking
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_ranking");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_ranking", value);
            }
        }

        /// <summary>
        /// This field stores the next renewal funding application in the system
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_renewalapplicationid")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_renewalapplicationid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_renewalapplicationid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_renewalapplicationid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_renewalapplicationidname")]
        public string ofm_renewalapplicationidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_renewalapplicationid"))
                {
                    return this.FormattedValues["ofm_renewalapplicationid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Stores the status of the renewal application
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_renewalapplicationstatus")]
        public virtual ofm_application_ofm_renewalapplicationstatus? ofm_renewalapplicationstatus
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_application_ofm_renewalapplicationstatus?)(EntityOptionSetEnum.GetEnum(this, "ofm_renewalapplicationstatus")));
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_renewalapplicationstatusname")]
        public string ofm_renewalapplicationstatusname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_renewalapplicationstatus"))
                {
                    return this.FormattedValues["ofm_renewalapplicationstatus"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_review_underway_banner")]
        public string ofm_review_underway_banner
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_review_underway_banner");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_review_underway_banner", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_room_split_banner")]
        public string ofm_room_split_banner
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_room_split_banner");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_room_split_banner", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_room_split_indicator")]
        public System.Nullable<bool> ofm_room_split_indicator
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_room_split_indicator");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_room_split_indicator", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_room_split_indicatorname")]
        public string ofm_room_split_indicatorname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_room_split_indicator"))
                {
                    return this.FormattedValues["ofm_room_split_indicator"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for Contact associated with Application.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_secondary_contact")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_secondary_contact
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_secondary_contact");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_secondary_contact", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_secondary_contactname")]
        public string ofm_secondary_contactname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_secondary_contact"))
                {
                    return this.FormattedValues["ofm_secondary_contact"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_secondary_contactyominame")]
        public string ofm_secondary_contactyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_secondary_contact"))
                {
                    return this.FormattedValues["ofm_secondary_contact"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_sourceid")]
        public string ofm_sourceid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_sourceid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_sourceid", value);
            }
        }

        /// <summary>
        /// Early Childhood Educator Assistant
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_staff_ec_educator_assistant_ft")]
        public System.Nullable<int> ofm_staff_ec_educator_assistant_ft
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_staff_ec_educator_assistant_ft");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_staff_ec_educator_assistant_ft", value);
            }
        }

        /// <summary>
        /// Early Childhood Educator Assistant
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_staff_ec_educator_assistant_pt")]
        public System.Nullable<int> ofm_staff_ec_educator_assistant_pt
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_staff_ec_educator_assistant_pt");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_staff_ec_educator_assistant_pt", value);
            }
        }

        /// <summary>
        /// Early Childhood Educator
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_staff_ec_educator_ft")]
        public System.Nullable<int> ofm_staff_ec_educator_ft
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_staff_ec_educator_ft");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_staff_ec_educator_ft", value);
            }
        }

        /// <summary>
        /// Early Childhood Educator
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_staff_ec_educator_pt")]
        public System.Nullable<int> ofm_staff_ec_educator_pt
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_staff_ec_educator_pt");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_staff_ec_educator_pt", value);
            }
        }

        /// <summary>
        /// Infant/Toddler Early Childhood Educator
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_staff_infant_ec_educator_ft")]
        public System.Nullable<int> ofm_staff_infant_ec_educator_ft
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_staff_infant_ec_educator_ft");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_staff_infant_ec_educator_ft", value);
            }
        }

        /// <summary>
        /// Infant/Toddler Early Childhood Educator
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_staff_infant_ec_educator_pt")]
        public System.Nullable<int> ofm_staff_infant_ec_educator_pt
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_staff_infant_ec_educator_pt");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_staff_infant_ec_educator_pt", value);
            }
        }

        /// <summary>
        /// Responsible Adult
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_staff_responsible_adult_ft")]
        public System.Nullable<int> ofm_staff_responsible_adult_ft
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_staff_responsible_adult_ft");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_staff_responsible_adult_ft", value);
            }
        }

        /// <summary>
        /// Responsible Adult
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_staff_responsible_adult_pt")]
        public System.Nullable<int> ofm_staff_responsible_adult_pt
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_staff_responsible_adult_pt");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_staff_responsible_adult_pt", value);
            }
        }

        /// <summary>
        /// I certify that all of the information provided is true and complete to the best of my knowledge.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_summary_declaration")]
        public System.Nullable<bool> ofm_summary_declaration
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_summary_declaration");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_summary_declaration", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_summary_declarationname")]
        public string ofm_summary_declarationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_summary_declaration"))
                {
                    return this.FormattedValues["ofm_summary_declaration"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Last updated by ministry
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_summary_ministry_last_updated")]
        public System.Nullable<System.DateTime> ofm_summary_ministry_last_updated
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_summary_ministry_last_updated");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_summary_ministry_last_updated", value);
            }
        }

        /// <summary>
        /// Ownership
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_summary_ownership")]
        public virtual ecc_Ownership? ofm_summary_ownership
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_Ownership?)(EntityOptionSetEnum.GetEnum(this, "ofm_summary_ownership")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_summary_ownership", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_summary_ownershipname")]
        public string ofm_summary_ownershipname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_summary_ownership"))
                {
                    return this.FormattedValues["ofm_summary_ownership"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Last updated by provider
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_summary_provider_last_updated")]
        public System.Nullable<System.DateTime> ofm_summary_provider_last_updated
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_summary_provider_last_updated");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_summary_provider_last_updated", value);
            }
        }

        /// <summary>
        /// Signing Authority
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_summary_signing_authority")]
        public string ofm_summary_signing_authority
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_summary_signing_authority");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_summary_signing_authority", value);
            }
        }

        /// <summary>
        /// The associated Submitted By on the application
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_summary_submittedby")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_summary_submittedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_summary_submittedby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_summary_submittedby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_summary_submittedbyname")]
        public string ofm_summary_submittedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_summary_submittedby"))
                {
                    return this.FormattedValues["ofm_summary_submittedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_summary_submittedbyyominame")]
        public string ofm_summary_submittedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_summary_submittedby"))
                {
                    return this.FormattedValues["ofm_summary_submittedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The date the application was subbmitted
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_summary_submittedon")]
        public System.Nullable<System.DateTime> ofm_summary_submittedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_summary_submittedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_summary_submittedon", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supplementary_banner")]
        public string ofm_supplementary_banner
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_supplementary_banner");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_supplementary_banner", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supplementary_indicator")]
        public System.Nullable<bool> ofm_supplementary_indicator
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_supplementary_indicator");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_supplementary_indicator", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supplementary_indicatorname")]
        public string ofm_supplementary_indicatorname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_supplementary_indicator"))
                {
                    return this.FormattedValues["ofm_supplementary_indicator"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_system_bc_registry_good_standing")]
        public System.Nullable<bool> ofm_system_bc_registry_good_standing
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_system_bc_registry_good_standing");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_system_bc_registry_good_standingname")]
        public string ofm_system_bc_registry_good_standingname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_system_bc_registry_good_standing"))
                {
                    return this.FormattedValues["ofm_system_bc_registry_good_standing"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_system_bypass_bc_registry_good_standing")]
        public System.Nullable<bool> ofm_system_bypass_bc_registry_good_standing
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_system_bypass_bc_registry_good_standing");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_system_bypass_bc_registry_good_standing", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_system_bypass_bc_registry_good_standingname")]
        public string ofm_system_bypass_bc_registry_good_standingname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_system_bypass_bc_registry_good_standing"))
                {
                    return this.FormattedValues["ofm_system_bypass_bc_registry_good_standing"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_system_bypass_ccof_tdad_participation")]
        public System.Nullable<bool> ofm_system_bypass_ccof_tdad_participation
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_system_bypass_ccof_tdad_participation");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_system_bypass_ccof_tdad_participation", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_system_bypass_ccof_tdad_participationname")]
        public string ofm_system_bypass_ccof_tdad_participationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_system_bypass_ccof_tdad_participation"))
                {
                    return this.FormattedValues["ofm_system_bypass_ccof_tdad_participation"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_system_bypass_financial_good_standing")]
        public System.Nullable<bool> ofm_system_bypass_financial_good_standing
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_system_bypass_financial_good_standing");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_system_bypass_financial_good_standing", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_system_bypass_financial_good_standingname")]
        public string ofm_system_bypass_financial_good_standingname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_system_bypass_financial_good_standing"))
                {
                    return this.FormattedValues["ofm_system_bypass_financial_good_standing"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_system_bypass_reason_bc_good_standing")]
        public string ofm_system_bypass_reason_bc_good_standing
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_system_bypass_reason_bc_good_standing");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_system_bypass_reason_bc_good_standing", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_system_bypass_reason_ccof_tdad")]
        public string ofm_system_bypass_reason_ccof_tdad
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_system_bypass_reason_ccof_tdad");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_system_bypass_reason_ccof_tdad", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_system_bypass_reason_financial_good")]
        public string ofm_system_bypass_reason_financial_good
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_system_bypass_reason_financial_good");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_system_bypass_reason_financial_good", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_system_ccof_tdad_participation")]
        public System.Nullable<bool> ofm_system_ccof_tdad_participation
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_system_ccof_tdad_participation");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_system_ccof_tdad_participationname")]
        public string ofm_system_ccof_tdad_participationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_system_ccof_tdad_participation"))
                {
                    return this.FormattedValues["ofm_system_ccof_tdad_participation"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_system_financial_good_standing")]
        public System.Nullable<bool> ofm_system_financial_good_standing
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_system_financial_good_standing");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_system_financial_good_standing", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_system_financial_good_standingname")]
        public string ofm_system_financial_good_standingname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_system_financial_good_standing"))
                {
                    return this.FormattedValues["ofm_system_financial_good_standing"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_triage_score")]
        public System.Nullable<decimal> ofm_triage_score
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_triage_score");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_triage_score", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_union_cssea")]
        public System.Nullable<bool> ofm_union_cssea
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_union_cssea");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_union_cssea", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_union_csseaname")]
        public string ofm_union_csseaname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_union_cssea"))
                {
                    return this.FormattedValues["ofm_union_cssea"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_union_description")]
        public string ofm_union_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_union_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_union_description", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_union_list")]
        public virtual System.Collections.Generic.IEnumerable<ecc_Unions> ofm_union_list
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return EntityOptionSetEnum.GetMultiEnum<ecc_Unions>(this, "ofm_union_list");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_union_list", EntityOptionSetEnum.GetMultiEnum(this, "ofm_union_list", value));
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_union_listname")]
        public string ofm_union_listname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_union_list"))
                {
                    return this.FormattedValues["ofm_union_list"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_unionized")]
        public virtual ecc_ynempty? ofm_unionized
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_unionized")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_unionized", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_unionizedname")]
        public string ofm_unionizedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_unionized"))
                {
                    return this.FormattedValues["ofm_unionized"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_unionizedsite_banner")]
        public string ofm_unionizedsite_banner
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_unionizedsite_banner");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_unionizedsite_banner", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_application_licence")]
        public virtual ofm_verification_checklist_status? ofm_verification_application_licence
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_verification_checklist_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_verification_application_licence")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_application_licence", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_application_licencename")]
        public string ofm_verification_application_licencename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_verification_application_licence"))
                {
                    return this.FormattedValues["ofm_verification_application_licence"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_application_signed")]
        public virtual ofm_verification_checklist_status? ofm_verification_application_signed
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_verification_checklist_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_verification_application_signed")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_application_signed", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_application_signedname")]
        public string ofm_verification_application_signedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_verification_application_signed"))
                {
                    return this.FormattedValues["ofm_verification_application_signed"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// ECE Certificate Status
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_ece_certificate_status")]
        public virtual ecc_verification_result? ofm_verification_ece_certificate_status
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_verification_result?)(EntityOptionSetEnum.GetEnum(this, "ofm_verification_ece_certificate_status")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_ece_certificate_status", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_ece_certificate_statusname")]
        public string ofm_verification_ece_certificate_statusname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_verification_ece_certificate_status"))
                {
                    return this.FormattedValues["ofm_verification_ece_certificate_status"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// ECEA Certificate Status
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_ecea_certificate_status")]
        public virtual ecc_verification_result? ofm_verification_ecea_certificate_status
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_verification_result?)(EntityOptionSetEnum.GetEnum(this, "ofm_verification_ecea_certificate_status")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_ecea_certificate_status", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_ecea_certificate_statusname")]
        public string ofm_verification_ecea_certificate_statusname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_verification_ecea_certificate_status"))
                {
                    return this.FormattedValues["ofm_verification_ecea_certificate_status"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_last_update_application_lic")]
        public System.Nullable<System.DateTime> ofm_verification_last_update_application_lic
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_verification_last_update_application_lic");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_last_update_application_lic", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_last_update_application_sign")]
        public System.Nullable<System.DateTime> ofm_verification_last_update_application_sign
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_verification_last_update_application_sign");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_last_update_application_sign", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_last_update_by_app_lic")]
        public string ofm_verification_last_update_by_app_lic
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_verification_last_update_by_app_lic");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_last_update_by_app_lic", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_last_update_by_app_sign")]
        public string ofm_verification_last_update_by_app_sign
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_verification_last_update_by_app_sign");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_last_update_by_app_sign", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_last_update_by_legal_name")]
        public string ofm_verification_last_update_by_legal_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_verification_last_update_by_legal_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_last_update_by_legal_name", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_last_update_by_licence_valid")]
        public string ofm_verification_last_update_by_licence_valid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_verification_last_update_by_licence_valid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_last_update_by_licence_valid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_last_update_by_mailing_add")]
        public string ofm_verification_last_update_by_mailing_add
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_verification_last_update_by_mailing_add");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_last_update_by_mailing_add", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_last_update_by_mandatory_doc")]
        public string ofm_verification_last_update_by_mandatory_doc
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_verification_last_update_by_mandatory_doc");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_last_update_by_mandatory_doc", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_last_update_by_new_spaces")]
        public string ofm_verification_last_update_by_new_spaces
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_verification_last_update_by_new_spaces");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_last_update_by_new_spaces", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_last_update_by_rent_lease")]
        public string ofm_verification_last_update_by_rent_lease
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_verification_last_update_by_rent_lease");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_last_update_by_rent_lease", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_last_update_by_terminate_fun")]
        public string ofm_verification_last_update_by_terminate_fun
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_verification_last_update_by_terminate_fun");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_last_update_by_terminate_fun", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_last_update_by_valid_ece_cer")]
        public string ofm_verification_last_update_by_valid_ece_cer
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_verification_last_update_by_valid_ece_cer");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_last_update_by_valid_ece_cer", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_last_update_legal_name")]
        public System.Nullable<System.DateTime> ofm_verification_last_update_legal_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_verification_last_update_legal_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_last_update_legal_name", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_last_update_licence_valid")]
        public System.Nullable<System.DateTime> ofm_verification_last_update_licence_valid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_verification_last_update_licence_valid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_last_update_licence_valid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_last_update_mailing_address")]
        public System.Nullable<System.DateTime> ofm_verification_last_update_mailing_address
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_verification_last_update_mailing_address");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_last_update_mailing_address", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_last_update_mandatory_docs")]
        public System.Nullable<System.DateTime> ofm_verification_last_update_mandatory_docs
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_verification_last_update_mandatory_docs");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_last_update_mandatory_docs", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_last_update_new_spaces")]
        public System.Nullable<System.DateTime> ofm_verification_last_update_new_spaces
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_verification_last_update_new_spaces");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_last_update_new_spaces", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_last_update_rent_lease")]
        public System.Nullable<System.DateTime> ofm_verification_last_update_rent_lease
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_verification_last_update_rent_lease");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_last_update_rent_lease", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_last_update_terminate_fundin")]
        public System.Nullable<System.DateTime> ofm_verification_last_update_terminate_fundin
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_verification_last_update_terminate_fundin");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_last_update_terminate_fundin", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_last_update_valid_ece_cert")]
        public System.Nullable<System.DateTime> ofm_verification_last_update_valid_ece_cert
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_verification_last_update_valid_ece_cert");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_last_update_valid_ece_cert", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_legal_name")]
        public virtual ofm_verification_checklist_status? ofm_verification_legal_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_verification_checklist_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_verification_legal_name")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_legal_name", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_legal_namename")]
        public string ofm_verification_legal_namename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_verification_legal_name"))
                {
                    return this.FormattedValues["ofm_verification_legal_name"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_licence_valid")]
        public virtual ofm_verification_checklist_status? ofm_verification_licence_valid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_verification_checklist_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_verification_licence_valid")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_licence_valid", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_licence_validname")]
        public string ofm_verification_licence_validname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_verification_licence_valid"))
                {
                    return this.FormattedValues["ofm_verification_licence_valid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_mailing_address")]
        public virtual ofm_verification_checklist_status? ofm_verification_mailing_address
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_verification_checklist_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_verification_mailing_address")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_mailing_address", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_mailing_addressname")]
        public string ofm_verification_mailing_addressname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_verification_mailing_address"))
                {
                    return this.FormattedValues["ofm_verification_mailing_address"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_mandatory_documents")]
        public virtual ofm_verification_checklist_status? ofm_verification_mandatory_documents
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_verification_checklist_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_verification_mandatory_documents")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_mandatory_documents", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_mandatory_documentsname")]
        public string ofm_verification_mandatory_documentsname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_verification_mandatory_documents"))
                {
                    return this.FormattedValues["ofm_verification_mandatory_documents"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_new_spaces_funding_site")]
        public virtual ofm_verification_checklist_status? ofm_verification_new_spaces_funding_site
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_verification_checklist_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_verification_new_spaces_funding_site")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_new_spaces_funding_site", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_new_spaces_funding_sitename")]
        public string ofm_verification_new_spaces_funding_sitename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_verification_new_spaces_funding_site"))
                {
                    return this.FormattedValues["ofm_verification_new_spaces_funding_site"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_rent_lease")]
        public virtual ofm_verification_checklist_status? ofm_verification_rent_lease
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_verification_checklist_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_verification_rent_lease")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_rent_lease", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_rent_leasename")]
        public string ofm_verification_rent_leasename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_verification_rent_lease"))
                {
                    return this.FormattedValues["ofm_verification_rent_lease"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_terminate_active_funding")]
        public virtual ofm_verification_checklist_status? ofm_verification_terminate_active_funding
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_verification_checklist_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_verification_terminate_active_funding")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_terminate_active_funding", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_terminate_active_fundingname")]
        public string ofm_verification_terminate_active_fundingname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_verification_terminate_active_funding"))
                {
                    return this.FormattedValues["ofm_verification_terminate_active_funding"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_valid_ece_certificates")]
        public virtual ofm_verification_checklist_status? ofm_verification_valid_ece_certificates
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_verification_checklist_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_verification_valid_ece_certificates")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_valid_ece_certificates", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_valid_ece_certificatesname")]
        public string ofm_verification_valid_ece_certificatesname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_verification_valid_ece_certificates"))
                {
                    return this.FormattedValues["ofm_verification_valid_ece_certificates"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Application
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_application_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_application_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Application
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_application_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_application_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the currency associated with the entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("transactioncurrencyid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
        public string transactioncurrencyidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("transactioncurrencyid"))
                {
                    return this.FormattedValues["transactioncurrencyid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N ofm_application_allowance
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_application_allowance")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_allowance> ofm_application_allowance
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_allowance>("ofm_application_allowance", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_allowance>("ofm_application_allowance", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_application_expense
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_application_expense")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_expense> ofm_application_expense
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_expense>("ofm_application_expense", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_expense>("ofm_application_expense", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_application_funding
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_application_funding")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_funding> ofm_application_funding
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_funding>("ofm_application_funding", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_funding>("ofm_application_funding", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_application_paymentrequest
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_application_paymentrequest")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_payment_request> ofm_application_paymentrequest
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_payment_request>("ofm_application_paymentrequest", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_payment_request>("ofm_application_paymentrequest", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_application_provideremployee
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_application_provideremployee")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_provider_employee> ofm_application_provideremployee
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_provider_employee>("ofm_application_provideremployee", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_provider_employee>("ofm_application_provideremployee", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_application_reminder
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_application_reminder")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_reminder> ofm_application_reminder
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_reminder>("ofm_application_reminder", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_reminder>("ofm_application_reminder", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_application_RenewalApplicationId
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_application_RenewalApplicationId", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_application> Referencedofm_application_RenewalApplicationId
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_application>("ofm_application_RenewalApplicationId", Microsoft.Xrm.Sdk.EntityRole.Referenced);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_application>("ofm_application_RenewalApplicationId", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
            }
        }

        /// <summary>
        /// 1:N ofm_document_application
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_document_application")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_document> ofm_document_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_document>("ofm_document_application", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_document>("ofm_document_application", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_integrationlog_application
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_integrationlog_application")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_integration_log> ofm_integrationlog_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_integration_log>("ofm_integrationlog_application", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_integration_log>("ofm_integrationlog_application", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_payment_application
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_payment_application")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_payment> ofm_payment_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_payment>("ofm_payment_application", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_payment>("ofm_payment_application", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_pcmreview_application
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_pcmreview_application")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_pcm_review> ofm_pcmreview_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_pcm_review>("ofm_pcmreview_application", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_pcm_review>("ofm_pcmreview_application", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_request_application
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_request_application")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_assistance_request> ofm_request_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_assistance_request>("ofm_request_application", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_assistance_request>("ofm_request_application", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_application_RenewalApplicationId
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_renewalapplicationid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_application_RenewalApplicationId", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
        public ECC.Core.DataContext.ofm_application Referencingofm_application_RenewalApplicationId
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_application_RenewalApplicationId", Microsoft.Xrm.Sdk.EntityRole.Referencing);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_application_RenewalApplicationId", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
            }
        }

        /// <summary>
        /// N:1 ofm_contact_applications
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_contact")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_contact_applications")]
        public ECC.Core.DataContext.Contact ofm_contact_applications
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_contact_applications", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_contact_applications", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_createdby_application
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_createdby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_createdby_application")]
        public ECC.Core.DataContext.Contact ofm_createdby_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_createdby_application", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_createdby_application", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_expenseauthority_application
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_expense_authority")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_expenseauthority_application")]
        public ECC.Core.DataContext.Contact ofm_expenseauthority_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_expenseauthority_application", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_expenseauthority_application", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_facility_application
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_facility_application")]
        public ECC.Core.DataContext.Account ofm_facility_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Account>("ofm_facility_application", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Account>("ofm_facility_application", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_organization_application
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_organization")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_organization_application")]
        public ECC.Core.DataContext.Account ofm_organization_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Account>("ofm_organization_application", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Account>("ofm_organization_application", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_secondary_contact_application
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_secondary_contact")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_secondary_contact_application")]
        public ECC.Core.DataContext.Contact ofm_secondary_contact_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_secondary_contact_application", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_secondary_contact_application", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_submittedby_application
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_summary_submittedby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_submittedby_application")]
        public ECC.Core.DataContext.Contact ofm_submittedby_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_submittedby_application", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_submittedby_application", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_application
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_application")]
        public ECC.Core.DataContext.Team team_ofm_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_application", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_application(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_applicationid"] = base.Id;
                        break;
                    case "ofm_applicationid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_assistance_request")]
    public partial class ofm_assistance_request : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_assistance_request entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_assistance_request_category = "ofm_assistance_request_category";
            public const string ofm_assistance_request_contact = "ofm_assistance_request_contact";
            public const string ofm_assistance_request_Emails = "ofm_assistance_request_Emails";
            public const string ofm_assistance_requestid = "ofm_assistance_requestid";
            public const string Id = "ofm_assistance_requestid";
            public const string ofm_assistancerequest_expense = "ofm_assistancerequest_expense";
            public const string ofm_closing_reason = "ofm_closing_reason";
            public const string ofm_contact = "ofm_contact";
            public const string ofm_contact_method = "ofm_contact_method";
            public const string ofm_contact_methodname = "ofm_contact_methodname";
            public const string ofm_contactname = "ofm_contactname";
            public const string ofm_contactyominame = "ofm_contactyominame";
            public const string ofm_conversation_request = "ofm_conversation_request";
            public const string ofm_document_assistance_request = "ofm_document_assistance_request";
            public const string ofm_due_date = "ofm_due_date";
            public const string ofm_fac_address_correctness = "ofm_fac_address_correctness";
            public const string ofm_fac_address_correctnessname = "ofm_fac_address_correctnessname";
            public const string ofm_fac_alert_pcm = "ofm_fac_alert_pcm";
            public const string ofm_fac_alert_pcmname = "ofm_fac_alert_pcmname";
            public const string ofm_fac_check_new_licence = "ofm_fac_check_new_licence";
            public const string ofm_fac_check_new_licencename = "ofm_fac_check_new_licencename";
            public const string ofm_fac_create_mod_agreement = "ofm_fac_create_mod_agreement";
            public const string ofm_fac_create_mod_agreementname = "ofm_fac_create_mod_agreementname";
            public const string ofm_fac_send_changes_to_cfs = "ofm_fac_send_changes_to_cfs";
            public const string ofm_fac_send_changes_to_cfsname = "ofm_fac_send_changes_to_cfsname";
            public const string ofm_facility_request_request = "ofm_facility_request_request";
            public const string ofm_internal_comment = "ofm_internal_comment";
            public const string ofm_is_read = "ofm_is_read";
            public const string ofm_is_readname = "ofm_is_readname";
            public const string ofm_last_action_time = "ofm_last_action_time";
            public const string ofm_last_opened_time = "ofm_last_opened_time";
            public const string ofm_licence_alert_pcm = "ofm_licence_alert_pcm";
            public const string ofm_licence_alert_pcmname = "ofm_licence_alert_pcmname";
            public const string ofm_licence_check_facility_costs = "ofm_licence_check_facility_costs";
            public const string ofm_licence_check_facility_costsname = "ofm_licence_check_facility_costsname";
            public const string ofm_licence_check_health_authority = "ofm_licence_check_health_authority";
            public const string ofm_licence_check_health_authorityname = "ofm_licence_check_health_authorityname";
            public const string ofm_licence_mod_agreement = "ofm_licence_mod_agreement";
            public const string ofm_licence_mod_agreementname = "ofm_licence_mod_agreementname";
            public const string ofm_licence_obtain_new = "ofm_licence_obtain_new";
            public const string ofm_licence_obtain_newname = "ofm_licence_obtain_newname";
            public const string ofm_licence_recalculate_funding = "ofm_licence_recalculate_funding";
            public const string ofm_licence_recalculate_fundingname = "ofm_licence_recalculate_fundingname";
            public const string ofm_licence_send_changes_to_cfs = "ofm_licence_send_changes_to_cfs";
            public const string ofm_licence_send_changes_to_cfsname = "ofm_licence_send_changes_to_cfsname";
            public const string ofm_licence_update_service_delivery = "ofm_licence_update_service_delivery";
            public const string ofm_licence_update_service_deliveryname = "ofm_licence_update_service_deliveryname";
            public const string ofm_name = "ofm_name";
            public const string ofm_org_address_correctness = "ofm_org_address_correctness";
            public const string ofm_org_address_correctnessname = "ofm_org_address_correctnessname";
            public const string ofm_org_alert_pcm = "ofm_org_alert_pcm";
            public const string ofm_org_alert_pcmname = "ofm_org_alert_pcmname";
            public const string ofm_org_check_facility_addresses = "ofm_org_check_facility_addresses";
            public const string ofm_org_check_facility_addressesname = "ofm_org_check_facility_addressesname";
            public const string ofm_org_check_facility_name = "ofm_org_check_facility_name";
            public const string ofm_org_check_facility_namename = "ofm_org_check_facility_namename";
            public const string ofm_org_confirm_good_standing = "ofm_org_confirm_good_standing";
            public const string ofm_org_confirm_good_standingname = "ofm_org_confirm_good_standingname";
            public const string ofm_org_create_mod_agreement = "ofm_org_create_mod_agreement";
            public const string ofm_org_create_mod_agreementname = "ofm_org_create_mod_agreementname";
            public const string ofm_org_name_change_certificate = "ofm_org_name_change_certificate";
            public const string ofm_org_name_change_certificatename = "ofm_org_name_change_certificatename";
            public const string ofm_org_send_changes_to_cfs = "ofm_org_send_changes_to_cfs";
            public const string ofm_org_send_changes_to_cfsname = "ofm_org_send_changes_to_cfsname";
            public const string ofm_regardingid = "ofm_regardingid";
            public const string ofm_regardingidname = "ofm_regardingidname";
            public const string ofm_regardingidyominame = "ofm_regardingidyominame";
            public const string ofm_request_application = "ofm_request_application";
            public const string ofm_request_category = "ofm_request_category";
            public const string ofm_request_categoryname = "ofm_request_categoryname";
            public const string ofm_request_contact = "ofm_request_contact";
            public const string ofm_request_description = "ofm_request_description";
            public const string ofm_subcategory = "ofm_subcategory";
            public const string ofm_subject = "ofm_subject";
            public const string ofm_submission_time = "ofm_submission_time";
            public const string ofm_telephone = "ofm_telephone";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_assistance_request = "team_ofm_assistance_request";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_assistance_request(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_assistance_request(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_assistance_request(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_assistance_request() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_assistance_requestid";

        public const string PrimaryNameAttribute = "ofm_name";

        public const string EntitySchemaName = "ofm_assistance_request";

        public const string EntityLogicalName = "ofm_assistance_request";

        public const string EntityLogicalCollectionName = "ofm_assistance_requests";

        public const string EntitySetName = "ofm_assistance_requests";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_assistance_requestid")]
        public System.Nullable<System.Guid> ofm_assistance_requestid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_assistance_requestid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_assistance_requestid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_assistance_requestid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_assistance_requestid = value;
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_closing_reason")]
        public string ofm_closing_reason
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_closing_reason");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_closing_reason", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_contact")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_contact
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_contact");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_contact", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_contact_method")]
        public virtual ofm_assistance_request_ofm_contact_method? ofm_contact_method
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_assistance_request_ofm_contact_method?)(EntityOptionSetEnum.GetEnum(this, "ofm_contact_method")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_contact_method", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_contact_methodname")]
        public string ofm_contact_methodname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_contact_method"))
                {
                    return this.FormattedValues["ofm_contact_method"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_contactname")]
        public string ofm_contactname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_contact"))
                {
                    return this.FormattedValues["ofm_contact"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_contactyominame")]
        public string ofm_contactyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_contact"))
                {
                    return this.FormattedValues["ofm_contact"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_due_date")]
        public System.Nullable<System.DateTime> ofm_due_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_due_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_due_date", value);
            }
        }

        /// <summary>
        /// Confirm correctness of the address (Facility)
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fac_address_correctness")]
        public virtual ecc_request_subcategory_response? ofm_fac_address_correctness
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_request_subcategory_response?)(EntityOptionSetEnum.GetEnum(this, "ofm_fac_address_correctness")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_fac_address_correctness", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fac_address_correctnessname")]
        public string ofm_fac_address_correctnessname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_fac_address_correctness"))
                {
                    return this.FormattedValues["ofm_fac_address_correctness"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Alert PCM that mod is completed (Facility)
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fac_alert_pcm")]
        public virtual ecc_request_subcategory_response? ofm_fac_alert_pcm
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_request_subcategory_response?)(EntityOptionSetEnum.GetEnum(this, "ofm_fac_alert_pcm")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_fac_alert_pcm", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fac_alert_pcmname")]
        public string ofm_fac_alert_pcmname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_fac_alert_pcm"))
                {
                    return this.FormattedValues["ofm_fac_alert_pcm"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Confirm if new licence is required
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fac_check_new_licence")]
        public virtual ecc_request_subcategory_response? ofm_fac_check_new_licence
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_request_subcategory_response?)(EntityOptionSetEnum.GetEnum(this, "ofm_fac_check_new_licence")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_fac_check_new_licence", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fac_check_new_licencename")]
        public string ofm_fac_check_new_licencename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_fac_check_new_licence"))
                {
                    return this.FormattedValues["ofm_fac_check_new_licence"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Modification agreement(s)
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fac_create_mod_agreement")]
        public virtual ecc_request_subcategory_response? ofm_fac_create_mod_agreement
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_request_subcategory_response?)(EntityOptionSetEnum.GetEnum(this, "ofm_fac_create_mod_agreement")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_fac_create_mod_agreement", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fac_create_mod_agreementname")]
        public string ofm_fac_create_mod_agreementname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_fac_create_mod_agreement"))
                {
                    return this.FormattedValues["ofm_fac_create_mod_agreement"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Send changes to CFS (Facility)
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fac_send_changes_to_cfs")]
        public virtual ecc_request_subcategory_response? ofm_fac_send_changes_to_cfs
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_request_subcategory_response?)(EntityOptionSetEnum.GetEnum(this, "ofm_fac_send_changes_to_cfs")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_fac_send_changes_to_cfs", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fac_send_changes_to_cfsname")]
        public string ofm_fac_send_changes_to_cfsname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_fac_send_changes_to_cfs"))
                {
                    return this.FormattedValues["ofm_fac_send_changes_to_cfs"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_internal_comment")]
        public string ofm_internal_comment
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_internal_comment");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_internal_comment", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_is_read")]
        public System.Nullable<bool> ofm_is_read
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_is_read");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_is_read", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_is_readname")]
        public string ofm_is_readname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_is_read"))
                {
                    return this.FormattedValues["ofm_is_read"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_last_action_time")]
        public System.Nullable<System.DateTime> ofm_last_action_time
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_last_action_time");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_last_action_time", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_last_opened_time")]
        public System.Nullable<System.DateTime> ofm_last_opened_time
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_last_opened_time");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_last_opened_time", value);
            }
        }

        /// <summary>
        /// Alert PCM that mod is completed (Licence)
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_alert_pcm")]
        public virtual ecc_request_subcategory_response? ofm_licence_alert_pcm
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_request_subcategory_response?)(EntityOptionSetEnum.GetEnum(this, "ofm_licence_alert_pcm")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_licence_alert_pcm", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_alert_pcmname")]
        public string ofm_licence_alert_pcmname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_licence_alert_pcm"))
                {
                    return this.FormattedValues["ofm_licence_alert_pcm"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Determine any changes to operating or facility costs
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_check_facility_costs")]
        public virtual ecc_request_subcategory_response? ofm_licence_check_facility_costs
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_request_subcategory_response?)(EntityOptionSetEnum.GetEnum(this, "ofm_licence_check_facility_costs")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_licence_check_facility_costs", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_check_facility_costsname")]
        public string ofm_licence_check_facility_costsname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_licence_check_facility_costs"))
                {
                    return this.FormattedValues["ofm_licence_check_facility_costs"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Check if license is valid (Health Authority)
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_check_health_authority")]
        public virtual ecc_request_subcategory_response? ofm_licence_check_health_authority
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_request_subcategory_response?)(EntityOptionSetEnum.GetEnum(this, "ofm_licence_check_health_authority")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_licence_check_health_authority", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_check_health_authorityname")]
        public string ofm_licence_check_health_authorityname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_licence_check_health_authority"))
                {
                    return this.FormattedValues["ofm_licence_check_health_authority"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Modification agreement (Licence)
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_mod_agreement")]
        public virtual ecc_request_subcategory_response? ofm_licence_mod_agreement
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_request_subcategory_response?)(EntityOptionSetEnum.GetEnum(this, "ofm_licence_mod_agreement")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_licence_mod_agreement", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_mod_agreementname")]
        public string ofm_licence_mod_agreementname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_licence_mod_agreement"))
                {
                    return this.FormattedValues["ofm_licence_mod_agreement"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Obtain new licence
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_obtain_new")]
        public virtual ecc_request_subcategory_response? ofm_licence_obtain_new
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_request_subcategory_response?)(EntityOptionSetEnum.GetEnum(this, "ofm_licence_obtain_new")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_licence_obtain_new", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_obtain_newname")]
        public string ofm_licence_obtain_newname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_licence_obtain_new"))
                {
                    return this.FormattedValues["ofm_licence_obtain_new"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Run new details through calculator
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_recalculate_funding")]
        public virtual ecc_request_subcategory_response? ofm_licence_recalculate_funding
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_request_subcategory_response?)(EntityOptionSetEnum.GetEnum(this, "ofm_licence_recalculate_funding")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_licence_recalculate_funding", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_recalculate_fundingname")]
        public string ofm_licence_recalculate_fundingname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_licence_recalculate_funding"))
                {
                    return this.FormattedValues["ofm_licence_recalculate_funding"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Send changes to CFS (Licence)
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_send_changes_to_cfs")]
        public virtual ecc_request_subcategory_response? ofm_licence_send_changes_to_cfs
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_request_subcategory_response?)(EntityOptionSetEnum.GetEnum(this, "ofm_licence_send_changes_to_cfs")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_licence_send_changes_to_cfs", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_send_changes_to_cfsname")]
        public string ofm_licence_send_changes_to_cfsname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_licence_send_changes_to_cfs"))
                {
                    return this.FormattedValues["ofm_licence_send_changes_to_cfs"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Update Service Delivery Table
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_update_service_delivery")]
        public virtual ecc_request_subcategory_response? ofm_licence_update_service_delivery
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_request_subcategory_response?)(EntityOptionSetEnum.GetEnum(this, "ofm_licence_update_service_delivery")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_licence_update_service_delivery", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_update_service_deliveryname")]
        public string ofm_licence_update_service_deliveryname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_licence_update_service_delivery"))
                {
                    return this.FormattedValues["ofm_licence_update_service_delivery"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
        public string ofm_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_name", value);
            }
        }

        /// <summary>
        /// Confirm correctness of the address
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_org_address_correctness")]
        public virtual ecc_request_subcategory_response? ofm_org_address_correctness
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_request_subcategory_response?)(EntityOptionSetEnum.GetEnum(this, "ofm_org_address_correctness")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_org_address_correctness", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_org_address_correctnessname")]
        public string ofm_org_address_correctnessname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_org_address_correctness"))
                {
                    return this.FormattedValues["ofm_org_address_correctness"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// System to alert PCM that mod is completed
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_org_alert_pcm")]
        public virtual ecc_request_subcategory_response? ofm_org_alert_pcm
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_request_subcategory_response?)(EntityOptionSetEnum.GetEnum(this, "ofm_org_alert_pcm")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_org_alert_pcm", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_org_alert_pcmname")]
        public string ofm_org_alert_pcmname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_org_alert_pcm"))
                {
                    return this.FormattedValues["ofm_org_alert_pcm"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Check if facility(ies) addresses also need to be updated
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_org_check_facility_addresses")]
        public virtual ecc_request_subcategory_response? ofm_org_check_facility_addresses
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_request_subcategory_response?)(EntityOptionSetEnum.GetEnum(this, "ofm_org_check_facility_addresses")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_org_check_facility_addresses", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_org_check_facility_addressesname")]
        public string ofm_org_check_facility_addressesname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_org_check_facility_addresses"))
                {
                    return this.FormattedValues["ofm_org_check_facility_addresses"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Check if facility(ies) addresses also need to be updated
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_org_check_facility_name")]
        public virtual ecc_request_subcategory_response? ofm_org_check_facility_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_request_subcategory_response?)(EntityOptionSetEnum.GetEnum(this, "ofm_org_check_facility_name")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_org_check_facility_name", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_org_check_facility_namename")]
        public string ofm_org_check_facility_namename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_org_check_facility_name"))
                {
                    return this.FormattedValues["ofm_org_check_facility_name"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Confirm in Good Standing
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_org_confirm_good_standing")]
        public virtual ecc_request_subcategory_response? ofm_org_confirm_good_standing
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_request_subcategory_response?)(EntityOptionSetEnum.GetEnum(this, "ofm_org_confirm_good_standing")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_org_confirm_good_standing", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_org_confirm_good_standingname")]
        public string ofm_org_confirm_good_standingname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_org_confirm_good_standing"))
                {
                    return this.FormattedValues["ofm_org_confirm_good_standing"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Create Modification agreement (provider signs then ministry signs)
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_org_create_mod_agreement")]
        public virtual ecc_request_subcategory_response? ofm_org_create_mod_agreement
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_request_subcategory_response?)(EntityOptionSetEnum.GetEnum(this, "ofm_org_create_mod_agreement")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_org_create_mod_agreement", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_org_create_mod_agreementname")]
        public string ofm_org_create_mod_agreementname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_org_create_mod_agreement"))
                {
                    return this.FormattedValues["ofm_org_create_mod_agreement"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Validate - Obtain Name Change Certificate (BC Registry)
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_org_name_change_certificate")]
        public virtual ecc_request_subcategory_response? ofm_org_name_change_certificate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_request_subcategory_response?)(EntityOptionSetEnum.GetEnum(this, "ofm_org_name_change_certificate")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_org_name_change_certificate", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_org_name_change_certificatename")]
        public string ofm_org_name_change_certificatename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_org_name_change_certificate"))
                {
                    return this.FormattedValues["ofm_org_name_change_certificate"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Send changes to CFS
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_org_send_changes_to_cfs")]
        public virtual ecc_request_subcategory_response? ofm_org_send_changes_to_cfs
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_request_subcategory_response?)(EntityOptionSetEnum.GetEnum(this, "ofm_org_send_changes_to_cfs")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_org_send_changes_to_cfs", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_org_send_changes_to_cfsname")]
        public string ofm_org_send_changes_to_cfsname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_org_send_changes_to_cfs"))
                {
                    return this.FormattedValues["ofm_org_send_changes_to_cfs"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Regarding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_regardingid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_regardingid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_regardingid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingidname")]
        public string ofm_regardingidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_regardingid"))
                {
                    return this.FormattedValues["ofm_regardingid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingidyominame")]
        public string ofm_regardingidyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_regardingid"))
                {
                    return this.FormattedValues["ofm_regardingid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_request_category")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_request_category
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_request_category");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_request_category", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_request_categoryname")]
        public string ofm_request_categoryname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_request_category"))
                {
                    return this.FormattedValues["ofm_request_category"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_request_description")]
        public string ofm_request_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_request_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_request_description", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_subcategory")]
        public string ofm_subcategory
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_subcategory");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_subcategory", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_subject")]
        public string ofm_subject
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_subject");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_subject", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_submission_time")]
        public System.Nullable<System.DateTime> ofm_submission_time
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_submission_time");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_submission_time", value);
            }
        }

        /// <summary>
        /// Secondary telephone number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_telephone")]
        public string ofm_telephone
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_telephone");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_telephone", value);
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Assistance Request
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_assistance_request_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_assistance_request_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Assistance Request
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_assistance_request_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_assistance_request_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N ofm_assistance_request_Emails
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_assistance_request_Emails")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Email> ofm_assistance_request_Emails
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.Email>("ofm_assistance_request_Emails", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.Email>("ofm_assistance_request_Emails", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_assistancerequest_expense
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_assistancerequest_expense")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_expense> ofm_assistancerequest_expense
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_expense>("ofm_assistancerequest_expense", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_expense>("ofm_assistancerequest_expense", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_conversation_request
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_conversation_request")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_conversation> ofm_conversation_request
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_conversation>("ofm_conversation_request", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_conversation>("ofm_conversation_request", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_document_assistance_request
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_document_assistance_request")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_document> ofm_document_assistance_request
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_document>("ofm_document_assistance_request", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_document>("ofm_document_assistance_request", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_facility_request_request
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_facility_request_request")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_facility_request> ofm_facility_request_request
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_facility_request>("ofm_facility_request_request", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_facility_request>("ofm_facility_request_request", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_assistance_request_category
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_request_category")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_assistance_request_category")]
        public ECC.Core.DataContext.ofm_request_category ofm_assistance_request_category
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_request_category>("ofm_assistance_request_category", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_request_category>("ofm_assistance_request_category", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_assistance_request_contact
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_contact")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_assistance_request_contact")]
        public ECC.Core.DataContext.Contact ofm_assistance_request_contact
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_assistance_request_contact", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_assistance_request_contact", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_request_application
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_request_application")]
        public ECC.Core.DataContext.ofm_application ofm_request_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_request_application", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_request_application", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_request_contact
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_request_contact")]
        public ECC.Core.DataContext.Contact ofm_request_contact
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_request_contact", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_request_contact", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_assistance_request
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_assistance_request")]
        public ECC.Core.DataContext.Team team_ofm_assistance_request
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_assistance_request", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_assistance_request(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_assistance_requestid"] = base.Id;
                        break;
                    case "ofm_assistance_requestid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// The purpose of this table is to store facility permission records for a contact
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_bceid_facility")]
    public partial class ofm_bceid_facility : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_bceid_facility entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_bceid = "ofm_bceid";
            public const string ofm_bceid_facilityid = "ofm_bceid_facilityid";
            public const string Id = "ofm_bceid_facilityid";
            public const string ofm_bceidname = "ofm_bceidname";
            public const string ofm_bceidyominame = "ofm_bceidyominame";
            public const string ofm_business_bceid_facility = "ofm_business_bceid_facility";
            public const string ofm_facility = "ofm_facility";
            public const string ofm_facility_business_bceid = "ofm_facility_business_bceid";
            public const string ofm_facilityname = "ofm_facilityname";
            public const string ofm_facilityyominame = "ofm_facilityyominame";
            public const string ofm_is_additional_contact = "ofm_is_additional_contact";
            public const string ofm_is_additional_contactname = "ofm_is_additional_contactname";
            public const string ofm_is_expense_authority = "ofm_is_expense_authority";
            public const string ofm_is_expense_authorityname = "ofm_is_expense_authorityname";
            public const string ofm_name = "ofm_name";
            public const string ofm_portal_access = "ofm_portal_access";
            public const string ofm_portal_accessname = "ofm_portal_accessname";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_bceid_facility = "team_ofm_bceid_facility";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_bceid_facility(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_bceid_facility(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_bceid_facility(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ofm_bceid,ofm_facility";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_bceid_facility() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_bceid_facilityid";

        public const string PrimaryNameAttribute = "ofm_name";

        public const string EntitySchemaName = "ofm_bceid_facility";

        public const string EntityLogicalName = "ofm_bceid_facility";

        public const string EntityLogicalCollectionName = "ofm_bceid_facilities";

        public const string EntitySetName = "ofm_bceid_facilities";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_bceid")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_bceid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_bceid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_bceid", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_bceid_facilityid")]
        public System.Nullable<System.Guid> ofm_bceid_facilityid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_bceid_facilityid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_bceid_facilityid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_bceid_facilityid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_bceid_facilityid = value;
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_bceidname")]
        public string ofm_bceidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_bceid"))
                {
                    return this.FormattedValues["ofm_bceid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_bceidyominame")]
        public string ofm_bceidyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_bceid"))
                {
                    return this.FormattedValues["ofm_bceid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_facility
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_facility");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_facility", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilityname")]
        public string ofm_facilityname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_facility"))
                {
                    return this.FormattedValues["ofm_facility"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilityyominame")]
        public string ofm_facilityyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_facility"))
                {
                    return this.FormattedValues["ofm_facility"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_is_additional_contact")]
        public System.Nullable<bool> ofm_is_additional_contact
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_is_additional_contact");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_is_additional_contact", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_is_additional_contactname")]
        public string ofm_is_additional_contactname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_is_additional_contact"))
                {
                    return this.FormattedValues["ofm_is_additional_contact"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_is_expense_authority")]
        public System.Nullable<bool> ofm_is_expense_authority
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_is_expense_authority");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_is_expense_authority", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_is_expense_authorityname")]
        public string ofm_is_expense_authorityname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_is_expense_authority"))
                {
                    return this.FormattedValues["ofm_is_expense_authority"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
        public string ofm_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_name", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_portal_access")]
        public System.Nullable<bool> ofm_portal_access
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_portal_access");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_portal_access", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_portal_accessname")]
        public string ofm_portal_accessname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_portal_access"))
                {
                    return this.FormattedValues["ofm_portal_access"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the BCeID Facility
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_bceid_facility_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_bceid_facility_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the BCeID Facility
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_bceid_facility_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_bceid_facility_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 ofm_business_bceid_facility
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_business_bceid_facility")]
        public ECC.Core.DataContext.Account ofm_business_bceid_facility
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Account>("ofm_business_bceid_facility", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Account>("ofm_business_bceid_facility", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_facility_business_bceid
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_bceid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_facility_business_bceid")]
        public ECC.Core.DataContext.Contact ofm_facility_business_bceid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_facility_business_bceid", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_facility_business_bceid", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_bceid_facility
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_bceid_facility")]
        public ECC.Core.DataContext.Team team_ofm_bceid_facility
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_bceid_facility", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_bceid_facility(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_bceid_facilityid"] = base.Id;
                        break;
                    case "ofm_bceid_facilityid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// CCLR Ratio
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_cclr_ratio")]
    public partial class ofm_cclr_ratio : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_cclr_ratio entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_caption = "ofm_caption";
            public const string ofm_cclr_ratioid = "ofm_cclr_ratioid";
            public const string Id = "ofm_cclr_ratioid";
            public const string ofm_cclr_spaceallocation = "ofm_cclr_spaceallocation";
            public const string ofm_fte_min_ece = "ofm_fte_min_ece";
            public const string ofm_fte_min_ecea = "ofm_fte_min_ecea";
            public const string ofm_fte_min_ite = "ofm_fte_min_ite";
            public const string ofm_fte_min_ra = "ofm_fte_min_ra";
            public const string ofm_group_size = "ofm_group_size";
            public const string ofm_group_sizename = "ofm_group_sizename";
            public const string ofm_licence_group = "ofm_licence_group";
            public const string ofm_licence_mapping = "ofm_licence_mapping";
            public const string ofm_licence_mappingname = "ofm_licence_mappingname";
            public const string ofm_order_number = "ofm_order_number";
            public const string ofm_rate_schedule = "ofm_rate_schedule";
            public const string ofm_rate_schedulename = "ofm_rate_schedulename";
            public const string ofm_rateschedule_cclr = "ofm_rateschedule_cclr";
            public const string ofm_spaces_max = "ofm_spaces_max";
            public const string ofm_spaces_min = "ofm_spaces_min";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_cclr_ratio = "team_ofm_cclr_ratio";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_cclr_ratio(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_cclr_ratio(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_cclr_ratio(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ofm_order_number";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_cclr_ratio() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_cclr_ratioid";

        public const string PrimaryNameAttribute = "ofm_caption";

        public const string EntitySchemaName = "ofm_cclr_ratio";

        public const string EntityLogicalName = "ofm_cclr_ratio";

        public const string EntityLogicalCollectionName = "ofm_cclr_ratios";

        public const string EntitySetName = "ofm_cclr_ratios";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Caption
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_caption")]
        public string ofm_caption
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_caption");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_caption", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cclr_ratioid")]
        public System.Nullable<System.Guid> ofm_cclr_ratioid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_cclr_ratioid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_cclr_ratioid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cclr_ratioid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_cclr_ratioid = value;
            }
        }

        /// <summary>
        /// ECE
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fte_min_ece")]
        public System.Nullable<int> ofm_fte_min_ece
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_fte_min_ece");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_fte_min_ece", value);
            }
        }

        /// <summary>
        /// ECEA
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fte_min_ecea")]
        public System.Nullable<int> ofm_fte_min_ecea
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_fte_min_ecea");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_fte_min_ecea", value);
            }
        }

        /// <summary>
        /// ITE
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fte_min_ite")]
        public System.Nullable<int> ofm_fte_min_ite
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_fte_min_ite");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_fte_min_ite", value);
            }
        }

        /// <summary>
        /// RA
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fte_min_ra")]
        public System.Nullable<int> ofm_fte_min_ra
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_fte_min_ra");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_fte_min_ra", value);
            }
        }

        /// <summary>
        /// Group Size
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_group_size")]
        public virtual ecc_group_size? ofm_group_size
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_group_size?)(EntityOptionSetEnum.GetEnum(this, "ofm_group_size")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_group_size", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_group_sizename")]
        public string ofm_group_sizename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_group_size"))
                {
                    return this.FormattedValues["ofm_group_size"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Licence Group
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_group")]
        public string ofm_licence_group
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_licence_group");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_licence_group", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_mapping")]
        public virtual System.Collections.Generic.IEnumerable<ecc_licence_type> ofm_licence_mapping
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return EntityOptionSetEnum.GetMultiEnum<ecc_licence_type>(this, "ofm_licence_mapping");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_licence_mapping", EntityOptionSetEnum.GetMultiEnum(this, "ofm_licence_mapping", value));
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_mappingname")]
        public string ofm_licence_mappingname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_licence_mapping"))
                {
                    return this.FormattedValues["ofm_licence_mapping"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_order_number")]
        public System.Nullable<int> ofm_order_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_order_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_order_number", value);
            }
        }

        /// <summary>
        /// The associated rate schedule
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_rate_schedule")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_rate_schedule
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_rate_schedule");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_rate_schedule", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_rate_schedulename")]
        public string ofm_rate_schedulename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_rate_schedule"))
                {
                    return this.FormattedValues["ofm_rate_schedule"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Max Spaces
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_spaces_max")]
        public System.Nullable<int> ofm_spaces_max
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_spaces_max");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_spaces_max", value);
            }
        }

        /// <summary>
        /// Min Spaces
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_spaces_min")]
        public System.Nullable<int> ofm_spaces_min
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_spaces_min");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_spaces_min", value);
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the CCLR Ratio
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_cclr_ratio_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_cclr_ratio_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the CCLR Ratio
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_cclr_ratio_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_cclr_ratio_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N ofm_cclr_spaceallocation
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_cclr_spaceallocation")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_space_allocation> ofm_cclr_spaceallocation
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_space_allocation>("ofm_cclr_spaceallocation", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_space_allocation>("ofm_cclr_spaceallocation", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_rateschedule_cclr
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_rate_schedule")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_rateschedule_cclr")]
        public ECC.Core.DataContext.ofm_rate_schedule ofm_rateschedule_cclr
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_rate_schedule>("ofm_rateschedule_cclr", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_rate_schedule>("ofm_rateschedule_cclr", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_cclr_ratio
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_cclr_ratio")]
        public ECC.Core.DataContext.Team team_ofm_cclr_ratio
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_cclr_ratio", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_cclr_ratio(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_cclr_ratioid"] = base.Id;
                        break;
                    case "ofm_cclr_ratioid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_communication_type")]
    public partial class ofm_communication_type : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_communication_type entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_communication_type_number = "ofm_communication_type_number";
            public const string ofm_communication_typeid = "ofm_communication_typeid";
            public const string Id = "ofm_communication_typeid";
            public const string ofm_email_communication_type = "ofm_email_communication_type";
            public const string ofm_name = "ofm_name";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_communication_type = "team_ofm_communication_type";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_communication_type(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_communication_type(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_communication_type(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_communication_type() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_communication_typeid";

        public const string PrimaryNameAttribute = "ofm_name";

        public const string EntitySchemaName = "ofm_communication_type";

        public const string EntityLogicalName = "ofm_communication_type";

        public const string EntityLogicalCollectionName = "ofm_communication_types";

        public const string EntitySetName = "ofm_communication_types";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_communication_type_number")]
        public System.Nullable<int> ofm_communication_type_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_communication_type_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_communication_type_number", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_communication_typeid")]
        public System.Nullable<System.Guid> ofm_communication_typeid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_communication_typeid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_communication_typeid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_communication_typeid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_communication_typeid = value;
            }
        }

        /// <summary>
        /// The name of the custom entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
        public string ofm_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_name", value);
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Communication Type
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_communication_type_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_communication_type_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Communication Type
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_communication_type_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_communication_type_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N ofm_email_communication_type
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_email_communication_type")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Email> ofm_email_communication_type
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.Email>("ofm_email_communication_type", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.Email>("ofm_email_communication_type", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_communication_type
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_communication_type")]
        public ECC.Core.DataContext.Team team_ofm_communication_type
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_communication_type", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_communication_type(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_communication_typeid"] = base.Id;
                        break;
                    case "ofm_communication_typeid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// A message on a conversation thread of an Assistance Request
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_conversation")]
    public partial class ofm_conversation : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_conversation entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_conversation_request = "ofm_conversation_request";
            public const string ofm_conversationid = "ofm_conversationid";
            public const string Id = "ofm_conversationid";
            public const string ofm_message = "ofm_message";
            public const string ofm_name = "ofm_name";
            public const string ofm_request = "ofm_request";
            public const string ofm_requestname = "ofm_requestname";
            public const string ofm_source_system = "ofm_source_system";
            public const string ofm_source_systemname = "ofm_source_systemname";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_conversation = "team_ofm_conversation";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_conversation(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_conversation(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_conversation(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_conversation() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_conversationid";

        public const string PrimaryNameAttribute = "ofm_name";

        public const string EntitySchemaName = "ofm_conversation";

        public const string EntityLogicalName = "ofm_conversation";

        public const string EntityLogicalCollectionName = "ofm_conversations";

        public const string EntitySetName = "ofm_conversations";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_conversationid")]
        public System.Nullable<System.Guid> ofm_conversationid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_conversationid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_conversationid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_conversationid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_conversationid = value;
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_message")]
        public string ofm_message
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_message");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_message", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
        public string ofm_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_name", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_request")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_request
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_request");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_request", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_requestname")]
        public string ofm_requestname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_request"))
                {
                    return this.FormattedValues["ofm_request"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_source_system")]
        public System.Nullable<bool> ofm_source_system
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_source_system");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_source_systemname")]
        public string ofm_source_systemname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_source_system"))
                {
                    return this.FormattedValues["ofm_source_system"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Conversation
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_conversation_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_conversation_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Conversation
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_conversation_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_conversation_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 ofm_conversation_request
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_request")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_conversation_request")]
        public ECC.Core.DataContext.ofm_assistance_request ofm_conversation_request
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_assistance_request>("ofm_conversation_request", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_assistance_request>("ofm_conversation_request", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_conversation
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_conversation")]
        public ECC.Core.DataContext.Team team_ofm_conversation
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_conversation", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_conversation(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_conversationid"] = base.Id;
                        break;
                    case "ofm_conversationid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// Data Import Record
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_data_import")]
    public partial class ofm_data_import : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_data_import entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_data_file = "ofm_data_file";
            public const string ofm_data_file_name = "ofm_data_file_name";
            public const string ofm_data_importid = "ofm_data_importid";
            public const string Id = "ofm_data_importid";
            public const string ofm_import_type = "ofm_import_type";
            public const string ofm_import_typename = "ofm_import_typename";
            public const string ofm_message = "ofm_message";
            public const string ofm_name = "ofm_name";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_data_import = "team_ofm_data_import";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_data_import(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_data_import(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_data_import(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_data_import() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_data_importid";

        public const string PrimaryNameAttribute = "ofm_name";

        public const string EntitySchemaName = "ofm_data_import";

        public const string EntityLogicalName = "ofm_data_import";

        public const string EntityLogicalCollectionName = "ofm_data_imports";

        public const string EntitySetName = "ofm_data_imports";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Data File
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_data_file")]
        public object ofm_data_file
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<object>("ofm_data_file");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_data_file_name")]
        public string ofm_data_file_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_data_file"))
                {
                    return this.FormattedValues["ofm_data_file"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_data_importid")]
        public System.Nullable<System.Guid> ofm_data_importid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_data_importid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_data_importid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_data_importid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_data_importid = value;
            }
        }

        /// <summary>
        /// Import Type
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_import_type")]
        public virtual ecc_data_import_type? ofm_import_type
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_data_import_type?)(EntityOptionSetEnum.GetEnum(this, "ofm_import_type")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_import_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_import_typename")]
        public string ofm_import_typename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_import_type"))
                {
                    return this.FormattedValues["ofm_import_type"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_message")]
        public string ofm_message
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_message");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_message", value);
            }
        }

        /// <summary>
        /// Data Import record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
        public string ofm_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_name", value);
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Data Import
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_data_import_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_data_import_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Data Import
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_data_import_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_data_import_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 team_ofm_data_import
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_data_import")]
        public ECC.Core.DataContext.Team team_ofm_data_import
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_data_import", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_data_import(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_data_importid"] = base.Id;
                        break;
                    case "ofm_data_importid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_document")]
    public partial class ofm_document : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_document entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_category = "ofm_category";
            public const string ofm_description = "ofm_description";
            public const string ofm_document_account = "ofm_document_account";
            public const string ofm_document_allowance = "ofm_document_allowance";
            public const string ofm_document_application = "ofm_document_application";
            public const string ofm_document_assistance_request = "ofm_document_assistance_request";
            public const string ofm_document_expense = "ofm_document_expense";
            public const string ofm_documentid = "ofm_documentid";
            public const string Id = "ofm_documentid";
            public const string ofm_extension = "ofm_extension";
            public const string ofm_file = "ofm_file";
            public const string ofm_file_name = "ofm_file_name";
            public const string ofm_file_size = "ofm_file_size";
            public const string ofm_internal_comment = "ofm_internal_comment";
            public const string ofm_name = "ofm_name";
            public const string ofm_regardingid = "ofm_regardingid";
            public const string ofm_regardingidname = "ofm_regardingidname";
            public const string ofm_regardingidyominame = "ofm_regardingidyominame";
            public const string ofm_subject = "ofm_subject";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_document = "team_ofm_document";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_document(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_document(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_document(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_document() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_documentid";

        public const string PrimaryNameAttribute = "ofm_name";

        public const string EntitySchemaName = "ofm_document";

        public const string EntityLogicalName = "ofm_document";

        public const string EntityLogicalCollectionName = "ofm_documents";

        public const string EntitySetName = "ofm_documents";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_category")]
        public string ofm_category
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_category");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_category", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_description")]
        public string ofm_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_description", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_documentid")]
        public System.Nullable<System.Guid> ofm_documentid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_documentid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_documentid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_documentid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_documentid = value;
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_extension")]
        public string ofm_extension
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_extension");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_extension", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_file")]
        public object ofm_file
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<object>("ofm_file");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_file_name")]
        public string ofm_file_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_file"))
                {
                    return this.FormattedValues["ofm_file"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_file_size")]
        public System.Nullable<decimal> ofm_file_size
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_file_size");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_file_size", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_internal_comment")]
        public string ofm_internal_comment
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_internal_comment");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_internal_comment", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
        public string ofm_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_name", value);
            }
        }

        /// <summary>
        /// Regarding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_regardingid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_regardingid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_regardingid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingidname")]
        public string ofm_regardingidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_regardingid"))
                {
                    return this.FormattedValues["ofm_regardingid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingidyominame")]
        public string ofm_regardingidyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_regardingid"))
                {
                    return this.FormattedValues["ofm_regardingid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_subject")]
        public string ofm_subject
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_subject");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_subject", value);
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Document
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_document_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_document_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Document
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_document_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_document_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 ofm_document_account
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_document_account")]
        public ECC.Core.DataContext.Account ofm_document_account
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Account>("ofm_document_account", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Account>("ofm_document_account", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_document_allowance
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_document_allowance")]
        public ECC.Core.DataContext.ofm_allowance ofm_document_allowance
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_allowance>("ofm_document_allowance", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_allowance>("ofm_document_allowance", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_document_application
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_document_application")]
        public ECC.Core.DataContext.ofm_application ofm_document_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_document_application", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_document_application", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_document_assistance_request
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_document_assistance_request")]
        public ECC.Core.DataContext.ofm_assistance_request ofm_document_assistance_request
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_assistance_request>("ofm_document_assistance_request", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_assistance_request>("ofm_document_assistance_request", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_document_expense
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_document_expense")]
        public ECC.Core.DataContext.ofm_expense ofm_document_expense
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_expense>("ofm_document_expense", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_expense>("ofm_document_expense", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_document
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_document")]
        public ECC.Core.DataContext.Team team_ofm_document
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_document", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_document(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_documentid"] = base.Id;
                        break;
                    case "ofm_documentid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// New and renewal Employee Certificate record
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_employee_certificate")]
    public partial class ofm_employee_certificate : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_employee_certificate entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_certificate_number = "ofm_certificate_number";
            public const string ofm_effective_date = "ofm_effective_date";
            public const string ofm_employee_certificateid = "ofm_employee_certificateid";
            public const string Id = "ofm_employee_certificateid";
            public const string ofm_employeecertificate_employeecertificatestatus = "ofm_employeecertificate_employeecertificatestatus";
            public const string ofm_expiry_date = "ofm_expiry_date";
            public const string ofm_first_name = "ofm_first_name";
            public const string ofm_is_active = "ofm_is_active";
            public const string ofm_is_activename = "ofm_is_activename";
            public const string ofm_last_name = "ofm_last_name";
            public const string ofm_middle_name = "ofm_middle_name";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_employee_certificate = "team_ofm_employee_certificate";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_employee_certificate(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_employee_certificate(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_employee_certificate(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ofm_certificate_number";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_employee_certificate() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_employee_certificateid";

        public const string PrimaryNameAttribute = "ofm_certificate_number";

        public const string EntitySchemaName = "ofm_employee_certificate";

        public const string EntityLogicalName = "ofm_employee_certificate";

        public const string EntityLogicalCollectionName = "ofm_employee_certificates";

        public const string EntitySetName = "ofm_employee_certificates";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Provider Employee Certificate record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_certificate_number")]
        public string ofm_certificate_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_certificate_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_certificate_number", value);
            }
        }

        /// <summary>
        /// Effective Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_effective_date")]
        public System.Nullable<System.DateTime> ofm_effective_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_effective_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_effective_date", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_employee_certificateid")]
        public System.Nullable<System.Guid> ofm_employee_certificateid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_employee_certificateid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_employee_certificateid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_employee_certificateid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_employee_certificateid = value;
            }
        }

        /// <summary>
        /// Certificate Expiry Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_expiry_date")]
        public System.Nullable<System.DateTime> ofm_expiry_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_expiry_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_expiry_date", value);
            }
        }

        /// <summary>
        /// First Name
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_first_name")]
        public string ofm_first_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_first_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_first_name", value);
            }
        }

        /// <summary>
        /// Is Active?
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_is_active")]
        public System.Nullable<bool> ofm_is_active
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_is_active");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_is_active", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_is_activename")]
        public string ofm_is_activename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_is_active"))
                {
                    return this.FormattedValues["ofm_is_active"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Last Name
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_last_name")]
        public string ofm_last_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_last_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_last_name", value);
            }
        }

        /// <summary>
        /// Middle Name
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_middle_name")]
        public string ofm_middle_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_middle_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_middle_name", value);
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Employee Certificate
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_employee_certificate_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_employee_certificate_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Employee Certificate
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_employee_certificate_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_employee_certificate_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N ofm_employeecertificate_employeecertificatestatus
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_employeecertificate_employeecertificatestatus")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_employee_certificate_status> ofm_employeecertificate_employeecertificatestatus
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_employee_certificate_status>("ofm_employeecertificate_employeecertificatestatus", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_employee_certificate_status>("ofm_employeecertificate_employeecertificatestatus", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_employee_certificate
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_employee_certificate")]
        public ECC.Core.DataContext.Team team_ofm_employee_certificate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_employee_certificate", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_employee_certificate(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_employee_certificateid"] = base.Id;
                        break;
                    case "ofm_employee_certificateid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// Employee Certificate Report record
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_employee_certificate_status")]
    public partial class ofm_employee_certificate_status : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_employee_certificate_status entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_caption = "ofm_caption";
            public const string ofm_certificate_number = "ofm_certificate_number";
            public const string ofm_certificate_status = "ofm_certificate_status";
            public const string ofm_certificate_statusname = "ofm_certificate_statusname";
            public const string ofm_employee_certificate = "ofm_employee_certificate";
            public const string ofm_employee_certificate_statusid = "ofm_employee_certificate_statusid";
            public const string Id = "ofm_employee_certificate_statusid";
            public const string ofm_employee_certificatename = "ofm_employee_certificatename";
            public const string ofm_employeecertificate_employeecertificatestatus = "ofm_employeecertificate_employeecertificatestatus";
            public const string ofm_initials = "ofm_initials";
            public const string ofm_providerreport_employeecertificatestatus = "ofm_providerreport_employeecertificatestatus";
            public const string ofm_survey_response = "ofm_survey_response";
            public const string ofm_survey_responsename = "ofm_survey_responsename";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_employee_certificate_status = "team_ofm_employee_certificate_status";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_employee_certificate_status(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_employee_certificate_status(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_employee_certificate_status(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_employee_certificate_status() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_employee_certificate_statusid";

        public const string PrimaryNameAttribute = "ofm_caption";

        public const string EntitySchemaName = "ofm_employee_certificate_status";

        public const string EntityLogicalName = "ofm_employee_certificate_status";

        public const string EntityLogicalCollectionName = "ofm_employee_certificate_statuses";

        public const string EntitySetName = "ofm_employee_certificate_statuses";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Employee Certificate Status record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_caption")]
        public string ofm_caption
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_caption");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_caption", value);
            }
        }

        /// <summary>
        /// Certification Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_certificate_number")]
        public string ofm_certificate_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_certificate_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_certificate_number", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_certificate_status")]
        public virtual ecc_pass_fail_empty? ofm_certificate_status
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_pass_fail_empty?)(EntityOptionSetEnum.GetEnum(this, "ofm_certificate_status")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_certificate_status", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_certificate_statusname")]
        public string ofm_certificate_statusname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_certificate_status"))
                {
                    return this.FormattedValues["ofm_certificate_status"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The associated Employee Certificate record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_employee_certificate")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_employee_certificate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_employee_certificate");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_employee_certificate", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_employee_certificate_statusid")]
        public System.Nullable<System.Guid> ofm_employee_certificate_statusid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_employee_certificate_statusid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_employee_certificate_statusid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_employee_certificate_statusid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_employee_certificate_statusid = value;
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_employee_certificatename")]
        public string ofm_employee_certificatename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_employee_certificate"))
                {
                    return this.FormattedValues["ofm_employee_certificate"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Initials
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_initials")]
        public string ofm_initials
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_initials");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_initials", value);
            }
        }

        /// <summary>
        /// The associated Provider Report record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_survey_response")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_survey_response
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_survey_response");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_survey_response", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_survey_responsename")]
        public string ofm_survey_responsename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_survey_response"))
                {
                    return this.FormattedValues["ofm_survey_response"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Employee Certificate Status
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_employee_certificate_Status_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_employee_certificate_Status_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Employee Certificate Status
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_employee_certificate_status_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_employee_certificate_status_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 ofm_employeecertificate_employeecertificatestatus
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_employee_certificate")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_employeecertificate_employeecertificatestatus")]
        public ECC.Core.DataContext.ofm_employee_certificate ofm_employeecertificate_employeecertificatestatus
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_employee_certificate>("ofm_employeecertificate_employeecertificatestatus", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_employee_certificate>("ofm_employeecertificate_employeecertificatestatus", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_providerreport_employeecertificatestatus
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_survey_response")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_providerreport_employeecertificatestatus")]
        public ECC.Core.DataContext.ofm_survey_response ofm_providerreport_employeecertificatestatus
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_survey_response>("ofm_providerreport_employeecertificatestatus", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_survey_response>("ofm_providerreport_employeecertificatestatus", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_employee_certificate_status
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_employee_certificate_status")]
        public ECC.Core.DataContext.Team team_ofm_employee_certificate_status
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_employee_certificate_status", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_employee_certificate_status(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_employee_certificate_statusid"] = base.Id;
                        break;
                    case "ofm_employee_certificate_statusid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// An Unexpected Expense Application record
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_expense")]
    public partial class ofm_expense : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_expense entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string exchangerate = "exchangerate";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_amount = "ofm_amount";
            public const string ofm_amount_base = "ofm_amount_base";
            public const string ofm_application = "ofm_application";
            public const string ofm_application_expense = "ofm_application_expense";
            public const string ofm_applicationname = "ofm_applicationname";
            public const string ofm_approvedon_date = "ofm_approvedon_date";
            public const string ofm_assistance_request = "ofm_assistance_request";
            public const string ofm_assistance_requestname = "ofm_assistance_requestname";
            public const string ofm_assistancerequest_expense = "ofm_assistancerequest_expense";
            public const string ofm_caption = "ofm_caption";
            public const string ofm_document_expense = "ofm_document_expense";
            public const string ofm_end_date = "ofm_end_date";
            public const string ofm_expenseid = "ofm_expenseid";
            public const string Id = "ofm_expenseid";
            public const string ofm_file = "ofm_file";
            public const string ofm_file_name = "ofm_file_name";
            public const string ofm_funding_number = "ofm_funding_number";
            public const string ofm_payment_expense = "ofm_payment_expense";
            public const string ofm_payment_frequency = "ofm_payment_frequency";
            public const string ofm_payment_frequencyname = "ofm_payment_frequencyname";
            public const string ofm_pcm_validated = "ofm_pcm_validated";
            public const string ofm_pcm_validatedname = "ofm_pcm_validatedname";
            public const string ofm_request_summary = "ofm_request_summary";
            public const string ofm_start_date = "ofm_start_date";
            public const string ofm_verification_documents_complete = "ofm_verification_documents_complete";
            public const string ofm_verification_documents_completename = "ofm_verification_documents_completename";
            public const string ofm_verification_funding_exhausted = "ofm_verification_funding_exhausted";
            public const string ofm_verification_funding_exhaustedname = "ofm_verification_funding_exhaustedname";
            public const string ofm_verification_quotations_arms_length = "ofm_verification_quotations_arms_length";
            public const string ofm_verification_quotations_arms_lengthname = "ofm_verification_quotations_arms_lengthname";
            public const string ofm_verification_quotations_confirmed = "ofm_verification_quotations_confirmed";
            public const string ofm_verification_quotations_confirmedname = "ofm_verification_quotations_confirmedname";
            public const string ofm_verification_supported_by_policy = "ofm_verification_supported_by_policy";
            public const string ofm_verification_supported_by_policyname = "ofm_verification_supported_by_policyname";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_expense = "team_ofm_expense";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string transactioncurrencyid = "transactioncurrencyid";
            public const string transactioncurrencyidname = "transactioncurrencyidname";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_expense(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_expense(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_expense(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_expense() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_expenseid";

        public const string PrimaryNameAttribute = "ofm_caption";

        public const string EntitySchemaName = "ofm_expense";

        public const string EntityLogicalName = "ofm_expense";

        public const string EntityLogicalCollectionName = "ofm_expenses";

        public const string EntitySetName = "ofm_expenses";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Exchange rate for the currency associated with the entity with respect to the base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
        public System.Nullable<decimal> exchangerate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Funding Amount
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_amount")]
        public Microsoft.Xrm.Sdk.Money ofm_amount
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_amount");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_amount", value);
            }
        }

        /// <summary>
        /// Value of the Funding Amount in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_amount_base")]
        public Microsoft.Xrm.Sdk.Money ofm_amount_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_amount_base");
            }
        }

        /// <summary>
        /// The associated Base application record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_application");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_application", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_applicationname")]
        public string ofm_applicationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_application"))
                {
                    return this.FormattedValues["ofm_application"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_approvedon_date")]
        public System.Nullable<System.DateTime> ofm_approvedon_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_approvedon_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_approvedon_date", value);
            }
        }

        /// <summary>
        /// The associated Assistance Request record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_assistance_request")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_assistance_request
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_assistance_request");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_assistance_request", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_assistance_requestname")]
        public string ofm_assistance_requestname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_assistance_request"))
                {
                    return this.FormattedValues["ofm_assistance_request"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// OFM Expense record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_caption")]
        public string ofm_caption
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_caption");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_caption", value);
            }
        }

        /// <summary>
        /// End Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_end_date")]
        public System.Nullable<System.DateTime> ofm_end_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_end_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_end_date", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_expenseid")]
        public System.Nullable<System.Guid> ofm_expenseid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_expenseid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_expenseid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_expenseid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_expenseid = value;
            }
        }

        /// <summary>
        /// Approval or Denial notification
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_file")]
        public object ofm_file
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<object>("ofm_file");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_file_name")]
        public string ofm_file_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_file"))
                {
                    return this.FormattedValues["ofm_file"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_funding_number")]
        public string ofm_funding_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_funding_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_funding_number", value);
            }
        }

        /// <summary>
        /// Payment Frequency
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_payment_frequency")]
        public virtual ecc_payment_frequency? ofm_payment_frequency
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_payment_frequency?)(EntityOptionSetEnum.GetEnum(this, "ofm_payment_frequency")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_payment_frequency", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_payment_frequencyname")]
        public string ofm_payment_frequencyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_payment_frequency"))
                {
                    return this.FormattedValues["ofm_payment_frequency"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pcm_validated")]
        public System.Nullable<bool> ofm_pcm_validated
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_pcm_validated");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_pcm_validated", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pcm_validatedname")]
        public string ofm_pcm_validatedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_pcm_validated"))
                {
                    return this.FormattedValues["ofm_pcm_validated"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Request Summary
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_request_summary")]
        public string ofm_request_summary
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_request_summary");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_request_summary", value);
            }
        }

        /// <summary>
        /// Start Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_start_date")]
        public System.Nullable<System.DateTime> ofm_start_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_start_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_start_date", value);
            }
        }

        /// <summary>
        /// Supporting documents complete
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_documents_complete")]
        public virtual ecc_expense_verification_status? ofm_verification_documents_complete
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_expense_verification_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_verification_documents_complete")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_documents_complete", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_documents_completename")]
        public string ofm_verification_documents_completename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_verification_documents_complete"))
                {
                    return this.FormattedValues["ofm_verification_documents_complete"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// All avenues for funding exhausted
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_funding_exhausted")]
        public virtual ecc_expense_verification_status? ofm_verification_funding_exhausted
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_expense_verification_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_verification_funding_exhausted")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_funding_exhausted", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_funding_exhaustedname")]
        public string ofm_verification_funding_exhaustedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_verification_funding_exhausted"))
                {
                    return this.FormattedValues["ofm_verification_funding_exhausted"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Quotations are arm’s length
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_quotations_arms_length")]
        public virtual ecc_expense_verification_status? ofm_verification_quotations_arms_length
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_expense_verification_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_verification_quotations_arms_length")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_quotations_arms_length", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_quotations_arms_lengthname")]
        public string ofm_verification_quotations_arms_lengthname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_verification_quotations_arms_length"))
                {
                    return this.FormattedValues["ofm_verification_quotations_arms_length"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Quotations for work confirmed
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_quotations_confirmed")]
        public virtual ecc_expense_verification_status? ofm_verification_quotations_confirmed
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_expense_verification_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_verification_quotations_confirmed")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_quotations_confirmed", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_quotations_confirmedname")]
        public string ofm_verification_quotations_confirmedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_verification_quotations_confirmed"))
                {
                    return this.FormattedValues["ofm_verification_quotations_confirmed"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Purpose of expense supported by policy
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_supported_by_policy")]
        public virtual ecc_expense_verification_status? ofm_verification_supported_by_policy
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_expense_verification_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_verification_supported_by_policy")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_verification_supported_by_policy", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_verification_supported_by_policyname")]
        public string ofm_verification_supported_by_policyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_verification_supported_by_policy"))
                {
                    return this.FormattedValues["ofm_verification_supported_by_policy"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Expense
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_expense_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_expense_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Expense
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_expense_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_expense_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the currency associated with the entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("transactioncurrencyid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
        public string transactioncurrencyidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("transactioncurrencyid"))
                {
                    return this.FormattedValues["transactioncurrencyid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N ofm_document_expense
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_document_expense")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_document> ofm_document_expense
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_document>("ofm_document_expense", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_document>("ofm_document_expense", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_payment_expense
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_payment_expense")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_payment> ofm_payment_expense
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_payment>("ofm_payment_expense", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_payment>("ofm_payment_expense", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_application_expense
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_application_expense")]
        public ECC.Core.DataContext.ofm_application ofm_application_expense
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_application_expense", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_application_expense", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_assistancerequest_expense
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_assistance_request")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_assistancerequest_expense")]
        public ECC.Core.DataContext.ofm_assistance_request ofm_assistancerequest_expense
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_assistance_request>("ofm_assistancerequest_expense", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_assistance_request>("ofm_assistancerequest_expense", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_expense
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_expense")]
        public ECC.Core.DataContext.Team team_ofm_expense
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_expense", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_expense(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_expenseid"] = base.Id;
                        break;
                    case "ofm_expenseid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// OFM Facility Intake Record
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_facility_intake")]
    public partial class ofm_facility_intake : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_facility_intake entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_caption = "ofm_caption";
            public const string ofm_description = "ofm_description";
            public const string ofm_facility = "ofm_facility";
            public const string ofm_facility_facilityintake = "ofm_facility_facilityintake";
            public const string ofm_facility_intakeid = "ofm_facility_intakeid";
            public const string Id = "ofm_facility_intakeid";
            public const string ofm_facilityname = "ofm_facilityname";
            public const string ofm_facilityyominame = "ofm_facilityyominame";
            public const string ofm_intake = "ofm_intake";
            public const string ofm_intake_facilityintake = "ofm_intake_facilityintake";
            public const string ofm_intakename = "ofm_intakename";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_facility_intake = "team_ofm_facility_intake";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_facility_intake(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_facility_intake(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_facility_intake(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_facility_intake() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_facility_intakeid";

        public const string PrimaryNameAttribute = "ofm_caption";

        public const string EntitySchemaName = "ofm_facility_intake";

        public const string EntityLogicalName = "ofm_facility_intake";

        public const string EntityLogicalCollectionName = "ofm_facility_intakes";

        public const string EntitySetName = "ofm_facility_intakes";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// OFM Facility Intake record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_caption")]
        public string ofm_caption
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_caption");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_caption", value);
            }
        }

        /// <summary>
        /// Description
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_description")]
        public string ofm_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_description", value);
            }
        }

        /// <summary>
        /// The associated facility record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_facility
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_facility");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_facility", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility_intakeid")]
        public System.Nullable<System.Guid> ofm_facility_intakeid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_facility_intakeid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_facility_intakeid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility_intakeid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_facility_intakeid = value;
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilityname")]
        public string ofm_facilityname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_facility"))
                {
                    return this.FormattedValues["ofm_facility"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilityyominame")]
        public string ofm_facilityyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_facility"))
                {
                    return this.FormattedValues["ofm_facility"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The associated Intake record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_intake")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_intake
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_intake");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_intake", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_intakename")]
        public string ofm_intakename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_intake"))
                {
                    return this.FormattedValues["ofm_intake"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Facility Intake
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_facility_intake_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_facility_intake_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Facility Intake
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_facility_intake_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_facility_intake_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 ofm_facility_facilityintake
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_facility_facilityintake")]
        public ECC.Core.DataContext.Account ofm_facility_facilityintake
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Account>("ofm_facility_facilityintake", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Account>("ofm_facility_facilityintake", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_intake_facilityintake
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_intake")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_intake_facilityintake")]
        public ECC.Core.DataContext.ofm_intake ofm_intake_facilityintake
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_intake>("ofm_intake_facilityintake", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_intake>("ofm_intake_facilityintake", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_facility_intake
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_facility_intake")]
        public ECC.Core.DataContext.Team team_ofm_facility_intake
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_facility_intake", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_facility_intake(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_facility_intakeid"] = base.Id;
                        break;
                    case "ofm_facility_intakeid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_facility_request")]
    public partial class ofm_facility_request : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_facility_request entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_facility = "ofm_facility";
            public const string ofm_facility_request_facility = "ofm_facility_request_facility";
            public const string ofm_facility_request_request = "ofm_facility_request_request";
            public const string ofm_facility_requestid = "ofm_facility_requestid";
            public const string Id = "ofm_facility_requestid";
            public const string ofm_facilityname = "ofm_facilityname";
            public const string ofm_facilityyominame = "ofm_facilityyominame";
            public const string ofm_name = "ofm_name";
            public const string ofm_request = "ofm_request";
            public const string ofm_requestname = "ofm_requestname";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_facility_request = "team_ofm_facility_request";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_facility_request(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_facility_request(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_facility_request(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ofm_facility,ofm_request";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_facility_request() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_facility_requestid";

        public const string PrimaryNameAttribute = "ofm_name";

        public const string EntitySchemaName = "ofm_facility_request";

        public const string EntityLogicalName = "ofm_facility_request";

        public const string EntityLogicalCollectionName = "ofm_facility_requests";

        public const string EntitySetName = "ofm_facility_requests";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_facility
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_facility");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_facility", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility_requestid")]
        public System.Nullable<System.Guid> ofm_facility_requestid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_facility_requestid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_facility_requestid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility_requestid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_facility_requestid = value;
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilityname")]
        public string ofm_facilityname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_facility"))
                {
                    return this.FormattedValues["ofm_facility"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilityyominame")]
        public string ofm_facilityyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_facility"))
                {
                    return this.FormattedValues["ofm_facility"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
        public string ofm_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_name", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_request")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_request
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_request");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_request", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_requestname")]
        public string ofm_requestname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_request"))
                {
                    return this.FormattedValues["ofm_request"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Facility Request
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_facility_request_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_facility_request_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Facility Request
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_facility_request_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_facility_request_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 ofm_facility_request_facility
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_facility_request_facility")]
        public ECC.Core.DataContext.Account ofm_facility_request_facility
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Account>("ofm_facility_request_facility", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Account>("ofm_facility_request_facility", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_facility_request_request
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_request")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_facility_request_request")]
        public ECC.Core.DataContext.ofm_assistance_request ofm_facility_request_request
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_assistance_request>("ofm_facility_request_request", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_assistance_request>("ofm_facility_request_request", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_facility_request
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_facility_request")]
        public ECC.Core.DataContext.Team team_ofm_facility_request
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_facility_request", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_facility_request(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_facility_requestid"] = base.Id;
                        break;
                    case "ofm_facility_requestid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// OFM Fiscal Year Record
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_fiscal_year")]
    public partial class ofm_fiscal_year : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_fiscal_year entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_agreement_number_seed = "ofm_agreement_number_seed";
            public const string ofm_caption = "ofm_caption";
            public const string ofm_end_date = "ofm_end_date";
            public const string ofm_financial_year = "ofm_financial_year";
            public const string ofm_fiscal_year_number = "ofm_fiscal_year_number";
            public const string ofm_fiscal_year_payment_file_exchange = "ofm_fiscal_year_payment_file_exchange";
            public const string ofm_fiscal_year_survey_response = "ofm_fiscal_year_survey_response";
            public const string ofm_fiscal_yearid = "ofm_fiscal_yearid";
            public const string Id = "ofm_fiscal_yearid";
            public const string ofm_fiscalyear_payment = "ofm_fiscalyear_payment";
            public const string ofm_start_date = "ofm_start_date";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_fiscal_year = "team_ofm_fiscal_year";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_fiscal_year(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_fiscal_year(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_fiscal_year(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ofm_fiscal_year_number";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_fiscal_year() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_fiscal_yearid";

        public const string PrimaryNameAttribute = "ofm_caption";

        public const string EntitySchemaName = "ofm_fiscal_year";

        public const string EntityLogicalName = "ofm_fiscal_year";

        public const string EntityLogicalCollectionName = "ofm_fiscal_years";

        public const string EntitySetName = "ofm_fiscal_years";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Agreement Number Seed
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_agreement_number_seed")]
        public System.Nullable<int> ofm_agreement_number_seed
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_agreement_number_seed");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_agreement_number_seed", value);
            }
        }

        /// <summary>
        /// OFM Fiscal Year record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_caption")]
        public string ofm_caption
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_caption");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_caption", value);
            }
        }

        /// <summary>
        /// End Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_end_date")]
        public System.Nullable<System.DateTime> ofm_end_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_end_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_end_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_financial_year")]
        public string ofm_financial_year
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_financial_year");
            }
        }

        /// <summary>
        /// ID
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fiscal_year_number")]
        public System.Nullable<int> ofm_fiscal_year_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_fiscal_year_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_fiscal_year_number", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fiscal_yearid")]
        public System.Nullable<System.Guid> ofm_fiscal_yearid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_fiscal_yearid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_fiscal_yearid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fiscal_yearid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_fiscal_yearid = value;
            }
        }

        /// <summary>
        /// Start Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_start_date")]
        public System.Nullable<System.DateTime> ofm_start_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_start_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_start_date", value);
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Fiscal Year
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_fiscal_year_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_fiscal_year_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Fiscal Year
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_fiscal_year_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_fiscal_year_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N ofm_fiscal_year_payment_file_exchange
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_fiscal_year_payment_file_exchange")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_payment_file_exchange> ofm_fiscal_year_payment_file_exchange
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_payment_file_exchange>("ofm_fiscal_year_payment_file_exchange", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_payment_file_exchange>("ofm_fiscal_year_payment_file_exchange", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_fiscal_year_survey_response
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_fiscal_year_survey_response")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_survey_response> ofm_fiscal_year_survey_response
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_survey_response>("ofm_fiscal_year_survey_response", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_survey_response>("ofm_fiscal_year_survey_response", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_fiscalyear_payment
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_fiscalyear_payment")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_payment> ofm_fiscalyear_payment
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_payment>("ofm_fiscalyear_payment", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_payment>("ofm_fiscalyear_payment", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_fiscal_year
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_fiscal_year")]
        public ECC.Core.DataContext.Team team_ofm_fiscal_year
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_fiscal_year", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_fiscal_year(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_fiscal_yearid"] = base.Id;
                        break;
                    case "ofm_fiscal_yearid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// OFM Funding Record
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_funding")]
    public partial class ofm_funding : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_funding entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string exchangerate = "exchangerate";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_agreement_file = "ofm_agreement_file";
            public const string ofm_agreement_file_name = "ofm_agreement_file_name";
            public const string ofm_application = "ofm_application";
            public const string ofm_application_funding = "ofm_application_funding";
            public const string ofm_applicationname = "ofm_applicationname";
            public const string ofm_apply_duplicate_caretypes_condition = "ofm_apply_duplicate_caretypes_condition";
            public const string ofm_apply_duplicate_caretypes_conditionname = "ofm_apply_duplicate_caretypes_conditionname";
            public const string ofm_apply_room_split_condition = "ofm_apply_room_split_condition";
            public const string ofm_apply_room_split_conditionname = "ofm_apply_room_split_conditionname";
            public const string ofm_calculated_on = "ofm_calculated_on";
            public const string ofm_clauses = "ofm_clauses";
            public const string ofm_clausesname = "ofm_clausesname";
            public const string ofm_cohort = "ofm_cohort";
            public const string ofm_cohortid = "ofm_cohortid";
            public const string ofm_cohortidname = "ofm_cohortidname";
            public const string ofm_contact_funding = "ofm_contact_funding";
            public const string ofm_contact_funding_decliner = "ofm_contact_funding_decliner";
            public const string ofm_declaration = "ofm_declaration";
            public const string ofm_declarationname = "ofm_declarationname";
            public const string ofm_end_date = "ofm_end_date";
            public const string ofm_envelope_administrative = "ofm_envelope_administrative";
            public const string ofm_envelope_administrative_base = "ofm_envelope_administrative_base";
            public const string ofm_envelope_administrative_pf = "ofm_envelope_administrative_pf";
            public const string ofm_envelope_administrative_pf_base = "ofm_envelope_administrative_pf_base";
            public const string ofm_envelope_administrative_proj = "ofm_envelope_administrative_proj";
            public const string ofm_envelope_administrative_proj_base = "ofm_envelope_administrative_proj_base";
            public const string ofm_envelope_administrative_proj_topup = "ofm_envelope_administrative_proj_topup";
            public const string ofm_envelope_administrative_topup = "ofm_envelope_administrative_topup";
            public const string ofm_envelope_administrative_topup_base = "ofm_envelope_administrative_topup_base";
            public const string ofm_envelope_facility = "ofm_envelope_facility";
            public const string ofm_envelope_facility_base = "ofm_envelope_facility_base";
            public const string ofm_envelope_facility_pf = "ofm_envelope_facility_pf";
            public const string ofm_envelope_facility_pf_base = "ofm_envelope_facility_pf_base";
            public const string ofm_envelope_facility_proj = "ofm_envelope_facility_proj";
            public const string ofm_envelope_facility_proj_base = "ofm_envelope_facility_proj_base";
            public const string ofm_envelope_facility_proj_topup = "ofm_envelope_facility_proj_topup";
            public const string ofm_envelope_facility_topup = "ofm_envelope_facility_topup";
            public const string ofm_envelope_facility_topup_base = "ofm_envelope_facility_topup_base";
            public const string ofm_envelope_grand_total = "ofm_envelope_grand_total";
            public const string ofm_envelope_grand_total_base = "ofm_envelope_grand_total_base";
            public const string ofm_envelope_grand_total_pf = "ofm_envelope_grand_total_pf";
            public const string ofm_envelope_grand_total_pf_base = "ofm_envelope_grand_total_pf_base";
            public const string ofm_envelope_grand_total_proj = "ofm_envelope_grand_total_proj";
            public const string ofm_envelope_grand_total_proj_base = "ofm_envelope_grand_total_proj_base";
            public const string ofm_envelope_grand_total_proj_topup = "ofm_envelope_grand_total_proj_topup";
            public const string ofm_envelope_grand_total_topup = "ofm_envelope_grand_total_topup";
            public const string ofm_envelope_grand_total_topup_base = "ofm_envelope_grand_total_topup_base";
            public const string ofm_envelope_hr_benefits = "ofm_envelope_hr_benefits";
            public const string ofm_envelope_hr_benefits_base = "ofm_envelope_hr_benefits_base";
            public const string ofm_envelope_hr_benefits_pf = "ofm_envelope_hr_benefits_pf";
            public const string ofm_envelope_hr_benefits_pf_base = "ofm_envelope_hr_benefits_pf_base";
            public const string ofm_envelope_hr_benefits_proj = "ofm_envelope_hr_benefits_proj";
            public const string ofm_envelope_hr_benefits_proj_base = "ofm_envelope_hr_benefits_proj_base";
            public const string ofm_envelope_hr_benefits_proj_topup = "ofm_envelope_hr_benefits_proj_topup";
            public const string ofm_envelope_hr_benefits_topup = "ofm_envelope_hr_benefits_topup";
            public const string ofm_envelope_hr_benefits_topup_base = "ofm_envelope_hr_benefits_topup_base";
            public const string ofm_envelope_hr_employerhealthtax = "ofm_envelope_hr_employerhealthtax";
            public const string ofm_envelope_hr_employerhealthtax_base = "ofm_envelope_hr_employerhealthtax_base";
            public const string ofm_envelope_hr_employerhealthtax_pf = "ofm_envelope_hr_employerhealthtax_pf";
            public const string ofm_envelope_hr_employerhealthtax_pf_base = "ofm_envelope_hr_employerhealthtax_pf_base";
            public const string ofm_envelope_hr_employerhealthtax_proj = "ofm_envelope_hr_employerhealthtax_proj";
            public const string ofm_envelope_hr_employerhealthtax_proj_base = "ofm_envelope_hr_employerhealthtax_proj_base";
            public const string ofm_envelope_hr_employerhealthtax_proj_topup = "ofm_envelope_hr_employerhealthtax_proj_topup";
            public const string ofm_envelope_hr_employerhealthtax_topup = "ofm_envelope_hr_employerhealthtax_topup";
            public const string ofm_envelope_hr_employerhealthtax_topup_base = "ofm_envelope_hr_employerhealthtax_topup_base";
            public const string ofm_envelope_hr_prodevexpenses = "ofm_envelope_hr_prodevexpenses";
            public const string ofm_envelope_hr_prodevexpenses_base = "ofm_envelope_hr_prodevexpenses_base";
            public const string ofm_envelope_hr_prodevexpenses_pf = "ofm_envelope_hr_prodevexpenses_pf";
            public const string ofm_envelope_hr_prodevexpenses_pf_base = "ofm_envelope_hr_prodevexpenses_pf_base";
            public const string ofm_envelope_hr_prodevexpenses_proj = "ofm_envelope_hr_prodevexpenses_proj";
            public const string ofm_envelope_hr_prodevexpenses_proj_base = "ofm_envelope_hr_prodevexpenses_proj_base";
            public const string ofm_envelope_hr_prodevexpenses_proj_topup = "ofm_envelope_hr_prodevexpenses_proj_topup";
            public const string ofm_envelope_hr_prodevexpenses_topup = "ofm_envelope_hr_prodevexpenses_topup";
            public const string ofm_envelope_hr_prodevexpenses_topup_base = "ofm_envelope_hr_prodevexpenses_topup_base";
            public const string ofm_envelope_hr_prodevhours = "ofm_envelope_hr_prodevhours";
            public const string ofm_envelope_hr_prodevhours_base = "ofm_envelope_hr_prodevhours_base";
            public const string ofm_envelope_hr_prodevhours_pf = "ofm_envelope_hr_prodevhours_pf";
            public const string ofm_envelope_hr_prodevhours_pf_base = "ofm_envelope_hr_prodevhours_pf_base";
            public const string ofm_envelope_hr_prodevhours_proj = "ofm_envelope_hr_prodevhours_proj";
            public const string ofm_envelope_hr_prodevhours_proj_base = "ofm_envelope_hr_prodevhours_proj_base";
            public const string ofm_envelope_hr_prodevhours_proj_topup = "ofm_envelope_hr_prodevhours_proj_topup";
            public const string ofm_envelope_hr_prodevhours_topup = "ofm_envelope_hr_prodevhours_topup";
            public const string ofm_envelope_hr_prodevhours_topup_base = "ofm_envelope_hr_prodevhours_topup_base";
            public const string ofm_envelope_hr_total = "ofm_envelope_hr_total";
            public const string ofm_envelope_hr_total_base = "ofm_envelope_hr_total_base";
            public const string ofm_envelope_hr_total_pf = "ofm_envelope_hr_total_pf";
            public const string ofm_envelope_hr_total_pf_base = "ofm_envelope_hr_total_pf_base";
            public const string ofm_envelope_hr_total_proj = "ofm_envelope_hr_total_proj";
            public const string ofm_envelope_hr_total_proj_base = "ofm_envelope_hr_total_proj_base";
            public const string ofm_envelope_hr_total_proj_topup = "ofm_envelope_hr_total_proj_topup";
            public const string ofm_envelope_hr_total_topup = "ofm_envelope_hr_total_topup";
            public const string ofm_envelope_hr_total_topup_base = "ofm_envelope_hr_total_topup_base";
            public const string ofm_envelope_hr_wages_paidtimeoff = "ofm_envelope_hr_wages_paidtimeoff";
            public const string ofm_envelope_hr_wages_paidtimeoff_base = "ofm_envelope_hr_wages_paidtimeoff_base";
            public const string ofm_envelope_hr_wages_paidtimeoff_pf = "ofm_envelope_hr_wages_paidtimeoff_pf";
            public const string ofm_envelope_hr_wages_paidtimeoff_pf_base = "ofm_envelope_hr_wages_paidtimeoff_pf_base";
            public const string ofm_envelope_hr_wages_paidtimeoff_proj = "ofm_envelope_hr_wages_paidtimeoff_proj";
            public const string ofm_envelope_hr_wages_paidtimeoff_proj_base = "ofm_envelope_hr_wages_paidtimeoff_proj_base";
            public const string ofm_envelope_hr_wages_paidtimeoff_proj_topup = "ofm_envelope_hr_wages_paidtimeoff_proj_topup";
            public const string ofm_envelope_hr_wages_paidtimeoff_topup = "ofm_envelope_hr_wages_paidtimeoff_topup";
            public const string ofm_envelope_hr_wages_paidtimeoff_topup_base = "ofm_envelope_hr_wages_paidtimeoff_topup_base";
            public const string ofm_envelope_operational = "ofm_envelope_operational";
            public const string ofm_envelope_operational_base = "ofm_envelope_operational_base";
            public const string ofm_envelope_operational_pf = "ofm_envelope_operational_pf";
            public const string ofm_envelope_operational_pf_base = "ofm_envelope_operational_pf_base";
            public const string ofm_envelope_operational_proj = "ofm_envelope_operational_proj";
            public const string ofm_envelope_operational_proj_base = "ofm_envelope_operational_proj_base";
            public const string ofm_envelope_operational_proj_topup = "ofm_envelope_operational_proj_topup";
            public const string ofm_envelope_operational_topup = "ofm_envelope_operational_topup";
            public const string ofm_envelope_operational_topup_base = "ofm_envelope_operational_topup_base";
            public const string ofm_envelope_programming = "ofm_envelope_programming";
            public const string ofm_envelope_programming_base = "ofm_envelope_programming_base";
            public const string ofm_envelope_programming_pf = "ofm_envelope_programming_pf";
            public const string ofm_envelope_programming_pf_base = "ofm_envelope_programming_pf_base";
            public const string ofm_envelope_programming_proj = "ofm_envelope_programming_proj";
            public const string ofm_envelope_programming_proj_base = "ofm_envelope_programming_proj_base";
            public const string ofm_envelope_programming_proj_topup = "ofm_envelope_programming_proj_topup";
            public const string ofm_envelope_programming_topup = "ofm_envelope_programming_topup";
            public const string ofm_envelope_programming_topup_base = "ofm_envelope_programming_topup_base";
            public const string ofm_facility = "ofm_facility";
            public const string ofm_facilityname = "ofm_facilityname";
            public const string ofm_facilityyominame = "ofm_facilityyominame";
            public const string ofm_funding_Emails = "ofm_funding_Emails";
            public const string ofm_funding_envelope = "ofm_funding_envelope";
            public const string ofm_funding_facility_account = "ofm_funding_facility_account";
            public const string ofm_funding_licencedetail = "ofm_funding_licencedetail";
            public const string ofm_funding_number = "ofm_funding_number";
            public const string ofm_funding_spaceallocation = "ofm_funding_spaceallocation";
            public const string ofm_funding_tracker = "ofm_funding_tracker";
            public const string ofm_fundingid = "ofm_fundingid";
            public const string Id = "ofm_fundingid";
            public const string ofm_integrationlog_funding = "ofm_integrationlog_funding";
            public const string ofm_is_approval_required = "ofm_is_approval_required";
            public const string ofm_is_approval_requiredname = "ofm_is_approval_requiredname";
            public const string ofm_licence_review_declaration = "ofm_licence_review_declaration";
            public const string ofm_licence_review_declarationname = "ofm_licence_review_declarationname";
            public const string ofm_manual_intervention = "ofm_manual_intervention";
            public const string ofm_manual_interventionname = "ofm_manual_interventionname";
            public const string ofm_ministry_approval = "ofm_ministry_approval";
            public const string ofm_ministry_approval_date = "ofm_ministry_approval_date";
            public const string ofm_ministry_approvalname = "ofm_ministry_approvalname";
            public const string ofm_ministry_approver = "ofm_ministry_approver";
            public const string ofm_ministry_approvername = "ofm_ministry_approvername";
            public const string ofm_ministry_approveryominame = "ofm_ministry_approveryominame";
            public const string ofm_mod_schedule_to_be_included = "ofm_mod_schedule_to_be_included";
            public const string ofm_mod_schedule_to_be_includedname = "ofm_mod_schedule_to_be_includedname";
            public const string ofm_modification_purpose = "ofm_modification_purpose";
            public const string ofm_modifications = "ofm_modifications";
            public const string ofm_monthly_province_base_funding_y1 = "ofm_monthly_province_base_funding_y1";
            public const string ofm_new_allocation_date = "ofm_new_allocation_date";
            public const string ofm_ops_approver = "ofm_ops_approver";
            public const string ofm_ops_approvername = "ofm_ops_approvername";
            public const string ofm_ops_approveryominame = "ofm_ops_approveryominame";
            public const string ofm_ops_manager_approval = "ofm_ops_manager_approval";
            public const string ofm_ops_manager_approvalname = "ofm_ops_manager_approvalname";
            public const string ofm_ops_supervisor_approval_date = "ofm_ops_supervisor_approval_date";
            public const string ofm_payment_funding = "ofm_payment_funding";
            public const string ofm_pcm_validated = "ofm_pcm_validated";
            public const string ofm_pcm_validatedname = "ofm_pcm_validatedname";
            public const string ofm_pdf_clause_text = "ofm_pdf_clause_text";
            public const string ofm_pdf_expense_authority_fullname = "ofm_pdf_expense_authority_fullname";
            public const string ofm_pdf_facility_address = "ofm_pdf_facility_address";
            public const string ofm_pdf_facility_address_list = "ofm_pdf_facility_address_list";
            public const string ofm_pdf_funding_end_date = "ofm_pdf_funding_end_date";
            public const string ofm_pdf_funding_start_date = "ofm_pdf_funding_start_date";
            public const string ofm_pdf_legal_description = "ofm_pdf_legal_description";
            public const string ofm_pdf_licence_number = "ofm_pdf_licence_number";
            public const string ofm_pdf_ministry_ea_approval_date = "ofm_pdf_ministry_ea_approval_date";
            public const string ofm_pdf_organization_address = "ofm_pdf_organization_address";
            public const string ofm_pdf_organization_incorporation_number = "ofm_pdf_organization_incorporation_number";
            public const string ofm_pdf_organization_name = "ofm_pdf_organization_name";
            public const string ofm_pdf_original_funding = "ofm_pdf_original_funding";
            public const string ofm_pdf_original_funding_start_date = "ofm_pdf_original_funding_start_date";
            public const string ofm_pdf_provider_fa_approval_date = "ofm_pdf_provider_fa_approval_date";
            public const string ofm_previous_mods = "ofm_previous_mods";
            public const string ofm_proj_total_monthly_base_funding_topup = "ofm_proj_total_monthly_base_funding_topup";
            public const string ofm_projected_monthly_parent_fees_y1 = "ofm_projected_monthly_parent_fees_y1";
            public const string ofm_projected_total_monthly_base_funding_y1 = "ofm_projected_total_monthly_base_funding_y1";
            public const string ofm_provider_approval_date = "ofm_provider_approval_date";
            public const string ofm_provider_approver = "ofm_provider_approver";
            public const string ofm_provider_approvername = "ofm_provider_approvername";
            public const string ofm_provider_approveryominame = "ofm_provider_approveryominame";
            public const string ofm_provider_decline_date = "ofm_provider_decline_date";
            public const string ofm_provider_decliner = "ofm_provider_decliner";
            public const string ofm_provider_declinername = "ofm_provider_declinername";
            public const string ofm_provider_declineryominame = "ofm_provider_declineryominame";
            public const string ofm_rate_schedule = "ofm_rate_schedule";
            public const string ofm_rate_schedulename = "ofm_rate_schedulename";
            public const string ofm_rateschedule_funding = "ofm_rateschedule_funding";
            public const string ofm_retroactive_payment_date = "ofm_retroactive_payment_date";
            public const string ofm_retroactive_payment_frequency = "ofm_retroactive_payment_frequency";
            public const string ofm_retroactive_payment_frequencyname = "ofm_retroactive_payment_frequencyname";
            public const string ofm_review_underway_banner = "ofm_review_underway_banner";
            public const string ofm_sourceid = "ofm_sourceid";
            public const string ofm_start_date = "ofm_start_date";
            public const string ofm_top_up_funding = "ofm_top_up_funding";
            public const string ofm_version_number = "ofm_version_number";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_funding = "team_ofm_funding";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string transactioncurrencyid = "transactioncurrencyid";
            public const string transactioncurrencyidname = "transactioncurrencyidname";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_funding(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_funding(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_funding(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ofm_sourceid";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_funding() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_fundingid";

        public const string PrimaryNameAttribute = "ofm_funding_number";

        public const string EntitySchemaName = "ofm_funding";

        public const string EntityLogicalName = "ofm_funding";

        public const string EntityLogicalCollectionName = "ofm_fundings";

        public const string EntitySetName = "ofm_fundings";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Exchange rate for the currency associated with the entity with respect to the base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
        public System.Nullable<decimal> exchangerate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Agreement PDF for approved funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_agreement_file")]
        public object ofm_agreement_file
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<object>("ofm_agreement_file");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_agreement_file_name")]
        public string ofm_agreement_file_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_agreement_file"))
                {
                    return this.FormattedValues["ofm_agreement_file"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The associated Application on the funding record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_application");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_application", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_applicationname")]
        public string ofm_applicationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_application"))
                {
                    return this.FormattedValues["ofm_application"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Boolean Attribute
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_apply_duplicate_caretypes_condition")]
        public System.Nullable<bool> ofm_apply_duplicate_caretypes_condition
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_apply_duplicate_caretypes_condition");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_apply_duplicate_caretypes_condition", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_apply_duplicate_caretypes_conditionname")]
        public string ofm_apply_duplicate_caretypes_conditionname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_apply_duplicate_caretypes_condition"))
                {
                    return this.FormattedValues["ofm_apply_duplicate_caretypes_condition"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Boolean Attribute
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_apply_room_split_condition")]
        public System.Nullable<bool> ofm_apply_room_split_condition
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_apply_room_split_condition");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_apply_room_split_condition", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_apply_room_split_conditionname")]
        public string ofm_apply_room_split_conditionname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_apply_room_split_condition"))
                {
                    return this.FormattedValues["ofm_apply_room_split_condition"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Calculated On
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_calculated_on")]
        public System.Nullable<System.DateTime> ofm_calculated_on
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_calculated_on");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_calculated_on", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_clauses")]
        public virtual System.Collections.Generic.IEnumerable<ofm_funding_clauses> ofm_clauses
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return EntityOptionSetEnum.GetMultiEnum<ofm_funding_clauses>(this, "ofm_clauses");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_clauses", EntityOptionSetEnum.GetMultiEnum(this, "ofm_clauses", value));
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_clausesname")]
        public string ofm_clausesname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_clauses"))
                {
                    return this.FormattedValues["ofm_clauses"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cohort")]
        public string ofm_cohort
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_cohort");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cohortid")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_cohortid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_cohortid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_cohortid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cohortidname")]
        public string ofm_cohortidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_cohortid"))
                {
                    return this.FormattedValues["ofm_cohortid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Funding Agreement Declaration
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_declaration")]
        public System.Nullable<bool> ofm_declaration
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_declaration");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_declaration", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_declarationname")]
        public string ofm_declarationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_declaration"))
                {
                    return this.FormattedValues["ofm_declaration"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Funding End Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_end_date")]
        public System.Nullable<System.DateTime> ofm_end_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_end_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_end_date", value);
            }
        }

        /// <summary>
        /// Administrative - Annual Province Base Funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_administrative")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_administrative
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_administrative");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_administrative", value);
            }
        }

        /// <summary>
        /// Value of the Administrative in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_administrative_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_administrative_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_administrative_base");
            }
        }

        /// <summary>
        /// Administrative - Projected Annual Parent Fees
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_administrative_pf")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_administrative_pf
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_administrative_pf");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_administrative_pf", value);
            }
        }

        /// <summary>
        /// Value of the Administrative (PF) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_administrative_pf_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_administrative_pf_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_administrative_pf_base");
            }
        }

        /// <summary>
        /// Administrative - Projected Annual Base Funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_administrative_proj")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_administrative_proj
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_administrative_proj");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_administrative_proj", value);
            }
        }

        /// <summary>
        /// Value of the Administrative (Projected) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_administrative_proj_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_administrative_proj_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_administrative_proj_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_administrative_proj_topup")]
        public System.Nullable<decimal> ofm_envelope_administrative_proj_topup
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_envelope_administrative_proj_topup");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_administrative_topup")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_administrative_topup
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_administrative_topup");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_administrative_topup", value);
            }
        }

        /// <summary>
        /// Value of the Administrative Topup in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_administrative_topup_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_administrative_topup_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_administrative_topup_base");
            }
        }

        /// <summary>
        /// Facility - Annual Province Base Funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_facility")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_facility
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_facility");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_facility", value);
            }
        }

        /// <summary>
        /// Value of the Facility Funding in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_facility_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_facility_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_facility_base");
            }
        }

        /// <summary>
        /// Facility - Projected Annual Parent Fees
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_facility_pf")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_facility_pf
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_facility_pf");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_facility_pf", value);
            }
        }

        /// <summary>
        /// Value of the Facility (PF) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_facility_pf_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_facility_pf_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_facility_pf_base");
            }
        }

        /// <summary>
        /// Facility - Projected Annual Base Funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_facility_proj")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_facility_proj
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_facility_proj");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_facility_proj", value);
            }
        }

        /// <summary>
        /// Value of the Facility (Projected) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_facility_proj_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_facility_proj_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_facility_proj_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_facility_proj_topup")]
        public System.Nullable<decimal> ofm_envelope_facility_proj_topup
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_envelope_facility_proj_topup");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_facility_topup")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_facility_topup
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_facility_topup");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_facility_topup", value);
            }
        }

        /// <summary>
        /// Value of the Facility Topup in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_facility_topup_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_facility_topup_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_facility_topup_base");
            }
        }

        /// <summary>
        /// Funding Total - Annual Province Base Funding 
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_grand_total")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_grand_total
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_grand_total");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_grand_total", value);
            }
        }

        /// <summary>
        /// Value of the Funding Total in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_grand_total_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_grand_total_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_grand_total_base");
            }
        }

        /// <summary>
        /// Funding Total - Projected Annual Parent Fees
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_grand_total_pf")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_grand_total_pf
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_grand_total_pf");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_grand_total_pf", value);
            }
        }

        /// <summary>
        /// Value of the Funding Total (PF) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_grand_total_pf_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_grand_total_pf_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_grand_total_pf_base");
            }
        }

        /// <summary>
        /// Funding Total - Projected Annual Base Funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_grand_total_proj")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_grand_total_proj
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_grand_total_proj");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_grand_total_proj", value);
            }
        }

        /// <summary>
        /// Value of the Funding Total (Projected) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_grand_total_proj_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_grand_total_proj_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_grand_total_proj_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_grand_total_proj_topup")]
        public System.Nullable<decimal> ofm_envelope_grand_total_proj_topup
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_envelope_grand_total_proj_topup");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_grand_total_topup")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_grand_total_topup
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_grand_total_topup");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_grand_total_topup", value);
            }
        }

        /// <summary>
        /// Value of the Total Topup in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_grand_total_topup_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_grand_total_topup_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_grand_total_topup_base");
            }
        }

        /// <summary>
        /// Benefits - Annual Province Base Funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_benefits")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_benefits
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_benefits");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_hr_benefits", value);
            }
        }

        /// <summary>
        /// Value of the Benefits in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_benefits_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_benefits_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_benefits_base");
            }
        }

        /// <summary>
        /// Benefits - Projected Annual Parent Fees
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_benefits_pf")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_benefits_pf
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_benefits_pf");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_hr_benefits_pf", value);
            }
        }

        /// <summary>
        /// Value of the Benefits (PF) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_benefits_pf_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_benefits_pf_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_benefits_pf_base");
            }
        }

        /// <summary>
        /// Benefits - Projected Annual Base Funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_benefits_proj")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_benefits_proj
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_benefits_proj");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_hr_benefits_proj", value);
            }
        }

        /// <summary>
        /// Value of the Benefits (Projected) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_benefits_proj_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_benefits_proj_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_benefits_proj_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_benefits_proj_topup")]
        public System.Nullable<decimal> ofm_envelope_hr_benefits_proj_topup
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_envelope_hr_benefits_proj_topup");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_benefits_topup")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_benefits_topup
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_benefits_topup");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_hr_benefits_topup", value);
            }
        }

        /// <summary>
        /// Value of the Benefits Topup in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_benefits_topup_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_benefits_topup_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_benefits_topup_base");
            }
        }

        /// <summary>
        /// Employer Health Tax - Annual Province Parent Fees
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_employerhealthtax")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_employerhealthtax
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_employerhealthtax");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_hr_employerhealthtax", value);
            }
        }

        /// <summary>
        /// Value of the Employer Health Tax in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_employerhealthtax_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_employerhealthtax_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_employerhealthtax_base");
            }
        }

        /// <summary>
        /// Employer Health Tax - Projected Annual Parent Fees
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_employerhealthtax_pf")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_employerhealthtax_pf
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_employerhealthtax_pf");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_hr_employerhealthtax_pf", value);
            }
        }

        /// <summary>
        /// Value of the Employer Health Tax (PF) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_employerhealthtax_pf_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_employerhealthtax_pf_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_employerhealthtax_pf_base");
            }
        }

        /// <summary>
        /// Employer Health Tax - Projected Annual Base Funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_employerhealthtax_proj")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_employerhealthtax_proj
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_employerhealthtax_proj");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_hr_employerhealthtax_proj", value);
            }
        }

        /// <summary>
        /// Value of the Employer Health Tax (Projected) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_employerhealthtax_proj_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_employerhealthtax_proj_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_employerhealthtax_proj_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_employerhealthtax_proj_topup")]
        public System.Nullable<decimal> ofm_envelope_hr_employerhealthtax_proj_topup
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_envelope_hr_employerhealthtax_proj_topup");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_employerhealthtax_topup")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_employerhealthtax_topup
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_employerhealthtax_topup");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_hr_employerhealthtax_topup", value);
            }
        }

        /// <summary>
        /// Value of the Employer Health Tax Topup in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_employerhealthtax_topup_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_employerhealthtax_topup_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_employerhealthtax_topup_base");
            }
        }

        /// <summary>
        /// Professional Development Expenses - Annual Province Base Funding 
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevexpenses")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevexpenses
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevexpenses");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_hr_prodevexpenses", value);
            }
        }

        /// <summary>
        /// Value of the Professional Development Expenses in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevexpenses_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevexpenses_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevexpenses_base");
            }
        }

        /// <summary>
        /// Professional Development Expenses - Projected Annual Parent Fees
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevexpenses_pf")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevexpenses_pf
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevexpenses_pf");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_hr_prodevexpenses_pf", value);
            }
        }

        /// <summary>
        /// Value of the Professional Development Expenses (PF) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevexpenses_pf_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevexpenses_pf_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevexpenses_pf_base");
            }
        }

        /// <summary>
        /// Professional Development Expenses - Projected Annual Base Funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevexpenses_proj")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevexpenses_proj
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevexpenses_proj");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_hr_prodevexpenses_proj", value);
            }
        }

        /// <summary>
        /// Value of the Professional Development Expenses (Projected) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevexpenses_proj_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevexpenses_proj_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevexpenses_proj_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevexpenses_proj_topup")]
        public System.Nullable<decimal> ofm_envelope_hr_prodevexpenses_proj_topup
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_envelope_hr_prodevexpenses_proj_topup");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevexpenses_topup")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevexpenses_topup
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevexpenses_topup");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_hr_prodevexpenses_topup", value);
            }
        }

        /// <summary>
        /// Value of the Professional Development Expenses Topup in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevexpenses_topup_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevexpenses_topup_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevexpenses_topup_base");
            }
        }

        /// <summary>
        /// Professional Development Hours - Annual Province Base Funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevhours")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevhours
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevhours");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_hr_prodevhours", value);
            }
        }

        /// <summary>
        /// Value of the Professional Development Hours in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevhours_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevhours_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevhours_base");
            }
        }

        /// <summary>
        /// Professional Development Hours - Projected Annual Parent Fees
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevhours_pf")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevhours_pf
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevhours_pf");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_hr_prodevhours_pf", value);
            }
        }

        /// <summary>
        /// Value of the Professional Development Hours (PF) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevhours_pf_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevhours_pf_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevhours_pf_base");
            }
        }

        /// <summary>
        /// Professional Development Hours - Projected Annual Province Base Funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevhours_proj")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevhours_proj
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevhours_proj");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_hr_prodevhours_proj", value);
            }
        }

        /// <summary>
        /// Value of the Professional Development Hours (Projected) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevhours_proj_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevhours_proj_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevhours_proj_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevhours_proj_topup")]
        public System.Nullable<decimal> ofm_envelope_hr_prodevhours_proj_topup
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_envelope_hr_prodevhours_proj_topup");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevhours_topup")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevhours_topup
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevhours_topup");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_hr_prodevhours_topup", value);
            }
        }

        /// <summary>
        /// Value of the Professional Development Hours Topup in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevhours_topup_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevhours_topup_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevhours_topup_base");
            }
        }

        /// <summary>
        /// Instructional Human Resources - Annual Province Base Funding 
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_total")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_total
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_total");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_hr_total", value);
            }
        }

        /// <summary>
        /// Value of the Instructional Human Resources in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_total_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_total_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_total_base");
            }
        }

        /// <summary>
        /// Instructional Human Resources - Projected Annual Parent Fees
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_total_pf")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_total_pf
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_total_pf");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_hr_total_pf", value);
            }
        }

        /// <summary>
        /// Value of the Instructional Human Resources (PF) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_total_pf_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_total_pf_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_total_pf_base");
            }
        }

        /// <summary>
        /// Instructional Human Resources - Projected Annual Base Funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_total_proj")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_total_proj
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_total_proj");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_hr_total_proj", value);
            }
        }

        /// <summary>
        /// Value of the Instructional Human Resources (Projected) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_total_proj_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_total_proj_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_total_proj_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_total_proj_topup")]
        public System.Nullable<decimal> ofm_envelope_hr_total_proj_topup
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_envelope_hr_total_proj_topup");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_total_topup")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_total_topup
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_total_topup");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_hr_total_topup", value);
            }
        }

        /// <summary>
        /// Value of the Instructional Human Resources Topup in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_total_topup_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_total_topup_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_total_topup_base");
            }
        }

        /// <summary>
        /// Wages & Paid Time Off - Annual Province Base Funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_wages_paidtimeoff")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_wages_paidtimeoff
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_wages_paidtimeoff");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_hr_wages_paidtimeoff", value);
            }
        }

        /// <summary>
        /// Value of the Wages & Paid Time Off in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_wages_paidtimeoff_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_wages_paidtimeoff_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_wages_paidtimeoff_base");
            }
        }

        /// <summary>
        /// Wages & Paid Time Off - Projected Annual Parent Fees
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_wages_paidtimeoff_pf")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_wages_paidtimeoff_pf
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_wages_paidtimeoff_pf");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_hr_wages_paidtimeoff_pf", value);
            }
        }

        /// <summary>
        /// Value of the Wages & Paid Time Off (PF) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_wages_paidtimeoff_pf_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_wages_paidtimeoff_pf_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_wages_paidtimeoff_pf_base");
            }
        }

        /// <summary>
        /// Wages & Paid Time Off - Projected Annual Province Base Funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_wages_paidtimeoff_proj")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_wages_paidtimeoff_proj
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_wages_paidtimeoff_proj");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_hr_wages_paidtimeoff_proj", value);
            }
        }

        /// <summary>
        /// Value of the Wages & Paid Time Off (Projected) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_wages_paidtimeoff_proj_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_wages_paidtimeoff_proj_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_wages_paidtimeoff_proj_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_wages_paidtimeoff_proj_topup")]
        public System.Nullable<decimal> ofm_envelope_hr_wages_paidtimeoff_proj_topup
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_envelope_hr_wages_paidtimeoff_proj_topup");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_wages_paidtimeoff_topup")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_wages_paidtimeoff_topup
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_wages_paidtimeoff_topup");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_hr_wages_paidtimeoff_topup", value);
            }
        }

        /// <summary>
        /// Value of the Wages & Paid Time Off Topup in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_wages_paidtimeoff_topup_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_wages_paidtimeoff_topup_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_wages_paidtimeoff_topup_base");
            }
        }

        /// <summary>
        /// Operational - Annual Province Base Funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_operational")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_operational
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_operational");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_operational", value);
            }
        }

        /// <summary>
        /// Value of the Operational in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_operational_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_operational_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_operational_base");
            }
        }

        /// <summary>
        /// Operational - Projected Annual Parent Fees
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_operational_pf")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_operational_pf
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_operational_pf");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_operational_pf", value);
            }
        }

        /// <summary>
        /// Value of the Operational (PF) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_operational_pf_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_operational_pf_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_operational_pf_base");
            }
        }

        /// <summary>
        /// Operational - Projected Annual Base Funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_operational_proj")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_operational_proj
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_operational_proj");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_operational_proj", value);
            }
        }

        /// <summary>
        /// Value of the Operational (Projected) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_operational_proj_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_operational_proj_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_operational_proj_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_operational_proj_topup")]
        public System.Nullable<decimal> ofm_envelope_operational_proj_topup
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_envelope_operational_proj_topup");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_operational_topup")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_operational_topup
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_operational_topup");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_operational_topup", value);
            }
        }

        /// <summary>
        /// Value of the Operational Topup in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_operational_topup_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_operational_topup_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_operational_topup_base");
            }
        }

        /// <summary>
        /// Programming - Annual Province Base Funding 
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_programming")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_programming
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_programming");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_programming", value);
            }
        }

        /// <summary>
        /// Value of the Programming in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_programming_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_programming_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_programming_base");
            }
        }

        /// <summary>
        /// Programming - Projected Annual Parent Fees
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_programming_pf")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_programming_pf
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_programming_pf");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_programming_pf", value);
            }
        }

        /// <summary>
        /// Value of the Programming (PF) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_programming_pf_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_programming_pf_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_programming_pf_base");
            }
        }

        /// <summary>
        /// Programming - Projected Annual Base Funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_programming_proj")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_programming_proj
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_programming_proj");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_programming_proj", value);
            }
        }

        /// <summary>
        /// Value of the Programming (Projected) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_programming_proj_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_programming_proj_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_programming_proj_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_programming_proj_topup")]
        public System.Nullable<decimal> ofm_envelope_programming_proj_topup
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_envelope_programming_proj_topup");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_programming_topup")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_programming_topup
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_programming_topup");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_envelope_programming_topup", value);
            }
        }

        /// <summary>
        /// Value of the Programming Topup in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_programming_topup_base")]
        public Microsoft.Xrm.Sdk.Money ofm_envelope_programming_topup_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_programming_topup_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_facility
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_facility");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_facility", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilityname")]
        public string ofm_facilityname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_facility"))
                {
                    return this.FormattedValues["ofm_facility"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilityyominame")]
        public string ofm_facilityyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_facility"))
                {
                    return this.FormattedValues["ofm_facility"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// This is a binding field for the funding envelope custom PCF control
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_funding_envelope")]
        public string ofm_funding_envelope
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_funding_envelope");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_funding_envelope", value);
            }
        }

        /// <summary>
        /// The value is auto copied from ofm_funding_agreement_number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_funding_number")]
        public string ofm_funding_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_funding_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_funding_number", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fundingid")]
        public System.Nullable<System.Guid> ofm_fundingid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_fundingid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_fundingid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fundingid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_fundingid = value;
            }
        }

        /// <summary>
        /// Funding Approval/Adjudication is required by default except for inflation increase
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_is_approval_required")]
        public System.Nullable<bool> ofm_is_approval_required
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_is_approval_required");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_is_approval_required", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_is_approval_requiredname")]
        public string ofm_is_approval_requiredname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_is_approval_required"))
                {
                    return this.FormattedValues["ofm_is_approval_required"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Licence Review Declaration
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_review_declaration")]
        public System.Nullable<bool> ofm_licence_review_declaration
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_licence_review_declaration");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_licence_review_declaration", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_review_declarationname")]
        public string ofm_licence_review_declarationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_licence_review_declaration"))
                {
                    return this.FormattedValues["ofm_licence_review_declaration"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// ofm_manual_intervention
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_manual_intervention")]
        public System.Nullable<bool> ofm_manual_intervention
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_manual_intervention");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_manual_intervention", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_manual_interventionname")]
        public string ofm_manual_interventionname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_manual_intervention"))
                {
                    return this.FormattedValues["ofm_manual_intervention"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ministry_approval")]
        public virtual ofm_ops_manager_approval_status? ofm_ministry_approval
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_ops_manager_approval_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_ministry_approval")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_ministry_approval", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ministry_approval_date")]
        public System.Nullable<System.DateTime> ofm_ministry_approval_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_ministry_approval_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_ministry_approval_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ministry_approvalname")]
        public string ofm_ministry_approvalname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_ministry_approval"))
                {
                    return this.FormattedValues["ofm_ministry_approval"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The associated systemuser
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ministry_approver")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_ministry_approver
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_ministry_approver");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_ministry_approver", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ministry_approvername")]
        public string ofm_ministry_approvername
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_ministry_approver"))
                {
                    return this.FormattedValues["ofm_ministry_approver"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ministry_approveryominame")]
        public string ofm_ministry_approveryominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_ministry_approver"))
                {
                    return this.FormattedValues["ofm_ministry_approver"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_mod_schedule_to_be_included")]
        public virtual System.Collections.Generic.IEnumerable<ofm_select_schedule> ofm_mod_schedule_to_be_included
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return EntityOptionSetEnum.GetMultiEnum<ofm_select_schedule>(this, "ofm_mod_schedule_to_be_included");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_mod_schedule_to_be_included", EntityOptionSetEnum.GetMultiEnum(this, "ofm_mod_schedule_to_be_included", value));
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_mod_schedule_to_be_includedname")]
        public string ofm_mod_schedule_to_be_includedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_mod_schedule_to_be_included"))
                {
                    return this.FormattedValues["ofm_mod_schedule_to_be_included"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_modification_purpose")]
        public string ofm_modification_purpose
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_modification_purpose");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_modification_purpose", value);
            }
        }

        /// <summary>
        /// Funding Modification Details
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_modifications")]
        public string ofm_modifications
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_modifications");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_modifications", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_monthly_province_base_funding_y1")]
        public System.Nullable<decimal> ofm_monthly_province_base_funding_y1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_monthly_province_base_funding_y1");
            }
        }

        /// <summary>
        /// New Allocation Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_new_allocation_date")]
        public System.Nullable<System.DateTime> ofm_new_allocation_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_new_allocation_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_new_allocation_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ops_approver")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_ops_approver
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_ops_approver");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_ops_approver", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ops_approvername")]
        public string ofm_ops_approvername
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_ops_approver"))
                {
                    return this.FormattedValues["ofm_ops_approver"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ops_approveryominame")]
        public string ofm_ops_approveryominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_ops_approver"))
                {
                    return this.FormattedValues["ofm_ops_approver"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ops_manager_approval")]
        public virtual ofm_ops_manager_approval_status? ofm_ops_manager_approval
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_ops_manager_approval_status?)(EntityOptionSetEnum.GetEnum(this, "ofm_ops_manager_approval")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_ops_manager_approval", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ops_manager_approvalname")]
        public string ofm_ops_manager_approvalname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_ops_manager_approval"))
                {
                    return this.FormattedValues["ofm_ops_manager_approval"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ops_supervisor_approval_date")]
        public System.Nullable<System.DateTime> ofm_ops_supervisor_approval_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_ops_supervisor_approval_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_ops_supervisor_approval_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pcm_validated")]
        public System.Nullable<bool> ofm_pcm_validated
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_pcm_validated");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_pcm_validated", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pcm_validatedname")]
        public string ofm_pcm_validatedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_pcm_validated"))
                {
                    return this.FormattedValues["ofm_pcm_validated"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pdf_clause_text")]
        public string ofm_pdf_clause_text
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_pdf_clause_text");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_pdf_clause_text", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pdf_expense_authority_fullname")]
        public string ofm_pdf_expense_authority_fullname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_pdf_expense_authority_fullname");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pdf_facility_address")]
        public string ofm_pdf_facility_address
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_pdf_facility_address");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pdf_facility_address_list")]
        public string ofm_pdf_facility_address_list
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_pdf_facility_address_list");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_pdf_facility_address_list", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pdf_funding_end_date")]
        public string ofm_pdf_funding_end_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_pdf_funding_end_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_pdf_funding_end_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pdf_funding_start_date")]
        public string ofm_pdf_funding_start_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_pdf_funding_start_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_pdf_funding_start_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pdf_legal_description")]
        public string ofm_pdf_legal_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_pdf_legal_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_pdf_legal_description", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pdf_licence_number")]
        public string ofm_pdf_licence_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_pdf_licence_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_pdf_licence_number", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pdf_ministry_ea_approval_date")]
        public string ofm_pdf_ministry_ea_approval_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_pdf_ministry_ea_approval_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_pdf_ministry_ea_approval_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pdf_organization_address")]
        public string ofm_pdf_organization_address
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_pdf_organization_address");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pdf_organization_incorporation_number")]
        public string ofm_pdf_organization_incorporation_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_pdf_organization_incorporation_number");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pdf_organization_name")]
        public string ofm_pdf_organization_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_pdf_organization_name");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pdf_original_funding")]
        public string ofm_pdf_original_funding
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_pdf_original_funding");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_pdf_original_funding", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pdf_original_funding_start_date")]
        public string ofm_pdf_original_funding_start_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_pdf_original_funding_start_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_pdf_original_funding_start_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pdf_provider_fa_approval_date")]
        public string ofm_pdf_provider_fa_approval_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_pdf_provider_fa_approval_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_pdf_provider_fa_approval_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_previous_mods")]
        public string ofm_previous_mods
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_previous_mods");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_previous_mods", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_proj_total_monthly_base_funding_topup")]
        public System.Nullable<decimal> ofm_proj_total_monthly_base_funding_topup
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_proj_total_monthly_base_funding_topup");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_projected_monthly_parent_fees_y1")]
        public System.Nullable<decimal> ofm_projected_monthly_parent_fees_y1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_projected_monthly_parent_fees_y1");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_projected_total_monthly_base_funding_y1")]
        public System.Nullable<decimal> ofm_projected_total_monthly_base_funding_y1
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_projected_total_monthly_base_funding_y1");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_provider_approval_date")]
        public System.Nullable<System.DateTime> ofm_provider_approval_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_provider_approval_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_provider_approval_date", value);
            }
        }

        /// <summary>
        /// The associated contact
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_provider_approver")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_provider_approver
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_provider_approver");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_provider_approver", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_provider_approvername")]
        public string ofm_provider_approvername
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_provider_approver"))
                {
                    return this.FormattedValues["ofm_provider_approver"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_provider_approveryominame")]
        public string ofm_provider_approveryominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_provider_approver"))
                {
                    return this.FormattedValues["ofm_provider_approver"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_provider_decline_date")]
        public System.Nullable<System.DateTime> ofm_provider_decline_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_provider_decline_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_provider_decline_date", value);
            }
        }

        /// <summary>
        /// The associated contact
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_provider_decliner")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_provider_decliner
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_provider_decliner");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_provider_decliner", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_provider_declinername")]
        public string ofm_provider_declinername
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_provider_decliner"))
                {
                    return this.FormattedValues["ofm_provider_decliner"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_provider_declineryominame")]
        public string ofm_provider_declineryominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_provider_decliner"))
                {
                    return this.FormattedValues["ofm_provider_decliner"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The associated Rate Schedule
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_rate_schedule")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_rate_schedule
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_rate_schedule");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_rate_schedule", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_rate_schedulename")]
        public string ofm_rate_schedulename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_rate_schedule"))
                {
                    return this.FormattedValues["ofm_rate_schedule"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Retroactive Payment Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_retroactive_payment_date")]
        public System.Nullable<System.DateTime> ofm_retroactive_payment_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_retroactive_payment_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_retroactive_payment_date", value);
            }
        }

        /// <summary>
        /// Retroactive Payment Frequency
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_retroactive_payment_frequency")]
        public virtual ecc_payment_frequency? ofm_retroactive_payment_frequency
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_payment_frequency?)(EntityOptionSetEnum.GetEnum(this, "ofm_retroactive_payment_frequency")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_retroactive_payment_frequency", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_retroactive_payment_frequencyname")]
        public string ofm_retroactive_payment_frequencyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_retroactive_payment_frequency"))
                {
                    return this.FormattedValues["ofm_retroactive_payment_frequency"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_review_underway_banner")]
        public string ofm_review_underway_banner
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_review_underway_banner");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_review_underway_banner", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_sourceid")]
        public string ofm_sourceid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_sourceid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_sourceid", value);
            }
        }

        /// <summary>
        /// Funding Start Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_start_date")]
        public System.Nullable<System.DateTime> ofm_start_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_start_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_start_date", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_version_number")]
        public System.Nullable<int> ofm_version_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_version_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_version_number", value);
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_funding_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_funding_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_funding_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_funding_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the currency associated with the entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("transactioncurrencyid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
        public string transactioncurrencyidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("transactioncurrencyid"))
                {
                    return this.FormattedValues["transactioncurrencyid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N ofm_funding_Emails
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_funding_Emails")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Email> ofm_funding_Emails
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.Email>("ofm_funding_Emails", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.Email>("ofm_funding_Emails", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_funding_spaceallocation
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_funding_spaceallocation")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_space_allocation> ofm_funding_spaceallocation
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_space_allocation>("ofm_funding_spaceallocation", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_space_allocation>("ofm_funding_spaceallocation", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_funding_tracker
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_funding_tracker")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_progress_tracker> ofm_funding_tracker
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_progress_tracker>("ofm_funding_tracker", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_progress_tracker>("ofm_funding_tracker", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_integrationlog_funding
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_integrationlog_funding")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_integration_log> ofm_integrationlog_funding
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_integration_log>("ofm_integrationlog_funding", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_integration_log>("ofm_integrationlog_funding", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_payment_funding
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_payment_funding")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_payment> ofm_payment_funding
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_payment>("ofm_payment_funding", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_payment>("ofm_payment_funding", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_top_up_funding
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_top_up_funding")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_top_up_fund> ofm_top_up_funding
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_top_up_fund>("ofm_top_up_funding", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_top_up_fund>("ofm_top_up_funding", null, value);
            }
        }

        /// <summary>
        /// N:N ofm_funding_licencedetail
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_funding_licencedetail")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_licence_detail> ofm_funding_licencedetail
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_licence_detail>("ofm_funding_licencedetail", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_licence_detail>("ofm_funding_licencedetail", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_application_funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_application_funding")]
        public ECC.Core.DataContext.ofm_application ofm_application_funding
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_application_funding", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_application_funding", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_contact_funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_provider_approver")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_contact_funding")]
        public ECC.Core.DataContext.Contact ofm_contact_funding
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_contact_funding", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_contact_funding", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_contact_funding_decliner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_provider_decliner")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_contact_funding_decliner")]
        public ECC.Core.DataContext.Contact ofm_contact_funding_decliner
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_contact_funding_decliner", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_contact_funding_decliner", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_funding_facility_account
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_funding_facility_account")]
        public ECC.Core.DataContext.Account ofm_funding_facility_account
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Account>("ofm_funding_facility_account", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Account>("ofm_funding_facility_account", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_rateschedule_funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_rate_schedule")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_rateschedule_funding")]
        public ECC.Core.DataContext.ofm_rate_schedule ofm_rateschedule_funding
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_rate_schedule>("ofm_rateschedule_funding", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_rate_schedule>("ofm_rateschedule_funding", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_funding")]
        public ECC.Core.DataContext.Team team_ofm_funding
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_funding", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_funding(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_fundingid"] = base.Id;
                        break;
                    case "ofm_fundingid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// Funding Rate
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_funding_rate")]
    public partial class ofm_funding_rate : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_funding_rate entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string exchangerate = "exchangerate";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_caption = "ofm_caption";
            public const string ofm_funding_rateid = "ofm_funding_rateid";
            public const string Id = "ofm_funding_rateid";
            public const string ofm_nonhr_funding_envelope = "ofm_nonhr_funding_envelope";
            public const string ofm_nonhr_funding_envelopename = "ofm_nonhr_funding_envelopename";
            public const string ofm_ownership = "ofm_ownership";
            public const string ofm_ownershipname = "ofm_ownershipname";
            public const string ofm_rate = "ofm_rate";
            public const string ofm_rate_base = "ofm_rate_base";
            public const string ofm_rate_schedule = "ofm_rate_schedule";
            public const string ofm_rate_schedulename = "ofm_rate_schedulename";
            public const string ofm_rateschedule_fundingrate = "ofm_rateschedule_fundingrate";
            public const string ofm_spaces_max = "ofm_spaces_max";
            public const string ofm_spaces_min = "ofm_spaces_min";
            public const string ofm_step = "ofm_step";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_funding_rate = "team_ofm_funding_rate";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string transactioncurrencyid = "transactioncurrencyid";
            public const string transactioncurrencyidname = "transactioncurrencyidname";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_funding_rate(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_funding_rate(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_funding_rate(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ofm_nonhr_funding_envelope,ofm_ownership,ofm_step";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_funding_rate() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_funding_rateid";

        public const string PrimaryNameAttribute = "ofm_caption";

        public const string EntitySchemaName = "ofm_funding_rate";

        public const string EntityLogicalName = "ofm_funding_rate";

        public const string EntityLogicalCollectionName = "ofm_funding_rates";

        public const string EntitySetName = "ofm_funding_rates";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Exchange rate for the currency associated with the entity with respect to the base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
        public System.Nullable<decimal> exchangerate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The record ID 
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_caption")]
        public string ofm_caption
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_caption");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_caption", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_funding_rateid")]
        public System.Nullable<System.Guid> ofm_funding_rateid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_funding_rateid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_funding_rateid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_funding_rateid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_funding_rateid = value;
            }
        }

        /// <summary>
        /// Non-HR Envelope
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_nonhr_funding_envelope")]
        public virtual ecc_funding_envelope? ofm_nonhr_funding_envelope
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_funding_envelope?)(EntityOptionSetEnum.GetEnum(this, "ofm_nonhr_funding_envelope")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_nonhr_funding_envelope", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_nonhr_funding_envelopename")]
        public string ofm_nonhr_funding_envelopename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_nonhr_funding_envelope"))
                {
                    return this.FormattedValues["ofm_nonhr_funding_envelope"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Ownership
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ownership")]
        public virtual ecc_Ownership? ofm_ownership
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_Ownership?)(EntityOptionSetEnum.GetEnum(this, "ofm_ownership")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_ownership", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ownershipname")]
        public string ofm_ownershipname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_ownership"))
                {
                    return this.FormattedValues["ofm_ownership"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Rate ($/space)
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_rate")]
        public Microsoft.Xrm.Sdk.Money ofm_rate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_rate");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_rate", value);
            }
        }

        /// <summary>
        /// Value of the Rate ($/space) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_rate_base")]
        public Microsoft.Xrm.Sdk.Money ofm_rate_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_rate_base");
            }
        }

        /// <summary>
        /// The associated rate schedule
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_rate_schedule")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_rate_schedule
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_rate_schedule");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_rate_schedule", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_rate_schedulename")]
        public string ofm_rate_schedulename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_rate_schedule"))
                {
                    return this.FormattedValues["ofm_rate_schedule"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Max Spaces
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_spaces_max")]
        public System.Nullable<int> ofm_spaces_max
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_spaces_max");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_spaces_max", value);
            }
        }

        /// <summary>
        /// Min Spaces
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_spaces_min")]
        public System.Nullable<int> ofm_spaces_min
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_spaces_min");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_spaces_min", value);
            }
        }

        /// <summary>
        /// Integer Attribute
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_step")]
        public System.Nullable<int> ofm_step
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_step");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_step", value);
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Funding Rate
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_funding_rate_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_funding_rate_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Funding Rate
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_funding_rate_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_funding_rate_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the currency associated with the entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("transactioncurrencyid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
        public string transactioncurrencyidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("transactioncurrencyid"))
                {
                    return this.FormattedValues["transactioncurrencyid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 ofm_rateschedule_fundingrate
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_rate_schedule")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_rateschedule_fundingrate")]
        public ECC.Core.DataContext.ofm_rate_schedule ofm_rateschedule_fundingrate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_rate_schedule>("ofm_rateschedule_fundingrate", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_rate_schedule>("ofm_rateschedule_fundingrate", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_funding_rate
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_funding_rate")]
        public ECC.Core.DataContext.Team team_ofm_funding_rate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_funding_rate", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_funding_rate(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_funding_rateid"] = base.Id;
                        break;
                    case "ofm_funding_rateid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// OFM Intake Record
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_intake")]
    public partial class ofm_intake : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_intake entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_caption = "ofm_caption";
            public const string ofm_cohort = "ofm_cohort";
            public const string ofm_cohortid = "ofm_cohortid";
            public const string ofm_cohortidname = "ofm_cohortidname";
            public const string ofm_completed_date = "ofm_completed_date";
            public const string ofm_criteria = "ofm_criteria";
            public const string ofm_description = "ofm_description";
            public const string ofm_end_date = "ofm_end_date";
            public const string ofm_intake_facilityintake = "ofm_intake_facilityintake";
            public const string ofm_intake_number = "ofm_intake_number";
            public const string ofm_intake_query_type = "ofm_intake_query_type";
            public const string ofm_intake_query_typename = "ofm_intake_query_typename";
            public const string ofm_intake_type = "ofm_intake_type";
            public const string ofm_intake_typename = "ofm_intake_typename";
            public const string ofm_intakeid = "ofm_intakeid";
            public const string Id = "ofm_intakeid";
            public const string ofm_start_date = "ofm_start_date";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_intake = "team_ofm_intake";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_intake(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_intake(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_intake(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_intake() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_intakeid";

        public const string PrimaryNameAttribute = "ofm_caption";

        public const string EntitySchemaName = "ofm_intake";

        public const string EntityLogicalName = "ofm_intake";

        public const string EntityLogicalCollectionName = "ofm_intakes";

        public const string EntitySetName = "ofm_intakes";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// OFM Intake record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_caption")]
        public string ofm_caption
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_caption");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_caption", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cohort")]
        public string ofm_cohort
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_cohort");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_cohort", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cohortid")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_cohortid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_cohortid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_cohortid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cohortidname")]
        public string ofm_cohortidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_cohortid"))
                {
                    return this.FormattedValues["ofm_cohortid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Completed On
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_completed_date")]
        public System.Nullable<System.DateTime> ofm_completed_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_completed_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_completed_date", value);
            }
        }

        /// <summary>
        /// Criteria
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_criteria")]
        public string ofm_criteria
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_criteria");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_criteria", value);
            }
        }

        /// <summary>
        /// Description
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_description")]
        public string ofm_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_description", value);
            }
        }

        /// <summary>
        /// End Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_end_date")]
        public System.Nullable<System.DateTime> ofm_end_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_end_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_end_date", value);
            }
        }

        /// <summary>
        /// Intake Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_intake_number")]
        public System.Nullable<int> ofm_intake_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_intake_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_intake_number", value);
            }
        }

        /// <summary>
        /// Query Type
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_intake_query_type")]
        public virtual ecc_intake_query_type? ofm_intake_query_type
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_intake_query_type?)(EntityOptionSetEnum.GetEnum(this, "ofm_intake_query_type")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_intake_query_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_intake_query_typename")]
        public string ofm_intake_query_typename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_intake_query_type"))
                {
                    return this.FormattedValues["ofm_intake_query_type"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Intake Type
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_intake_type")]
        public virtual ecc_intake_type? ofm_intake_type
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_intake_type?)(EntityOptionSetEnum.GetEnum(this, "ofm_intake_type")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_intake_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_intake_typename")]
        public string ofm_intake_typename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_intake_type"))
                {
                    return this.FormattedValues["ofm_intake_type"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_intakeid")]
        public System.Nullable<System.Guid> ofm_intakeid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_intakeid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_intakeid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_intakeid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_intakeid = value;
            }
        }

        /// <summary>
        /// Start Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_start_date")]
        public System.Nullable<System.DateTime> ofm_start_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_start_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_start_date", value);
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Intake
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_intake_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_intake_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Intake
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_intake_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_intake_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N ofm_intake_facilityintake
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_intake_facilityintake")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_facility_intake> ofm_intake_facilityintake
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_facility_intake>("ofm_intake_facilityintake", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_facility_intake>("ofm_intake_facilityintake", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_intake
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_intake")]
        public ECC.Core.DataContext.Team team_ofm_intake
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_intake", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_intake(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_intakeid"] = base.Id;
                        break;
                    case "ofm_intakeid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// Integration Log
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_integration_log")]
    public partial class ofm_integration_log : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_integration_log entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_caption = "ofm_caption";
            public const string ofm_category = "ofm_category";
            public const string ofm_categoryname = "ofm_categoryname";
            public const string ofm_integration_logid = "ofm_integration_logid";
            public const string Id = "ofm_integration_logid";
            public const string ofm_integrationlog_application = "ofm_integrationlog_application";
            public const string ofm_integrationlog_funding = "ofm_integrationlog_funding";
            public const string ofm_integrationlog_provider = "ofm_integrationlog_provider";
            public const string ofm_message = "ofm_message";
            public const string ofm_regardingid = "ofm_regardingid";
            public const string ofm_regardingidname = "ofm_regardingidname";
            public const string ofm_regardingidyominame = "ofm_regardingidyominame";
            public const string ofm_service_name = "ofm_service_name";
            public const string ofm_subject = "ofm_subject";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_integration_log = "team_ofm_integration_log";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_integration_log(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_integration_log(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_integration_log(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_integration_log() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_integration_logid";

        public const string PrimaryNameAttribute = "ofm_caption";

        public const string EntitySchemaName = "ofm_integration_log";

        public const string EntityLogicalName = "ofm_integration_log";

        public const string EntityLogicalCollectionName = "ofm_integration_logs";

        public const string EntitySetName = "ofm_integration_logs";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// ID
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_caption")]
        public string ofm_caption
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_caption");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_caption", value);
            }
        }

        /// <summary>
        /// Category
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_category")]
        public virtual ecc_integration_log_category? ofm_category
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_integration_log_category?)(EntityOptionSetEnum.GetEnum(this, "ofm_category")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_category", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_categoryname")]
        public string ofm_categoryname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_category"))
                {
                    return this.FormattedValues["ofm_category"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_integration_logid")]
        public System.Nullable<System.Guid> ofm_integration_logid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_integration_logid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_integration_logid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_integration_logid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_integration_logid = value;
            }
        }

        /// <summary>
        /// Integration Response Details
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_message")]
        public string ofm_message
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_message");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_message", value);
            }
        }

        /// <summary>
        /// Regarding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_regardingid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_regardingid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_regardingid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingidname")]
        public string ofm_regardingidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_regardingid"))
                {
                    return this.FormattedValues["ofm_regardingid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingidyominame")]
        public string ofm_regardingidyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_regardingid"))
                {
                    return this.FormattedValues["ofm_regardingid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// External Service
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_service_name")]
        public string ofm_service_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_service_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_service_name", value);
            }
        }

        /// <summary>
        /// Subject
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_subject")]
        public string ofm_subject
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_subject");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_subject", value);
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Integration Log
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_integration_log_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_integration_log_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Integration Log
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_integration_log_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_integration_log_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 ofm_integrationlog_application
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_integrationlog_application")]
        public ECC.Core.DataContext.ofm_application ofm_integrationlog_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_integrationlog_application", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_integrationlog_application", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_integrationlog_funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_integrationlog_funding")]
        public ECC.Core.DataContext.ofm_funding ofm_integrationlog_funding
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_funding>("ofm_integrationlog_funding", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_funding>("ofm_integrationlog_funding", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_integrationlog_provider
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_integrationlog_provider")]
        public ECC.Core.DataContext.Account ofm_integrationlog_provider
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Account>("ofm_integrationlog_provider", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Account>("ofm_integrationlog_provider", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_integration_log
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_integration_log")]
        public ECC.Core.DataContext.Team team_ofm_integration_log
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_integration_log", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_integration_log(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_integration_logid"] = base.Id;
                        break;
                    case "ofm_integration_logid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// Facility Licence
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_licence")]
    public partial class ofm_licence : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_licence entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string exchangerate = "exchangerate";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_accb_providerid = "ofm_accb_providerid";
            public const string ofm_acility_id_historical = "ofm_acility_id_historical";
            public const string ofm_ccof_facilityid = "ofm_ccof_facilityid";
            public const string ofm_ccof_organizationid = "ofm_ccof_organizationid";
            public const string ofm_end_date = "ofm_end_date";
            public const string ofm_facility = "ofm_facility";
            public const string ofm_facility_licence = "ofm_facility_licence";
            public const string ofm_facilityname = "ofm_facilityname";
            public const string ofm_facilityyominame = "ofm_facilityyominame";
            public const string ofm_health_authority = "ofm_health_authority";
            public const string ofm_health_authorityname = "ofm_health_authorityname";
            public const string ofm_Licence = "ofm_licence";
            public const string ofm_licence_licencedetail = "ofm_licence_licencedetail";
            public const string ofm_licenceid = "ofm_licenceid";
            public const string Id = "ofm_licenceid";
            public const string ofm_review_underway_banner = "ofm_review_underway_banner";
            public const string ofm_sourceid = "ofm_sourceid";
            public const string ofm_start_date = "ofm_start_date";
            public const string ofm_tdad_funding_agreement_number = "ofm_tdad_funding_agreement_number";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_licence = "team_ofm_licence";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string transactioncurrencyid = "transactioncurrencyid";
            public const string transactioncurrencyidname = "transactioncurrencyidname";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_licence(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_licence(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_licence(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ofm_sourceid";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_licence() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_licenceid";

        public const string PrimaryNameAttribute = "ofm_licence";

        public const string EntitySchemaName = "ofm_licence";

        public const string EntityLogicalName = "ofm_licence";

        public const string EntityLogicalCollectionName = "ofm_licences";

        public const string EntitySetName = "ofm_licences";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Exchange rate for the currency associated with the entity with respect to the base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
        public System.Nullable<decimal> exchangerate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_accb_providerid")]
        public string ofm_accb_providerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_accb_providerid");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_acility_id_historical")]
        public string ofm_acility_id_historical
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_acility_id_historical");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_acility_id_historical", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ccof_facilityid")]
        public string ofm_ccof_facilityid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_ccof_facilityid");
            }
        }

        /// <summary>
        /// CCOF Organization ID
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ccof_organizationid")]
        public string ofm_ccof_organizationid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_ccof_organizationid");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_end_date")]
        public System.Nullable<System.DateTime> ofm_end_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_end_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_end_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_facility
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_facility");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_facility", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilityname")]
        public string ofm_facilityname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_facility"))
                {
                    return this.FormattedValues["ofm_facility"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilityyominame")]
        public string ofm_facilityyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_facility"))
                {
                    return this.FormattedValues["ofm_facility"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Health Authority
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_health_authority")]
        public virtual ecc_health_authorities? ofm_health_authority
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_health_authorities?)(EntityOptionSetEnum.GetEnum(this, "ofm_health_authority")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_health_authority", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_health_authorityname")]
        public string ofm_health_authorityname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_health_authority"))
                {
                    return this.FormattedValues["ofm_health_authority"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Facility Licence Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence")]
        public string ofm_Licence
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_licence");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_licence", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licenceid")]
        public System.Nullable<System.Guid> ofm_licenceid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_licenceid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_licenceid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licenceid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_licenceid = value;
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_review_underway_banner")]
        public string ofm_review_underway_banner
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_review_underway_banner");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_review_underway_banner", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_sourceid")]
        public string ofm_sourceid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_sourceid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_sourceid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_start_date")]
        public System.Nullable<System.DateTime> ofm_start_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_start_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_start_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_tdad_funding_agreement_number")]
        public string ofm_tdad_funding_agreement_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_tdad_funding_agreement_number");
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Licence
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_licence_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_licence_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Licence
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_licence_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_licence_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the currency associated with the entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("transactioncurrencyid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
        public string transactioncurrencyidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("transactioncurrencyid"))
                {
                    return this.FormattedValues["transactioncurrencyid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N ofm_licence_licencedetail
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_licence_licencedetail")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_licence_detail> ofm_licence_licencedetail
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_licence_detail>("ofm_licence_licencedetail", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_licence_detail>("ofm_licence_licencedetail", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_facility_licence
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_facility_licence")]
        public ECC.Core.DataContext.Account ofm_facility_licence
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Account>("ofm_facility_licence", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Account>("ofm_facility_licence", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_licence
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_licence")]
        public ECC.Core.DataContext.Team team_ofm_licence
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_licence", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_licence(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_licenceid"] = base.Id;
                        break;
                    case "ofm_licenceid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// Service Delivery Details on a licence record
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_licence_detail")]
    public partial class ofm_licence_detail : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_licence_detail entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_apply_room_split_condition = "ofm_apply_room_split_condition";
            public const string ofm_apply_room_split_conditionname = "ofm_apply_room_split_conditionname";
            public const string ofm_care_type = "ofm_care_type";
            public const string ofm_care_typename = "ofm_care_typename";
            public const string ofm_end_date = "ofm_end_date";
            public const string ofm_enrolled_spaces = "ofm_enrolled_spaces";
            public const string ofm_funding_licencedetail = "ofm_funding_licencedetail";
            public const string ofm_licence = "ofm_licence";
            public const string ofm_Licence_Detail = "ofm_licence_detail";
            public const string ofm_licence_detailid = "ofm_licence_detailid";
            public const string Id = "ofm_licence_detailid";
            public const string ofm_licence_licencedetail = "ofm_licence_licencedetail";
            public const string ofm_licence_spaces = "ofm_licence_spaces";
            public const string ofm_licence_type = "ofm_licence_type";
            public const string ofm_licence_typename = "ofm_licence_typename";
            public const string ofm_licencename = "ofm_licencename";
            public const string ofm_operation_from_time = "ofm_operation_from_time";
            public const string ofm_operation_hours_from = "ofm_operation_hours_from";
            public const string ofm_operation_hours_to = "ofm_operation_hours_to";
            public const string ofm_operational_spaces = "ofm_operational_spaces";
            public const string ofm_operations_to_time = "ofm_operations_to_time";
            public const string ofm_overnight_care = "ofm_overnight_care";
            public const string ofm_overnight_carename = "ofm_overnight_carename";
            public const string ofm_pdf_licence_number = "ofm_pdf_licence_number";
            public const string ofm_room_split_details = "ofm_room_split_details";
            public const string ofm_sourceid = "ofm_sourceid";
            public const string ofm_start_date = "ofm_start_date";
            public const string ofm_version_number = "ofm_version_number";
            public const string ofm_week_days = "ofm_week_days";
            public const string ofm_week_days_text = "ofm_week_days_text";
            public const string ofm_week_daysname = "ofm_week_daysname";
            public const string ofm_weeks_in_operation = "ofm_weeks_in_operation";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_licence_detail = "team_ofm_licence_detail";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_licence_detail(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_licence_detail(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_licence_detail(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ofm_sourceid";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_licence_detail() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_licence_detailid";

        public const string PrimaryNameAttribute = "ofm_licence_detail";

        public const string EntitySchemaName = "ofm_licence_detail";

        public const string EntityLogicalName = "ofm_licence_detail";

        public const string EntityLogicalCollectionName = "ofm_licence_details";

        public const string EntitySetName = "ofm_licence_details";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Boolean Attribute
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_apply_room_split_condition")]
        public System.Nullable<bool> ofm_apply_room_split_condition
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_apply_room_split_condition");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_apply_room_split_condition", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_apply_room_split_conditionname")]
        public string ofm_apply_room_split_conditionname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_apply_room_split_condition"))
                {
                    return this.FormattedValues["ofm_apply_room_split_condition"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Care Type
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_care_type")]
        public virtual ecc_care_types? ofm_care_type
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_care_types?)(EntityOptionSetEnum.GetEnum(this, "ofm_care_type")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_care_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_care_typename")]
        public string ofm_care_typename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_care_type"))
                {
                    return this.FormattedValues["ofm_care_type"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// End Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_end_date")]
        public System.Nullable<System.DateTime> ofm_end_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_end_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_end_date", value);
            }
        }

        /// <summary>
        /// Enrolled Spaces
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_enrolled_spaces")]
        public System.Nullable<int> ofm_enrolled_spaces
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_enrolled_spaces");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_enrolled_spaces", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_licence
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_licence");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_licence", value);
            }
        }

        /// <summary>
        /// Service Delivery Details
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_detail")]
        public string ofm_Licence_Detail
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_licence_detail");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_licence_detail", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_detailid")]
        public System.Nullable<System.Guid> ofm_licence_detailid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_licence_detailid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_licence_detailid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_detailid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_licence_detailid = value;
            }
        }

        /// <summary>
        /// Licensed Spaces
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_spaces")]
        public System.Nullable<int> ofm_licence_spaces
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_licence_spaces");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_licence_spaces", value);
            }
        }

        /// <summary>
        /// Licence Type
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_type")]
        public virtual ecc_licence_type? ofm_licence_type
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_licence_type?)(EntityOptionSetEnum.GetEnum(this, "ofm_licence_type")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_licence_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_typename")]
        public string ofm_licence_typename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_licence_type"))
                {
                    return this.FormattedValues["ofm_licence_type"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licencename")]
        public string ofm_licencename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_licence"))
                {
                    return this.FormattedValues["ofm_licence"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Operation From Time
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_operation_from_time")]
        public string ofm_operation_from_time
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_operation_from_time");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_operation_from_time", value);
            }
        }

        /// <summary>
        /// Hours of Operation From
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_operation_hours_from")]
        public System.Nullable<System.DateTime> ofm_operation_hours_from
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_operation_hours_from");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_operation_hours_from", value);
            }
        }

        /// <summary>
        /// Hours of Operation To
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_operation_hours_to")]
        public System.Nullable<System.DateTime> ofm_operation_hours_to
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_operation_hours_to");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_operation_hours_to", value);
            }
        }

        /// <summary>
        /// Operational Spaces
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_operational_spaces")]
        public System.Nullable<int> ofm_operational_spaces
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_operational_spaces");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_operational_spaces", value);
            }
        }

        /// <summary>
        /// Operations To Time
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_operations_to_time")]
        public string ofm_operations_to_time
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_operations_to_time");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_operations_to_time", value);
            }
        }

        /// <summary>
        /// Overnight Care
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_overnight_care")]
        public virtual ecc_ynempty? ofm_overnight_care
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_overnight_care")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_overnight_care", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_overnight_carename")]
        public string ofm_overnight_carename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_overnight_care"))
                {
                    return this.FormattedValues["ofm_overnight_care"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pdf_licence_number")]
        public string ofm_pdf_licence_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_pdf_licence_number");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_room_split_details")]
        public string ofm_room_split_details
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_room_split_details");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_room_split_details", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_sourceid")]
        public string ofm_sourceid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_sourceid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_sourceid", value);
            }
        }

        /// <summary>
        /// Start Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_start_date")]
        public System.Nullable<System.DateTime> ofm_start_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_start_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_start_date", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_version_number")]
        public System.Nullable<int> ofm_version_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_version_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_version_number", value);
            }
        }

        /// <summary>
        /// Days of Week
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_week_days")]
        public virtual System.Collections.Generic.IEnumerable<ecc_weekday_options> ofm_week_days
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return EntityOptionSetEnum.GetMultiEnum<ecc_weekday_options>(this, "ofm_week_days");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_week_days", EntityOptionSetEnum.GetMultiEnum(this, "ofm_week_days", value));
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_week_days_text")]
        public string ofm_week_days_text
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_week_days_text");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_week_days_text", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_week_daysname")]
        public string ofm_week_daysname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_week_days"))
                {
                    return this.FormattedValues["ofm_week_days"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Weeks in Operation
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_weeks_in_operation")]
        public System.Nullable<int> ofm_weeks_in_operation
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_weeks_in_operation");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_weeks_in_operation", value);
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Licence Details
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_licence_detail_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_licence_detail_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Licence Details
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_licence_detail_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_licence_detail_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:N ofm_funding_licencedetail
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_funding_licencedetail")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_funding> ofm_funding_licencedetail
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_funding>("ofm_funding_licencedetail", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_funding>("ofm_funding_licencedetail", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_licence_licencedetail
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_licence_licencedetail")]
        public ECC.Core.DataContext.ofm_licence ofm_licence_licencedetail
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_licence>("ofm_licence_licencedetail", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_licence>("ofm_licence_licencedetail", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_licence_detail
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_licence_detail")]
        public ECC.Core.DataContext.Team team_ofm_licence_detail
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_licence_detail", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_licence_detail(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_licence_detailid"] = base.Id;
                        break;
                    case "ofm_licence_detailid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// Represents payment records that must be submitted to CAS to trigger payments to contractors.
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_payment")]
    public partial class ofm_payment : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_payment entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string exchangerate = "exchangerate";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_amount = "ofm_amount";
            public const string ofm_amount_base = "ofm_amount_base";
            public const string ofm_application = "ofm_application";
            public const string ofm_applicationname = "ofm_applicationname";
            public const string ofm_batch_number = "ofm_batch_number";
            public const string ofm_cas_response = "ofm_cas_response";
            public const string ofm_description = "ofm_description";
            public const string ofm_effective_date = "ofm_effective_date";
            public const string ofm_fa_year = "ofm_fa_year";
            public const string ofm_facility = "ofm_facility";
            public const string ofm_facilityname = "ofm_facilityname";
            public const string ofm_facilityyominame = "ofm_facilityyominame";
            public const string ofm_fayear = "ofm_fayear";
            public const string ofm_fiscal_year = "ofm_fiscal_year";
            public const string ofm_fiscal_yearname = "ofm_fiscal_yearname";
            public const string ofm_fiscalyear_payment = "ofm_fiscalyear_payment";
            public const string ofm_funding = "ofm_funding";
            public const string ofm_fundingname = "ofm_fundingname";
            public const string ofm_invoice_date = "ofm_invoice_date";
            public const string ofm_invoice_line_number = "ofm_invoice_line_number";
            public const string ofm_invoice_number = "ofm_invoice_number";
            public const string ofm_invoice_received_date = "ofm_invoice_received_date";
            public const string ofm_name = "ofm_name";
            public const string ofm_organization = "ofm_organization";
            public const string ofm_organization_payment = "ofm_organization_payment";
            public const string ofm_organizationname = "ofm_organizationname";
            public const string ofm_organizationyominame = "ofm_organizationyominame";
            public const string ofm_payment_allowance = "ofm_payment_allowance";
            public const string ofm_payment_application = "ofm_payment_application";
            public const string ofm_payment_expense = "ofm_payment_expense";
            public const string ofm_payment_facility_account = "ofm_payment_facility_account";
            public const string ofm_payment_funding = "ofm_payment_funding";
            public const string ofm_payment_manual_review = "ofm_payment_manual_review";
            public const string ofm_payment_manual_reviewname = "ofm_payment_manual_reviewname";
            public const string ofm_payment_method = "ofm_payment_method";
            public const string ofm_payment_methodname = "ofm_payment_methodname";
            public const string ofm_payment_top_up_fund = "ofm_payment_top_up_fund";
            public const string ofm_payment_type = "ofm_payment_type";
            public const string ofm_payment_typename = "ofm_payment_typename";
            public const string ofm_paymentid = "ofm_paymentid";
            public const string Id = "ofm_paymentid";
            public const string ofm_regardingid = "ofm_regardingid";
            public const string ofm_regardingidname = "ofm_regardingidname";
            public const string ofm_regardingidyominame = "ofm_regardingidyominame";
            public const string ofm_remittance_message = "ofm_remittance_message";
            public const string ofm_revised_effective_date = "ofm_revised_effective_date";
            public const string ofm_revised_invoice_date = "ofm_revised_invoice_date";
            public const string ofm_revised_invoice_received_date = "ofm_revised_invoice_received_date";
            public const string ofm_siteid = "ofm_siteid";
            public const string ofm_sourceid = "ofm_sourceid";
            public const string ofm_supplierid = "ofm_supplierid";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_payment = "team_ofm_payment";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string transactioncurrencyid = "transactioncurrencyid";
            public const string transactioncurrencyidname = "transactioncurrencyidname";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_payment(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_payment(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_payment(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ofm_funding,ofm_invoice_line_number|ofm_name|ofm_sourceid";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_payment() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_paymentid";

        public const string PrimaryNameAttribute = "ofm_name";

        public const string EntitySchemaName = "ofm_payment";

        public const string EntityLogicalName = "ofm_payment";

        public const string EntityLogicalCollectionName = "ofm_payments";

        public const string EntitySetName = "ofm_payments";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Exchange rate for the currency associated with the entity with respect to the base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
        public System.Nullable<decimal> exchangerate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Amount
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_amount")]
        public Microsoft.Xrm.Sdk.Money ofm_amount
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_amount");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_amount", value);
            }
        }

        /// <summary>
        /// Value of the Amount in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_amount_base")]
        public Microsoft.Xrm.Sdk.Money ofm_amount_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_amount_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_application");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_application", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_applicationname")]
        public string ofm_applicationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_application"))
                {
                    return this.FormattedValues["ofm_application"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_batch_number")]
        public string ofm_batch_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_batch_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_batch_number", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cas_response")]
        public string ofm_cas_response
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_cas_response");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_cas_response", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_description")]
        public string ofm_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_description", value);
            }
        }

        /// <summary>
        /// Effective Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_effective_date")]
        public System.Nullable<System.DateTime> ofm_effective_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_effective_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_effective_date", value);
            }
        }

        /// <summary>
        /// The funding year number (1, 2 or 3). This is an auto calculated field based on the funding's end date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fa_year")]
        public System.Nullable<decimal> ofm_fa_year
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_fa_year");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_facility
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_facility");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_facility", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilityname")]
        public string ofm_facilityname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_facility"))
                {
                    return this.FormattedValues["ofm_facility"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilityyominame")]
        public string ofm_facilityyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_facility"))
                {
                    return this.FormattedValues["ofm_facility"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fayear")]
        public string ofm_fayear
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_fayear");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_fayear", value);
            }
        }

        /// <summary>
        /// The associated Fiscal Year record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fiscal_year")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_fiscal_year
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_fiscal_year");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_fiscal_year", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fiscal_yearname")]
        public string ofm_fiscal_yearname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_fiscal_year"))
                {
                    return this.FormattedValues["ofm_fiscal_year"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_funding")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_funding
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_funding");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_funding", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fundingname")]
        public string ofm_fundingname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_funding"))
                {
                    return this.FormattedValues["ofm_funding"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Invoice Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_invoice_date")]
        public System.Nullable<System.DateTime> ofm_invoice_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_invoice_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_invoice_date", value);
            }
        }

        /// <summary>
        /// Invoice Line #
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_invoice_line_number")]
        public System.Nullable<int> ofm_invoice_line_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_invoice_line_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_invoice_line_number", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_invoice_number")]
        public string ofm_invoice_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_invoice_number");
            }
        }

        /// <summary>
        /// Invoice Received Date. Typically, 4 days after the Effective Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_invoice_received_date")]
        public System.Nullable<System.DateTime> ofm_invoice_received_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_invoice_received_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_invoice_received_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
        public string ofm_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_name", value);
            }
        }

        /// <summary>
        /// The associated Organization record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_organization")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_organization
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_organization");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_organization", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_organizationname")]
        public string ofm_organizationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_organization"))
                {
                    return this.FormattedValues["ofm_organization"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_organizationyominame")]
        public string ofm_organizationyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_organization"))
                {
                    return this.FormattedValues["ofm_organization"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Manual Review?
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_payment_manual_review")]
        public System.Nullable<bool> ofm_payment_manual_review
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_payment_manual_review");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_payment_manual_review", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_payment_manual_reviewname")]
        public string ofm_payment_manual_reviewname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_payment_manual_review"))
                {
                    return this.FormattedValues["ofm_payment_manual_review"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_payment_method")]
        public virtual ecc_payment_method? ofm_payment_method
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_payment_method?)(EntityOptionSetEnum.GetEnum(this, "ofm_payment_method")));
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_payment_methodname")]
        public string ofm_payment_methodname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_payment_method"))
                {
                    return this.FormattedValues["ofm_payment_method"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Payment Type
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_payment_type")]
        public virtual ecc_payment_type? ofm_payment_type
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_payment_type?)(EntityOptionSetEnum.GetEnum(this, "ofm_payment_type")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_payment_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_payment_typename")]
        public string ofm_payment_typename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_payment_type"))
                {
                    return this.FormattedValues["ofm_payment_type"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_paymentid")]
        public System.Nullable<System.Guid> ofm_paymentid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_paymentid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_paymentid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_paymentid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_paymentid = value;
            }
        }

        /// <summary>
        /// Regarding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_regardingid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_regardingid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_regardingid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingidname")]
        public string ofm_regardingidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_regardingid"))
                {
                    return this.FormattedValues["ofm_regardingid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingidyominame")]
        public string ofm_regardingidyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_regardingid"))
                {
                    return this.FormattedValues["ofm_regardingid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Remittance Message
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_remittance_message")]
        public string ofm_remittance_message
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_remittance_message");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_remittance_message", value);
            }
        }

        /// <summary>
        /// Revised Effective Date. Typically, 2 days after Invoice Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_revised_effective_date")]
        public System.Nullable<System.DateTime> ofm_revised_effective_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_revised_effective_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_revised_effective_date", value);
            }
        }

        /// <summary>
        /// Revised Invoice Date. CFS only accepts working days (No weekends or BC holidays)
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_revised_invoice_date")]
        public System.Nullable<System.DateTime> ofm_revised_invoice_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_revised_invoice_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_revised_invoice_date", value);
            }
        }

        /// <summary>
        /// Revised Invoice Received Date. Typically, 4 days after the Effective Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_revised_invoice_received_date")]
        public System.Nullable<System.DateTime> ofm_revised_invoice_received_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_revised_invoice_received_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_revised_invoice_received_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_siteid")]
        public string ofm_siteid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_siteid");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_sourceid")]
        public string ofm_sourceid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_sourceid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_sourceid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supplierid")]
        public string ofm_supplierid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_supplierid");
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Payment
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_payment_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_payment_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Payment
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_payment_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_payment_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the currency associated with the entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("transactioncurrencyid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
        public string transactioncurrencyidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("transactioncurrencyid"))
                {
                    return this.FormattedValues["transactioncurrencyid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 ofm_fiscalyear_payment
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fiscal_year")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_fiscalyear_payment")]
        public ECC.Core.DataContext.ofm_fiscal_year ofm_fiscalyear_payment
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_fiscal_year>("ofm_fiscalyear_payment", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_fiscal_year>("ofm_fiscalyear_payment", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_organization_payment
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_organization")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_organization_payment")]
        public ECC.Core.DataContext.Account ofm_organization_payment
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Account>("ofm_organization_payment", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Account>("ofm_organization_payment", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_payment_allowance
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_payment_allowance")]
        public ECC.Core.DataContext.ofm_allowance ofm_payment_allowance
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_allowance>("ofm_payment_allowance", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_allowance>("ofm_payment_allowance", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_payment_application
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_payment_application")]
        public ECC.Core.DataContext.ofm_application ofm_payment_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_payment_application", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_payment_application", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_payment_expense
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_payment_expense")]
        public ECC.Core.DataContext.ofm_expense ofm_payment_expense
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_expense>("ofm_payment_expense", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_expense>("ofm_payment_expense", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_payment_facility_account
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_payment_facility_account")]
        public ECC.Core.DataContext.Account ofm_payment_facility_account
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Account>("ofm_payment_facility_account", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Account>("ofm_payment_facility_account", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_payment_funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_funding")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_payment_funding")]
        public ECC.Core.DataContext.ofm_funding ofm_payment_funding
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_funding>("ofm_payment_funding", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_funding>("ofm_payment_funding", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_payment_top_up_fund
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_payment_top_up_fund")]
        public ECC.Core.DataContext.ofm_top_up_fund ofm_payment_top_up_fund
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_top_up_fund>("ofm_payment_top_up_fund", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_top_up_fund>("ofm_payment_top_up_fund", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_payment
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_payment")]
        public ECC.Core.DataContext.Team team_ofm_payment
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_payment", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_payment(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_paymentid"] = base.Id;
                        break;
                    case "ofm_paymentid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_payment_file_exchange")]
    public partial class ofm_payment_file_exchange : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_payment_file_exchange entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_batch_number = "ofm_batch_number";
            public const string ofm_feedback_document_memo = "ofm_feedback_document_memo";
            public const string ofm_feedback_document_memo_name = "ofm_feedback_document_memo_name";
            public const string ofm_feedback_file_name = "ofm_feedback_file_name";
            public const string ofm_fiscal_year = "ofm_fiscal_year";
            public const string ofm_fiscal_year_payment_file_exchange = "ofm_fiscal_year_payment_file_exchange";
            public const string ofm_fiscal_yearname = "ofm_fiscal_yearname";
            public const string ofm_input_document_memo = "ofm_input_document_memo";
            public const string ofm_input_document_memo_name = "ofm_input_document_memo_name";
            public const string ofm_input_file_name = "ofm_input_file_name";
            public const string ofm_name = "ofm_name";
            public const string ofm_oracle_batch_name = "ofm_oracle_batch_name";
            public const string ofm_payment_file_exchangeid = "ofm_payment_file_exchangeid";
            public const string Id = "ofm_payment_file_exchangeid";
            public const string ofm_submitted_on = "ofm_submitted_on";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_payment_file_exchange = "team_ofm_payment_file_exchange";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_payment_file_exchange(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_payment_file_exchange(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_payment_file_exchange(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_payment_file_exchange() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_payment_file_exchangeid";

        public const string PrimaryNameAttribute = "ofm_name";

        public const string EntitySchemaName = "ofm_payment_file_exchange";

        public const string EntityLogicalName = "ofm_payment_file_exchange";

        public const string EntityLogicalCollectionName = "ofm_payment_file_exchanges";

        public const string EntitySetName = "ofm_payment_file_exchanges";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Last CGI Batch Number for the current fiscal
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_batch_number")]
        public string ofm_batch_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_batch_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_batch_number", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_feedback_document_memo")]
        public object ofm_feedback_document_memo
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<object>("ofm_feedback_document_memo");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_feedback_document_memo_name")]
        public string ofm_feedback_document_memo_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_feedback_document_memo"))
                {
                    return this.FormattedValues["ofm_feedback_document_memo"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_feedback_file_name")]
        public string ofm_feedback_file_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_feedback_file_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_feedback_file_name", value);
            }
        }

        /// <summary>
        /// The associated Fiscal Year record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fiscal_year")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_fiscal_year
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_fiscal_year");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_fiscal_year", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fiscal_yearname")]
        public string ofm_fiscal_yearname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_fiscal_year"))
                {
                    return this.FormattedValues["ofm_fiscal_year"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_input_document_memo")]
        public object ofm_input_document_memo
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<object>("ofm_input_document_memo");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_input_document_memo_name")]
        public string ofm_input_document_memo_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_input_document_memo"))
                {
                    return this.FormattedValues["ofm_input_document_memo"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_input_file_name")]
        public string ofm_input_file_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_input_file_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_input_file_name", value);
            }
        }

        /// <summary>
        /// The name of the custom entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
        public string ofm_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_name", value);
            }
        }

        /// <summary>
        /// Last Oracle Batch Number for the current fiscal year. 
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_oracle_batch_name")]
        public string ofm_oracle_batch_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_oracle_batch_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_oracle_batch_name", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_payment_file_exchangeid")]
        public System.Nullable<System.Guid> ofm_payment_file_exchangeid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_payment_file_exchangeid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_payment_file_exchangeid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_payment_file_exchangeid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_payment_file_exchangeid = value;
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_submitted_on")]
        public System.Nullable<System.DateTime> ofm_submitted_on
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_submitted_on");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_submitted_on", value);
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Payment File Exchange
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_payment_file_exchange_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_payment_file_exchange_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Payment File Exchange
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_payment_file_exchange_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_payment_file_exchange_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 ofm_fiscal_year_payment_file_exchange
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fiscal_year")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_fiscal_year_payment_file_exchange")]
        public ECC.Core.DataContext.ofm_fiscal_year ofm_fiscal_year_payment_file_exchange
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_fiscal_year>("ofm_fiscal_year_payment_file_exchange", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_fiscal_year>("ofm_fiscal_year_payment_file_exchange", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_payment_file_exchange
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_payment_file_exchange")]
        public ECC.Core.DataContext.Team team_ofm_payment_file_exchange
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_payment_file_exchange", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_payment_file_exchange(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_payment_file_exchangeid"] = base.Id;
                        break;
                    case "ofm_payment_file_exchangeid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// OFM Payment Request Record
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_payment_request")]
    public partial class ofm_payment_request : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_payment_request entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_application = "ofm_application";
            public const string ofm_application_paymentrequest = "ofm_application_paymentrequest";
            public const string ofm_applicationname = "ofm_applicationname";
            public const string ofm_caption = "ofm_caption";
            public const string ofm_description = "ofm_description";
            public const string ofm_effective_date = "ofm_effective_date";
            public const string ofm_invoice_date = "ofm_invoice_date";
            public const string ofm_invoice_line_number = "ofm_invoice_line_number";
            public const string ofm_invoice_number = "ofm_invoice_number";
            public const string ofm_invoice_received_date = "ofm_invoice_received_date";
            public const string ofm_payment_method = "ofm_payment_method";
            public const string ofm_payment_requestid = "ofm_payment_requestid";
            public const string Id = "ofm_payment_requestid";
            public const string ofm_remittance_message = "ofm_remittance_message";
            public const string ofm_revised_effective_date = "ofm_revised_effective_date";
            public const string ofm_revised_invoice_date = "ofm_revised_invoice_date";
            public const string ofm_revised_invoice_received_date = "ofm_revised_invoice_received_date";
            public const string ofm_siteid = "ofm_siteid";
            public const string ofm_vendor_number = "ofm_vendor_number";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_payment_request = "team_ofm_payment_request";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_payment_request(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_payment_request(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_payment_request(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_payment_request() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_payment_requestid";

        public const string PrimaryNameAttribute = "ofm_caption";

        public const string EntitySchemaName = "ofm_payment_request";

        public const string EntityLogicalName = "ofm_payment_request";

        public const string EntityLogicalCollectionName = "ofm_payment_requests";

        public const string EntitySetName = "ofm_payment_requests";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The associated application record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_application");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_application", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_applicationname")]
        public string ofm_applicationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_application"))
                {
                    return this.FormattedValues["ofm_application"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// OFM Payment Request record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_caption")]
        public string ofm_caption
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_caption");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_caption", value);
            }
        }

        /// <summary>
        /// Description
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_description")]
        public string ofm_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_description", value);
            }
        }

        /// <summary>
        /// Effective Date. Typically, 2 days after Invoice Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_effective_date")]
        public System.Nullable<System.DateTime> ofm_effective_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_effective_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_effective_date", value);
            }
        }

        /// <summary>
        /// Invoice Date. CFS only accepts working days (No weekends or BC holidays)
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_invoice_date")]
        public System.Nullable<System.DateTime> ofm_invoice_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_invoice_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_invoice_date", value);
            }
        }

        /// <summary>
        /// Invoice Line #
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_invoice_line_number")]
        public System.Nullable<int> ofm_invoice_line_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_invoice_line_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_invoice_line_number", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_invoice_number")]
        public string ofm_invoice_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_invoice_number");
            }
        }

        /// <summary>
        /// Invoice Received Date. Typically, 4 days after the Effective Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_invoice_received_date")]
        public System.Nullable<System.DateTime> ofm_invoice_received_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_invoice_received_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_invoice_received_date", value);
            }
        }

        /// <summary>
        /// Payment Method
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_payment_method")]
        public string ofm_payment_method
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_payment_method");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_payment_method", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_payment_requestid")]
        public System.Nullable<System.Guid> ofm_payment_requestid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_payment_requestid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_payment_requestid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_payment_requestid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_payment_requestid = value;
            }
        }

        /// <summary>
        /// Remittance Message
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_remittance_message")]
        public string ofm_remittance_message
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_remittance_message");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_remittance_message", value);
            }
        }

        /// <summary>
        /// Revised Effective Date. Typically, 2 days after Invoice Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_revised_effective_date")]
        public System.Nullable<System.DateTime> ofm_revised_effective_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_revised_effective_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_revised_effective_date", value);
            }
        }

        /// <summary>
        /// Revised Invoice Date. CFS only accepts working days (No weekends or BC holidays)
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_revised_invoice_date")]
        public System.Nullable<System.DateTime> ofm_revised_invoice_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_revised_invoice_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_revised_invoice_date", value);
            }
        }

        /// <summary>
        /// Revised Invoice Received Date. Typically, 4 days after the Effective Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_revised_invoice_received_date")]
        public System.Nullable<System.DateTime> ofm_revised_invoice_received_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_revised_invoice_received_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_revised_invoice_received_date", value);
            }
        }

        /// <summary>
        /// Supplier Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_siteid")]
        public string ofm_siteid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_siteid");
            }
        }

        /// <summary>
        /// Vendor Number
        ///
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_vendor_number")]
        public string ofm_vendor_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_vendor_number");
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Payment Request
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_payment_request_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_payment_request_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Payment Request
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_payment_request_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_payment_request_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 ofm_application_paymentrequest
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_application_paymentrequest")]
        public ECC.Core.DataContext.ofm_application ofm_application_paymentrequest
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_application_paymentrequest", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_application_paymentrequest", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_payment_request
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_payment_request")]
        public ECC.Core.DataContext.Team team_ofm_payment_request
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_payment_request", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_payment_request(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_payment_requestid"] = base.Id;
                        break;
                    case "ofm_payment_requestid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// A tracking record for PCM group
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_pcm_review")]
    public partial class ofm_pcm_review : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_pcm_review entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_application = "ofm_application";
            public const string ofm_applicationname = "ofm_applicationname";
            public const string ofm_name = "ofm_name";
            public const string ofm_pcm_reviewid = "ofm_pcm_reviewid";
            public const string Id = "ofm_pcm_reviewid";
            public const string ofm_pcmreview_application = "ofm_pcmreview_application";
            public const string ofm_reason = "ofm_reason";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_pcm_review = "team_ofm_pcm_review";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_pcm_review(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_pcm_review(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_pcm_review(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ofm_application";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_pcm_review() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_pcm_reviewid";

        public const string PrimaryNameAttribute = "ofm_name";

        public const string EntitySchemaName = "ofm_pcm_review";

        public const string EntityLogicalName = "ofm_pcm_review";

        public const string EntityLogicalCollectionName = "ofm_pcm_reviews";

        public const string EntitySetName = "ofm_pcm_reviews";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The associated application
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_application");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_application", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_applicationname")]
        public string ofm_applicationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_application"))
                {
                    return this.FormattedValues["ofm_application"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
        public string ofm_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_name", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pcm_reviewid")]
        public System.Nullable<System.Guid> ofm_pcm_reviewid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_pcm_reviewid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_pcm_reviewid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pcm_reviewid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_pcm_reviewid = value;
            }
        }

        /// <summary>
        /// PCM Review Reason when it is failed
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_reason")]
        public string ofm_reason
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_reason");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_reason", value);
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the PCM Review
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_pcm_review_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_pcm_review_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the PCM Review
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_pcm_review_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_pcm_review_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 ofm_pcmreview_application
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_pcmreview_application")]
        public ECC.Core.DataContext.ofm_application ofm_pcmreview_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_pcmreview_application", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_pcmreview_application", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_pcm_review
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_pcm_review")]
        public ECC.Core.DataContext.Team team_ofm_pcm_review
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_pcm_review", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_pcm_review(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_pcm_reviewid"] = base.Id;
                        break;
                    case "ofm_pcm_reviewid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_portal_permission")]
    public partial class ofm_portal_permission : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_portal_permission entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_name = "ofm_name";
            public const string ofm_portal_permissionid = "ofm_portal_permissionid";
            public const string Id = "ofm_portal_permissionid";
            public const string ofm_portal_privilege = "ofm_portal_privilege";
            public const string ofm_portal_privilege_permission = "ofm_portal_privilege_permission";
            public const string ofm_portal_privilegename = "ofm_portal_privilegename";
            public const string ofm_portal_role = "ofm_portal_role";
            public const string ofm_portal_role_permission = "ofm_portal_role_permission";
            public const string ofm_portal_rolename = "ofm_portal_rolename";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_portal_permission = "team_ofm_portal_permission";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_portal_permission(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_portal_permission(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_portal_permission(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ofm_portal_privilege,ofm_portal_role";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_portal_permission() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_portal_permissionid";

        public const string PrimaryNameAttribute = "ofm_name";

        public const string EntitySchemaName = "ofm_portal_permission";

        public const string EntityLogicalName = "ofm_portal_permission";

        public const string EntityLogicalCollectionName = "ofm_portal_permissions";

        public const string EntitySetName = "ofm_portal_permissions";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The name of the custom entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
        public string ofm_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_name", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_portal_permissionid")]
        public System.Nullable<System.Guid> ofm_portal_permissionid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_portal_permissionid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_portal_permissionid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_portal_permissionid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_portal_permissionid = value;
            }
        }

        /// <summary>
        /// Unique identifier for Portal Privilege associated with Portal Permission.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_portal_privilege")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_portal_privilege
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_portal_privilege");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_portal_privilege", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_portal_privilegename")]
        public string ofm_portal_privilegename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_portal_privilege"))
                {
                    return this.FormattedValues["ofm_portal_privilege"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for Portal Role associated with Portal Permission.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_portal_role")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_portal_role
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_portal_role");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_portal_role", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_portal_rolename")]
        public string ofm_portal_rolename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_portal_role"))
                {
                    return this.FormattedValues["ofm_portal_role"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Portal Permission
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_portal_permission_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_portal_permission_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Portal Permission
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_portal_permission_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_portal_permission_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 ofm_portal_privilege_permission
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_portal_privilege")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_portal_privilege_permission")]
        public ECC.Core.DataContext.ofm_portal_privilege ofm_portal_privilege_permission
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_portal_privilege>("ofm_portal_privilege_permission", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_portal_privilege>("ofm_portal_privilege_permission", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_portal_role_permission
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_portal_role")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_portal_role_permission")]
        public ECC.Core.DataContext.ofm_portal_role ofm_portal_role_permission
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_portal_role>("ofm_portal_role_permission", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_portal_role>("ofm_portal_role_permission", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_portal_permission
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_portal_permission")]
        public ECC.Core.DataContext.Team team_ofm_portal_permission
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_portal_permission", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_portal_permission(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_portal_permissionid"] = base.Id;
                        break;
                    case "ofm_portal_permissionid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_portal_privilege")]
    public partial class ofm_portal_privilege : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_portal_privilege entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_category = "ofm_category";
            public const string ofm_name = "ofm_name";
            public const string ofm_portal_privilege_number = "ofm_portal_privilege_number";
            public const string ofm_portal_privilege_permission = "ofm_portal_privilege_permission";
            public const string ofm_portal_privilegeid = "ofm_portal_privilegeid";
            public const string Id = "ofm_portal_privilegeid";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_portal_privilege = "team_ofm_portal_privilege";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_portal_privilege(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_portal_privilege(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_portal_privilege(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ofm_portal_privilege_number";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_portal_privilege() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_portal_privilegeid";

        public const string PrimaryNameAttribute = "ofm_name";

        public const string EntitySchemaName = "ofm_portal_privilege";

        public const string EntityLogicalName = "ofm_portal_privilege";

        public const string EntityLogicalCollectionName = "ofm_portal_privileges";

        public const string EntitySetName = "ofm_portal_privileges";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_category")]
        public string ofm_category
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_category");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_category", value);
            }
        }

        /// <summary>
        /// The name of the custom entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
        public string ofm_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_name", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_portal_privilege_number")]
        public string ofm_portal_privilege_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_portal_privilege_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_portal_privilege_number", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_portal_privilegeid")]
        public System.Nullable<System.Guid> ofm_portal_privilegeid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_portal_privilegeid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_portal_privilegeid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_portal_privilegeid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_portal_privilegeid = value;
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Portal Privilege
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_portal_privilege_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_portal_privilege_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Portal Privilege
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_portal_privilege_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_portal_privilege_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N ofm_portal_privilege_permission
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_portal_privilege_permission")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_portal_permission> ofm_portal_privilege_permission
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_portal_permission>("ofm_portal_privilege_permission", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_portal_permission>("ofm_portal_privilege_permission", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_portal_privilege
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_portal_privilege")]
        public ECC.Core.DataContext.Team team_ofm_portal_privilege
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_portal_privilege", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_portal_privilege(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_portal_privilegeid"] = base.Id;
                        break;
                    case "ofm_portal_privilegeid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_portal_role")]
    public partial class ofm_portal_role : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_portal_role entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_name = "ofm_name";
            public const string ofm_portal_role_contact = "ofm_portal_role_contact";
            public const string ofm_portal_role_number = "ofm_portal_role_number";
            public const string ofm_portal_role_permission = "ofm_portal_role_permission";
            public const string ofm_portal_roleid = "ofm_portal_roleid";
            public const string Id = "ofm_portal_roleid";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_portal_role = "team_ofm_portal_role";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_portal_role(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_portal_role(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_portal_role(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ofm_portal_role_number";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_portal_role() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_portal_roleid";

        public const string PrimaryNameAttribute = "ofm_name";

        public const string EntitySchemaName = "ofm_portal_role";

        public const string EntityLogicalName = "ofm_portal_role";

        public const string EntityLogicalCollectionName = "ofm_portal_roles";

        public const string EntitySetName = "ofm_portal_roles";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The name of the custom entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
        public string ofm_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_name", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_portal_role_number")]
        public string ofm_portal_role_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_portal_role_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_portal_role_number", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_portal_roleid")]
        public System.Nullable<System.Guid> ofm_portal_roleid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_portal_roleid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_portal_roleid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_portal_roleid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_portal_roleid = value;
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Portal Role
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_portal_role_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_portal_role_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Portal Role
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_portal_role_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_portal_role_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N ofm_portal_role_contact
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_portal_role_contact")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Contact> ofm_portal_role_contact
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.Contact>("ofm_portal_role_contact", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.Contact>("ofm_portal_role_contact", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_portal_role_permission
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_portal_role_permission")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_portal_permission> ofm_portal_role_permission
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_portal_permission>("ofm_portal_role_permission", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_portal_permission>("ofm_portal_role_permission", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_portal_role
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_portal_role")]
        public ECC.Core.DataContext.Team team_ofm_portal_role
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_portal_role", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_portal_role(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_portal_roleid"] = base.Id;
                        break;
                    case "ofm_portal_roleid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// Progress Tracker Record
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_progress_tracker")]
    public partial class ofm_progress_tracker : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_progress_tracker entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_category = "ofm_category";
            public const string ofm_description = "ofm_description";
            public const string ofm_funding_tracker = "ofm_funding_tracker";
            public const string ofm_non_hr_description = "ofm_non_hr_description";
            public const string ofm_progress_trackerid = "ofm_progress_trackerid";
            public const string Id = "ofm_progress_trackerid";
            public const string ofm_regardingid = "ofm_regardingid";
            public const string ofm_regardingidname = "ofm_regardingidname";
            public const string ofm_regardingidyominame = "ofm_regardingidyominame";
            public const string ofm_title = "ofm_title";
            public const string ofm_tracking_number = "ofm_tracking_number";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_progress_tracker = "team_ofm_progress_tracker";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_progress_tracker(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_progress_tracker(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_progress_tracker(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_progress_tracker() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_progress_trackerid";

        public const string PrimaryNameAttribute = "ofm_tracking_number";

        public const string EntitySchemaName = "ofm_progress_tracker";

        public const string EntityLogicalName = "ofm_progress_tracker";

        public const string EntityLogicalCollectionName = "ofm_progress_trackers";

        public const string EntitySetName = "ofm_progress_trackers";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Category
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_category")]
        public string ofm_category
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_category");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_category", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_description")]
        public string ofm_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_description", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_non_hr_description")]
        public string ofm_non_hr_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_non_hr_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_non_hr_description", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_progress_trackerid")]
        public System.Nullable<System.Guid> ofm_progress_trackerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_progress_trackerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_progress_trackerid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_progress_trackerid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_progress_trackerid = value;
            }
        }

        /// <summary>
        /// Regarding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_regardingid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_regardingid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_regardingid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingidname")]
        public string ofm_regardingidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_regardingid"))
                {
                    return this.FormattedValues["ofm_regardingid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingidyominame")]
        public string ofm_regardingidyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_regardingid"))
                {
                    return this.FormattedValues["ofm_regardingid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Title
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_title")]
        public string ofm_title
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_title");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_title", value);
            }
        }

        /// <summary>
        /// OFM Progress Tracker ID
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_tracking_number")]
        public string ofm_tracking_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_tracking_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_tracking_number", value);
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Progress Tracker
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_progress_tracker_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_progress_tracker_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Progress Tracker
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_progress_tracker_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_progress_tracker_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 ofm_funding_tracker
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_funding_tracker")]
        public ECC.Core.DataContext.ofm_funding ofm_funding_tracker
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_funding>("ofm_funding_tracker", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_funding>("ofm_funding_tracker", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_progress_tracker
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_progress_tracker")]
        public ECC.Core.DataContext.Team team_ofm_progress_tracker
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_progress_tracker", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_progress_tracker(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_progress_trackerid"] = base.Id;
                        break;
                    case "ofm_progress_trackerid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// OFM Provider Employee Record
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_provider_employee")]
    public partial class ofm_provider_employee : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_provider_employee entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_application = "ofm_application";
            public const string ofm_application_provideremployee = "ofm_application_provideremployee";
            public const string ofm_applicationname = "ofm_applicationname";
            public const string ofm_caption = "ofm_caption";
            public const string ofm_certificate_number = "ofm_certificate_number";
            public const string ofm_certificate_status = "ofm_certificate_status";
            public const string ofm_certificate_statusname = "ofm_certificate_statusname";
            public const string ofm_employee_type = "ofm_employee_type";
            public const string ofm_employee_typename = "ofm_employee_typename";
            public const string ofm_initials = "ofm_initials";
            public const string ofm_provider_employeeid = "ofm_provider_employeeid";
            public const string Id = "ofm_provider_employeeid";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_provider_employee = "team_ofm_provider_employee";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_provider_employee(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_provider_employee(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_provider_employee(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_provider_employee() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_provider_employeeid";

        public const string PrimaryNameAttribute = "ofm_caption";

        public const string EntitySchemaName = "ofm_provider_employee";

        public const string EntityLogicalName = "ofm_provider_employee";

        public const string EntityLogicalCollectionName = "ofm_provider_employees";

        public const string EntitySetName = "ofm_provider_employees";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The associated application record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_application");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_application", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_applicationname")]
        public string ofm_applicationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_application"))
                {
                    return this.FormattedValues["ofm_application"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// OFM Provider Employee record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_caption")]
        public string ofm_caption
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_caption");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_caption", value);
            }
        }

        /// <summary>
        /// Certification Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_certificate_number")]
        public string ofm_certificate_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_certificate_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_certificate_number", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_certificate_status")]
        public virtual ecc_pass_fail_empty? ofm_certificate_status
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_pass_fail_empty?)(EntityOptionSetEnum.GetEnum(this, "ofm_certificate_status")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_certificate_status", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_certificate_statusname")]
        public string ofm_certificate_statusname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_certificate_status"))
                {
                    return this.FormattedValues["ofm_certificate_status"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Employee Type
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_employee_type")]
        public virtual ecc_employee_type? ofm_employee_type
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_employee_type?)(EntityOptionSetEnum.GetEnum(this, "ofm_employee_type")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_employee_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_employee_typename")]
        public string ofm_employee_typename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_employee_type"))
                {
                    return this.FormattedValues["ofm_employee_type"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Initials
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_initials")]
        public string ofm_initials
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_initials");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_initials", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_provider_employeeid")]
        public System.Nullable<System.Guid> ofm_provider_employeeid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_provider_employeeid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_provider_employeeid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_provider_employeeid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_provider_employeeid = value;
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Provider Employee
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_provider_employee_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_provider_employee_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Provider Employee
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_provider_employee_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_provider_employee_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 ofm_application_provideremployee
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_application_provideremployee")]
        public ECC.Core.DataContext.ofm_application ofm_application_provideremployee
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_application_provideremployee", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_application_provideremployee", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_provider_employee
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_provider_employee")]
        public ECC.Core.DataContext.Team team_ofm_provider_employee
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_provider_employee", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_provider_employee(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_provider_employeeid"] = base.Id;
                        break;
                    case "ofm_provider_employeeid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_question")]
    public partial class ofm_question : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_question entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_additional_info = "ofm_additional_info";
            public const string ofm_business_rule = "ofm_business_rule";
            public const string ofm_business_rulename = "ofm_business_rulename";
            public const string ofm_child_question_business_rule = "ofm_child_question_business_rule";
            public const string ofm_choice_type = "ofm_choice_type";
            public const string ofm_choice_typename = "ofm_choice_typename";
            public const string ofm_customer_voice_question_id = "ofm_customer_voice_question_id";
            public const string ofm_default_rows = "ofm_default_rows";
            public const string ofm_display_text = "ofm_display_text";
            public const string ofm_display_type = "ofm_display_type";
            public const string ofm_display_typename = "ofm_display_typename";
            public const string ofm_false_child_question_business_rule = "ofm_false_child_question_business_rule";
            public const string ofm_fixed_data = "ofm_fixed_data";
            public const string ofm_fixed_response = "ofm_fixed_response";
            public const string ofm_header = "ofm_header";
            public const string ofm_header_question_response = "ofm_header_question_response";
            public const string ofm_headername = "ofm_headername";
            public const string ofm_is_published = "ofm_is_published";
            public const string ofm_is_publishedname = "ofm_is_publishedname";
            public const string ofm_maximum_rows = "ofm_maximum_rows";
            public const string ofm_multiple_line = "ofm_multiple_line";
            public const string ofm_multiple_linename = "ofm_multiple_linename";
            public const string ofm_name = "ofm_name";
            public const string ofm_occurence = "ofm_occurence";
            public const string ofm_occurencename = "ofm_occurencename";
            public const string ofm_ofm_question_ofm_question_business_rule_parentquestionid = "ofm_ofm_question_ofm_question_business_rule_parentquestionid";
            public const string ofm_question_business_rule_ques = "ofm_question_business_rule_ques";
            public const string ofm_question_business_rule_question = "ofm_question_business_rule_question";
            public const string ofm_question_choice = "ofm_question_choice";
            public const string Referencingofm_question_header = "ofm_question_header";
            public const string ofm_question_id = "ofm_question_id";
            public const string ofm_question_question_response = "ofm_question_question_response";
            public const string ofm_question_text = "ofm_question_text";
            public const string ofm_question_type = "ofm_question_type";
            public const string ofm_question_typename = "ofm_question_typename";
            public const string ofm_questionid = "ofm_questionid";
            public const string Id = "ofm_questionid";
            public const string ofm_response_required = "ofm_response_required";
            public const string ofm_response_requiredname = "ofm_response_requiredname";
            public const string ofm_section = "ofm_section";
            public const string ofm_section_question = "ofm_section_question";
            public const string ofm_sectionname = "ofm_sectionname";
            public const string ofm_sequence = "ofm_sequence";
            public const string ofm_source_question_id = "ofm_source_question_id";
            public const string ofm_source_question_identifier = "ofm_source_question_identifier";
            public const string ofm_subtitle = "ofm_subtitle";
            public const string ofm_table_name = "ofm_table_name";
            public const string ofm_table_sequence = "ofm_table_sequence";
            public const string ofm_true_child_question_business_rule = "ofm_true_child_question_business_rule";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string Referencedofm_question_header = "Referencedofm_question_header";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_question = "team_ofm_question";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_question(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_question(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_question(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ofm_name,ofm_question_id,ofm_source_question_id";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_question() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_questionid";

        public const string PrimaryNameAttribute = "ofm_name";

        public const string EntitySchemaName = "ofm_question";

        public const string EntityLogicalName = "ofm_question";

        public const string EntityLogicalCollectionName = "ofm_questions";

        public const string EntitySetName = "ofm_questions";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_additional_info")]
        public string ofm_additional_info
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_additional_info");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_additional_info", value);
            }
        }

        /// <summary>
        /// Unique identifier for Question Business Rule associated with Question.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_business_rule")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_business_rule
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_business_rule");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_business_rule", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_business_rulename")]
        public string ofm_business_rulename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_business_rule"))
                {
                    return this.FormattedValues["ofm_business_rule"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_choice_type")]
        public virtual ofm_question_ofm_choice_type? ofm_choice_type
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_question_ofm_choice_type?)(EntityOptionSetEnum.GetEnum(this, "ofm_choice_type")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_choice_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_choice_typename")]
        public string ofm_choice_typename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_choice_type"))
                {
                    return this.FormattedValues["ofm_choice_type"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_customer_voice_question_id")]
        public string ofm_customer_voice_question_id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_customer_voice_question_id");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_customer_voice_question_id", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_default_rows")]
        public System.Nullable<int> ofm_default_rows
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_default_rows");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_default_rows", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_display_text")]
        public string ofm_display_text
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_display_text");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_display_text", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_display_type")]
        public virtual ofm_ReportingQuestionType? ofm_display_type
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_ReportingQuestionType?)(EntityOptionSetEnum.GetEnum(this, "ofm_display_type")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_display_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_display_typename")]
        public string ofm_display_typename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_display_type"))
                {
                    return this.FormattedValues["ofm_display_type"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fixed_data")]
        public string ofm_fixed_data
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_fixed_data");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_fixed_data", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fixed_response")]
        public string ofm_fixed_response
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_fixed_response");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_fixed_response", value);
            }
        }

        /// <summary>
        /// Unique identifier for Question associated with Question.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_header")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_header
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_header");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_header", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_headername")]
        public string ofm_headername
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_header"))
                {
                    return this.FormattedValues["ofm_header"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_is_published")]
        public System.Nullable<bool> ofm_is_published
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_is_published");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_is_published", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_is_publishedname")]
        public string ofm_is_publishedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_is_published"))
                {
                    return this.FormattedValues["ofm_is_published"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_maximum_rows")]
        public System.Nullable<int> ofm_maximum_rows
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_maximum_rows");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_maximum_rows", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_multiple_line")]
        public System.Nullable<bool> ofm_multiple_line
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_multiple_line");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_multiple_line", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_multiple_linename")]
        public string ofm_multiple_linename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_multiple_line"))
                {
                    return this.FormattedValues["ofm_multiple_line"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The name of the custom entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
        public string ofm_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_name", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_occurence")]
        public virtual ofm_question_ofm_occurence? ofm_occurence
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_question_ofm_occurence?)(EntityOptionSetEnum.GetEnum(this, "ofm_occurence")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_occurence", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_occurencename")]
        public string ofm_occurencename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_occurence"))
                {
                    return this.FormattedValues["ofm_occurence"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_question_choice")]
        public string ofm_question_choice
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_question_choice");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_question_choice", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_question_id")]
        public string ofm_question_id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_question_id");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_question_id", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_question_text")]
        public string ofm_question_text
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_question_text");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_question_text", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_question_type")]
        public virtual ofm_ReportingQuestionType? ofm_question_type
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_ReportingQuestionType?)(EntityOptionSetEnum.GetEnum(this, "ofm_question_type")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_question_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_question_typename")]
        public string ofm_question_typename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_question_type"))
                {
                    return this.FormattedValues["ofm_question_type"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_questionid")]
        public System.Nullable<System.Guid> ofm_questionid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_questionid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_questionid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_questionid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_questionid = value;
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_response_required")]
        public System.Nullable<bool> ofm_response_required
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_response_required");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_response_required", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_response_requiredname")]
        public string ofm_response_requiredname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_response_required"))
                {
                    return this.FormattedValues["ofm_response_required"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for Section associated with Question.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_section")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_section
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_section");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_section", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_sectionname")]
        public string ofm_sectionname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_section"))
                {
                    return this.FormattedValues["ofm_section"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_sequence")]
        public System.Nullable<decimal> ofm_sequence
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_sequence");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_sequence", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_source_question_id")]
        public string ofm_source_question_id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_source_question_id");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_source_question_id", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_source_question_identifier")]
        public string ofm_source_question_identifier
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_source_question_identifier");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_source_question_identifier", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_subtitle")]
        public string ofm_subtitle
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_subtitle");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_subtitle", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_table_name")]
        public string ofm_table_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_table_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_table_name", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_table_sequence")]
        public string ofm_table_sequence
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_table_sequence");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_table_sequence", value);
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Question
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_question_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_question_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Question
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_question_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_question_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N ofm_child_question_business_rule
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_child_question_business_rule")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_question_business_rule> ofm_child_question_business_rule
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_question_business_rule>("ofm_child_question_business_rule", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_question_business_rule>("ofm_child_question_business_rule", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_false_child_question_business_rule
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_false_child_question_business_rule")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_question_business_rule> ofm_false_child_question_business_rule
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_question_business_rule>("ofm_false_child_question_business_rule", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_question_business_rule>("ofm_false_child_question_business_rule", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_header_question_response
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_header_question_response")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_question_response> ofm_header_question_response
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_question_response>("ofm_header_question_response", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_question_response>("ofm_header_question_response", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_ofm_question_ofm_question_business_rule_parentquestionid
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_ofm_question_ofm_question_business_rule_parentquestionid")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_question_business_rule> ofm_ofm_question_ofm_question_business_rule_parentquestionid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_question_business_rule>("ofm_ofm_question_ofm_question_business_rule_parentquestionid", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_question_business_rule>("ofm_ofm_question_ofm_question_business_rule_parentquestionid", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_question_header
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_question_header", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_question> Referencedofm_question_header
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_question>("ofm_question_header", Microsoft.Xrm.Sdk.EntityRole.Referenced);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_question>("ofm_question_header", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
            }
        }

        /// <summary>
        /// 1:N ofm_question_question_response
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_question_question_response")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_question_response> ofm_question_question_response
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_question_response>("ofm_question_question_response", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_question_response>("ofm_question_question_response", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_true_child_question_business_rule
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_true_child_question_business_rule")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_question_business_rule> ofm_true_child_question_business_rule
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_question_business_rule>("ofm_true_child_question_business_rule", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_question_business_rule>("ofm_true_child_question_business_rule", null, value);
            }
        }

        /// <summary>
        /// N:N ofm_question_business_rule_ques
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_question_business_rule_ques")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_question_business_rule> ofm_question_business_rule_ques
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_question_business_rule>("ofm_question_business_rule_ques", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_question_business_rule>("ofm_question_business_rule_ques", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_question_business_rule_question
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_business_rule")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_question_business_rule_question")]
        public ECC.Core.DataContext.ofm_question_business_rule ofm_question_business_rule_question
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_question_business_rule>("ofm_question_business_rule_question", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_question_business_rule>("ofm_question_business_rule_question", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_question_header
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_header")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_question_header", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
        public ECC.Core.DataContext.ofm_question Referencingofm_question_header
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_question>("ofm_question_header", Microsoft.Xrm.Sdk.EntityRole.Referencing);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_question>("ofm_question_header", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
            }
        }

        /// <summary>
        /// N:1 ofm_section_question
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_section")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_section_question")]
        public ECC.Core.DataContext.ofm_section ofm_section_question
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_section>("ofm_section_question", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_section>("ofm_section_question", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_question
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_question")]
        public ECC.Core.DataContext.Team team_ofm_question
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_question", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_question(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_questionid"] = base.Id;
                        break;
                    case "ofm_questionid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_question_business_rule")]
    public partial class ofm_question_business_rule : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_question_business_rule entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_business_rule_type = "ofm_business_rule_type";
            public const string ofm_business_rule_typename = "ofm_business_rule_typename";
            public const string ofm_child_question = "ofm_child_question";
            public const string ofm_child_question_business_rule = "ofm_child_question_business_rule";
            public const string ofm_child_questionname = "ofm_child_questionname";
            public const string ofm_condition = "ofm_condition";
            public const string ofm_false_child_question = "ofm_false_child_question";
            public const string ofm_false_child_question_business_rule = "ofm_false_child_question_business_rule";
            public const string ofm_false_child_questionname = "ofm_false_child_questionname";
            public const string ofm_name = "ofm_name";
            public const string ofm_ofm_question_ofm_question_business_rule_parentquestionid = "ofm_ofm_question_ofm_question_business_rule_parentquestionid";
            public const string ofm_parent_has_response = "ofm_parent_has_response";
            public const string ofm_parent_has_responsename = "ofm_parent_has_responsename";
            public const string ofm_parentquestionid = "ofm_parentquestionid";
            public const string ofm_parentquestionidname = "ofm_parentquestionidname";
            public const string ofm_question_business_rule_ques = "ofm_question_business_rule_ques";
            public const string ofm_question_business_rule_question = "ofm_question_business_rule_question";
            public const string ofm_question_business_ruleid = "ofm_question_business_ruleid";
            public const string Id = "ofm_question_business_ruleid";
            public const string ofm_section = "ofm_section";
            public const string ofm_section_question_business_rule = "ofm_section_question_business_rule";
            public const string ofm_sectionname = "ofm_sectionname";
            public const string ofm_true_child_question = "ofm_true_child_question";
            public const string ofm_true_child_question_business_rule = "ofm_true_child_question_business_rule";
            public const string ofm_true_child_questionname = "ofm_true_child_questionname";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_question_business_rule = "team_ofm_question_business_rule";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_question_business_rule(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_question_business_rule(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_question_business_rule(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_question_business_rule() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_question_business_ruleid";

        public const string PrimaryNameAttribute = "ofm_name";

        public const string EntitySchemaName = "ofm_question_business_rule";

        public const string EntityLogicalName = "ofm_question_business_rule";

        public const string EntityLogicalCollectionName = "ofm_question_business_rules";

        public const string EntitySetName = "ofm_question_business_rules";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_business_rule_type")]
        public virtual ofm_question_business_rule_ofm_business_rule_type? ofm_business_rule_type
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_question_business_rule_ofm_business_rule_type?)(EntityOptionSetEnum.GetEnum(this, "ofm_business_rule_type")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_business_rule_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_business_rule_typename")]
        public string ofm_business_rule_typename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_business_rule_type"))
                {
                    return this.FormattedValues["ofm_business_rule_type"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for Question associated with Question Business Rule.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_child_question")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_child_question
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_child_question");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_child_question", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_child_questionname")]
        public string ofm_child_questionname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_child_question"))
                {
                    return this.FormattedValues["ofm_child_question"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_condition")]
        public string ofm_condition
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_condition");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_condition", value);
            }
        }

        /// <summary>
        /// Unique identifier for Question associated with Question Business Rule.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_false_child_question")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_false_child_question
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_false_child_question");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_false_child_question", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_false_child_questionname")]
        public string ofm_false_child_questionname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_false_child_question"))
                {
                    return this.FormattedValues["ofm_false_child_question"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The name of the custom entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
        public string ofm_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_name", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_parent_has_response")]
        public System.Nullable<bool> ofm_parent_has_response
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_parent_has_response");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_parent_has_response", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_parent_has_responsename")]
        public string ofm_parent_has_responsename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_parent_has_response"))
                {
                    return this.FormattedValues["ofm_parent_has_response"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_parentquestionid")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_parentquestionid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_parentquestionid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_parentquestionid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_parentquestionidname")]
        public string ofm_parentquestionidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_parentquestionid"))
                {
                    return this.FormattedValues["ofm_parentquestionid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_question_business_ruleid")]
        public System.Nullable<System.Guid> ofm_question_business_ruleid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_question_business_ruleid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_question_business_ruleid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_question_business_ruleid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_question_business_ruleid = value;
            }
        }

        /// <summary>
        /// Unique identifier for Section associated with Question Business Rule.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_section")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_section
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_section");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_section", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_sectionname")]
        public string ofm_sectionname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_section"))
                {
                    return this.FormattedValues["ofm_section"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for Question associated with Question Business Rule.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_true_child_question")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_true_child_question
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_true_child_question");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_true_child_question", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_true_child_questionname")]
        public string ofm_true_child_questionname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_true_child_question"))
                {
                    return this.FormattedValues["ofm_true_child_question"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Question Business Rule
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_question_business_rule_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_question_business_rule_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Question Business Rule
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_question_business_rule_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_question_business_rule_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N ofm_question_business_rule_question
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_question_business_rule_question")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_question> ofm_question_business_rule_question
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_question>("ofm_question_business_rule_question", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_question>("ofm_question_business_rule_question", null, value);
            }
        }

        /// <summary>
        /// N:N ofm_question_business_rule_ques
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_question_business_rule_ques")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_question> ofm_question_business_rule_ques
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_question>("ofm_question_business_rule_ques", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_question>("ofm_question_business_rule_ques", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_child_question_business_rule
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_child_question")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_child_question_business_rule")]
        public ECC.Core.DataContext.ofm_question ofm_child_question_business_rule
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_question>("ofm_child_question_business_rule", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_question>("ofm_child_question_business_rule", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_false_child_question_business_rule
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_false_child_question")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_false_child_question_business_rule")]
        public ECC.Core.DataContext.ofm_question ofm_false_child_question_business_rule
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_question>("ofm_false_child_question_business_rule", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_question>("ofm_false_child_question_business_rule", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_ofm_question_ofm_question_business_rule_parentquestionid
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_parentquestionid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_ofm_question_ofm_question_business_rule_parentquestionid")]
        public ECC.Core.DataContext.ofm_question ofm_ofm_question_ofm_question_business_rule_parentquestionid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_question>("ofm_ofm_question_ofm_question_business_rule_parentquestionid", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_question>("ofm_ofm_question_ofm_question_business_rule_parentquestionid", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_section_question_business_rule
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_section")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_section_question_business_rule")]
        public ECC.Core.DataContext.ofm_section ofm_section_question_business_rule
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_section>("ofm_section_question_business_rule", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_section>("ofm_section_question_business_rule", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_true_child_question_business_rule
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_true_child_question")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_true_child_question_business_rule")]
        public ECC.Core.DataContext.ofm_question ofm_true_child_question_business_rule
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_question>("ofm_true_child_question_business_rule", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_question>("ofm_true_child_question_business_rule", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_question_business_rule
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_question_business_rule")]
        public ECC.Core.DataContext.Team team_ofm_question_business_rule
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_question_business_rule", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_question_business_rule(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_question_business_ruleid"] = base.Id;
                        break;
                    case "ofm_question_business_ruleid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_question_response")]
    public partial class ofm_question_response : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_question_response entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_current_version = "ofm_current_version";
            public const string ofm_current_versionname = "ofm_current_versionname";
            public const string ofm_embedded_data = "ofm_embedded_data";
            public const string ofm_header = "ofm_header";
            public const string ofm_header_question_response = "ofm_header_question_response";
            public const string ofm_headername = "ofm_headername";
            public const string ofm_multiple_line = "ofm_multiple_line";
            public const string ofm_multiple_linename = "ofm_multiple_linename";
            public const string ofm_name = "ofm_name";
            public const string ofm_question = "ofm_question";
            public const string ofm_question_question_response = "ofm_question_question_response";
            public const string Referencingofm_question_response_current_version_ofm_question_response = "ofm_question_response_current_version_ofm_question_response";
            public const string ofm_question_responseid = "ofm_question_responseid";
            public const string Id = "ofm_question_responseid";
            public const string ofm_questionname = "ofm_questionname";
            public const string ofm_response_text = "ofm_response_text";
            public const string ofm_row_id = "ofm_row_id";
            public const string ofm_survey_response = "ofm_survey_response";
            public const string ofm_survey_response_question_response = "ofm_survey_response_question_response";
            public const string ofm_survey_responsename = "ofm_survey_responsename";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string Referencedofm_question_response_current_version_ofm_question_response = "Referencedofm_question_response_current_version_ofm_question_response";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_question_response = "team_ofm_question_response";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_question_response(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_question_response(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_question_response(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ofm_embedded_data";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_question_response() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_question_responseid";

        public const string PrimaryNameAttribute = "ofm_name";

        public const string EntitySchemaName = "ofm_question_response";

        public const string EntityLogicalName = "ofm_question_response";

        public const string EntityLogicalCollectionName = "ofm_question_responses";

        public const string EntitySetName = "ofm_question_responses";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_current_version")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_current_version
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_current_version");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_current_version", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_current_versionname")]
        public string ofm_current_versionname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_current_version"))
                {
                    return this.FormattedValues["ofm_current_version"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_embedded_data")]
        public string ofm_embedded_data
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_embedded_data");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_embedded_data", value);
            }
        }

        /// <summary>
        /// Unique identifier for Question associated with Question Response.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_header")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_header
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_header");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_header", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_headername")]
        public string ofm_headername
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_header"))
                {
                    return this.FormattedValues["ofm_header"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_multiple_line")]
        public System.Nullable<bool> ofm_multiple_line
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_multiple_line");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_multiple_line", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_multiple_linename")]
        public string ofm_multiple_linename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_multiple_line"))
                {
                    return this.FormattedValues["ofm_multiple_line"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Record Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
        public string ofm_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_name", value);
            }
        }

        /// <summary>
        /// Unique identifier for Question associated with Question Response.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_question")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_question
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_question");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_question", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_question_responseid")]
        public System.Nullable<System.Guid> ofm_question_responseid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_question_responseid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_question_responseid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_question_responseid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_question_responseid = value;
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_questionname")]
        public string ofm_questionname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_question"))
                {
                    return this.FormattedValues["ofm_question"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_response_text")]
        public string ofm_response_text
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_response_text");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_response_text", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_row_id")]
        public System.Nullable<int> ofm_row_id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_row_id");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_row_id", value);
            }
        }

        /// <summary>
        /// Unique identifier for Survey Response associated with Question Response.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_survey_response")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_survey_response
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_survey_response");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_survey_response", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_survey_responsename")]
        public string ofm_survey_responsename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_survey_response"))
                {
                    return this.FormattedValues["ofm_survey_response"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Question Response
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_question_response_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_question_response_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Question Response
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_question_response_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_question_response_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N ofm_question_response_current_version_ofm_question_response
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_question_response_current_version_ofm_question_response", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_question_response> Referencedofm_question_response_current_version_ofm_question_response
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_question_response>("ofm_question_response_current_version_ofm_question_response", Microsoft.Xrm.Sdk.EntityRole.Referenced);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_question_response>("ofm_question_response_current_version_ofm_question_response", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
            }
        }

        /// <summary>
        /// N:1 ofm_header_question_response
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_header")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_header_question_response")]
        public ECC.Core.DataContext.ofm_question ofm_header_question_response
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_question>("ofm_header_question_response", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_question>("ofm_header_question_response", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_question_question_response
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_question")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_question_question_response")]
        public ECC.Core.DataContext.ofm_question ofm_question_question_response
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_question>("ofm_question_question_response", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_question>("ofm_question_question_response", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_question_response_current_version_ofm_question_response
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_current_version")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_question_response_current_version_ofm_question_response", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
        public ECC.Core.DataContext.ofm_question_response Referencingofm_question_response_current_version_ofm_question_response
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_question_response>("ofm_question_response_current_version_ofm_question_response", Microsoft.Xrm.Sdk.EntityRole.Referencing);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_question_response>("ofm_question_response_current_version_ofm_question_response", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
            }
        }

        /// <summary>
        /// N:1 ofm_survey_response_question_response
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_survey_response")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_survey_response_question_response")]
        public ECC.Core.DataContext.ofm_survey_response ofm_survey_response_question_response
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_survey_response>("ofm_survey_response_question_response", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_survey_response>("ofm_survey_response_question_response", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_question_response
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_question_response")]
        public ECC.Core.DataContext.Team team_ofm_question_response
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_question_response", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_question_response(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_question_responseid"] = base.Id;
                        break;
                    case "ofm_question_responseid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// Rate Schedule Key
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_rate_schedule")]
    public partial class ofm_rate_schedule : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_rate_schedule entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string exchangerate = "exchangerate";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_average_benefit_load = "ofm_average_benefit_load";
            public const string ofm_caption = "ofm_caption";
            public const string ofm_cpp = "ofm_cpp";
            public const string ofm_cultural_hours_per_fte = "ofm_cultural_hours_per_fte";
            public const string ofm_days_in_a_week = "ofm_days_in_a_week";
            public const string ofm_description = "ofm_description";
            public const string ofm_eht_maximum_cost_for_profit = "ofm_eht_maximum_cost_for_profit";
            public const string ofm_eht_maximum_cost_for_profit_base = "ofm_eht_maximum_cost_for_profit_base";
            public const string ofm_eht_maximum_cost_not_for_profit = "ofm_eht_maximum_cost_not_for_profit";
            public const string ofm_eht_maximum_cost_not_for_profit_base = "ofm_eht_maximum_cost_not_for_profit_base";
            public const string ofm_eht_minimum_cost_for_profit = "ofm_eht_minimum_cost_for_profit";
            public const string ofm_eht_minimum_cost_for_profit_base = "ofm_eht_minimum_cost_for_profit_base";
            public const string ofm_ei = "ofm_ei";
            public const string ofm_elf_educational_programming_cap_fte_year = "ofm_elf_educational_programming_cap_fte_year";
            public const string ofm_elf_educational_programming_cap_fte_year_base = "ofm_elf_educational_programming_cap_fte_year_base";
            public const string ofm_elf_hours_per_fte = "ofm_elf_hours_per_fte";
            public const string ofm_end_date = "ofm_end_date";
            public const string ofm_extended_benefits = "ofm_extended_benefits";
            public const string ofm_for_profit_eht_over_1_5m = "ofm_for_profit_eht_over_1_5m";
            public const string ofm_for_profit_eht_over_500k = "ofm_for_profit_eht_over_500k";
            public const string ofm_hours_per_day = "ofm_hours_per_day";
            public const string ofm_inclusion_hours_per_fte = "ofm_inclusion_hours_per_fte";
            public const string ofm_licenced_childcare_cap_per_fte_per_year = "ofm_licenced_childcare_cap_per_fte_per_year";
            public const string ofm_licenced_childcare_cap_per_fte_per_year_base = "ofm_licenced_childcare_cap_per_fte_per_year_base";
            public const string ofm_licensed_childcare_hours_per_fte = "ofm_licensed_childcare_hours_per_fte";
            public const string ofm_max_annual_open_hours = "ofm_max_annual_open_hours";
            public const string ofm_min_care_hours_per_fte_ratio = "ofm_min_care_hours_per_fte_ratio";
            public const string ofm_no_of_sick_days = "ofm_no_of_sick_days";
            public const string ofm_no_of_stat_holidays = "ofm_no_of_stat_holidays";
            public const string ofm_no_of_vacation_days = "ofm_no_of_vacation_days";
            public const string ofm_not_for_profit_eht_over_1_5m = "ofm_not_for_profit_eht_over_1_5m";
            public const string ofm_parent_fee_per_day_ft = "ofm_parent_fee_per_day_ft";
            public const string ofm_parent_fee_per_day_ft_base = "ofm_parent_fee_per_day_ft_base";
            public const string ofm_parent_fee_per_day_pt = "ofm_parent_fee_per_day_pt";
            public const string ofm_parent_fee_per_day_pt_base = "ofm_parent_fee_per_day_pt_base";
            public const string ofm_parent_fee_per_day_pt_school_age = "ofm_parent_fee_per_day_pt_school_age";
            public const string ofm_parent_fee_per_day_pt_school_age_base = "ofm_parent_fee_per_day_pt_school_age_base";
            public const string ofm_parent_fee_per_month_ft = "ofm_parent_fee_per_month_ft";
            public const string ofm_parent_fee_per_month_ft_base = "ofm_parent_fee_per_month_ft_base";
            public const string ofm_parent_fee_per_month_pt = "ofm_parent_fee_per_month_pt";
            public const string ofm_parent_fee_per_month_pt_base = "ofm_parent_fee_per_month_pt_base";
            public const string ofm_parent_fee_per_month_pt_school_age = "ofm_parent_fee_per_month_pt_school_age";
            public const string ofm_parent_fee_per_month_pt_school_age_base = "ofm_parent_fee_per_month_pt_school_age_base";
            public const string ofm_pde_cultural_training = "ofm_pde_cultural_training";
            public const string ofm_pde_cultural_training_base = "ofm_pde_cultural_training_base";
            public const string ofm_pde_inclusion_training = "ofm_pde_inclusion_training";
            public const string ofm_pde_inclusion_training_base = "ofm_pde_inclusion_training_base";
            public const string ofm_professional_development_hours = "ofm_professional_development_hours";
            public const string ofm_pto_breaks = "ofm_pto_breaks";
            public const string ofm_quality_enhancement_factor = "ofm_quality_enhancement_factor";
            public const string ofm_rate_scheduleid = "ofm_rate_scheduleid";
            public const string Id = "ofm_rate_scheduleid";
            public const string ofm_rateschedule_cclr = "ofm_rateschedule_cclr";
            public const string ofm_rateschedule_funding = "ofm_rateschedule_funding";
            public const string ofm_rateschedule_fundingrate = "ofm_rateschedule_fundingrate";
            public const string ofm_schedule_number = "ofm_schedule_number";
            public const string ofm_sick_hours_per_fte = "ofm_sick_hours_per_fte";
            public const string ofm_standard_dues_per_fte = "ofm_standard_dues_per_fte";
            public const string ofm_standard_dues_per_fte_base = "ofm_standard_dues_per_fte_base";
            public const string ofm_start_date = "ofm_start_date";
            public const string ofm_statutory_breaks = "ofm_statutory_breaks";
            public const string ofm_supervisor_rate = "ofm_supervisor_rate";
            public const string ofm_supervisor_rate_base = "ofm_supervisor_rate_base";
            public const string ofm_supervisor_ratio = "ofm_supervisor_ratio";
            public const string ofm_total_fte_hours_per_year = "ofm_total_fte_hours_per_year";
            public const string ofm_vacation_hours_per_fte = "ofm_vacation_hours_per_fte";
            public const string ofm_wage_grid_markup = "ofm_wage_grid_markup";
            public const string ofm_wages_ece_cost = "ofm_wages_ece_cost";
            public const string ofm_wages_ece_cost_base = "ofm_wages_ece_cost_base";
            public const string ofm_wages_ecea_cost = "ofm_wages_ecea_cost";
            public const string ofm_wages_ecea_cost_base = "ofm_wages_ecea_cost_base";
            public const string ofm_wages_ite_cost = "ofm_wages_ite_cost";
            public const string ofm_wages_ite_cost_base = "ofm_wages_ite_cost_base";
            public const string ofm_wages_ra_cost = "ofm_wages_ra_cost";
            public const string ofm_wages_ra_cost_base = "ofm_wages_ra_cost_base";
            public const string ofm_wcb = "ofm_wcb";
            public const string ofm_weeks_in_a_year = "ofm_weeks_in_a_year";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_rate_schedule = "team_ofm_rate_schedule";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string transactioncurrencyid = "transactioncurrencyid";
            public const string transactioncurrencyidname = "transactioncurrencyidname";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_rate_schedule(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_rate_schedule(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_rate_schedule(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ofm_schedule_number";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_rate_schedule() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_rate_scheduleid";

        public const string PrimaryNameAttribute = "ofm_caption";

        public const string EntitySchemaName = "ofm_rate_schedule";

        public const string EntityLogicalName = "ofm_rate_schedule";

        public const string EntityLogicalCollectionName = "ofm_rate_schedules";

        public const string EntitySetName = "ofm_rate_schedules";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Exchange rate for the currency associated with the entity with respect to the base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
        public System.Nullable<decimal> exchangerate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_average_benefit_load")]
        public System.Nullable<decimal> ofm_average_benefit_load
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_average_benefit_load");
            }
        }

        /// <summary>
        /// The record identifier
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_caption")]
        public string ofm_caption
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_caption");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_caption", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cpp")]
        public System.Nullable<decimal> ofm_cpp
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_cpp");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_cpp", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cultural_hours_per_fte")]
        public System.Nullable<decimal> ofm_cultural_hours_per_fte
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_cultural_hours_per_fte");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_cultural_hours_per_fte", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_days_in_a_week")]
        public System.Nullable<int> ofm_days_in_a_week
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_days_in_a_week");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_days_in_a_week", value);
            }
        }

        /// <summary>
        /// Description
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_description")]
        public string ofm_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_description", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_eht_maximum_cost_for_profit")]
        public Microsoft.Xrm.Sdk.Money ofm_eht_maximum_cost_for_profit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_eht_maximum_cost_for_profit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_eht_maximum_cost_for_profit", value);
            }
        }

        /// <summary>
        /// Value of the EHT Maximum Cost - For Profit in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_eht_maximum_cost_for_profit_base")]
        public Microsoft.Xrm.Sdk.Money ofm_eht_maximum_cost_for_profit_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_eht_maximum_cost_for_profit_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_eht_maximum_cost_not_for_profit")]
        public Microsoft.Xrm.Sdk.Money ofm_eht_maximum_cost_not_for_profit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_eht_maximum_cost_not_for_profit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_eht_maximum_cost_not_for_profit", value);
            }
        }

        /// <summary>
        /// Value of the EHT Maximum Cost - Not For Profit in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_eht_maximum_cost_not_for_profit_base")]
        public Microsoft.Xrm.Sdk.Money ofm_eht_maximum_cost_not_for_profit_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_eht_maximum_cost_not_for_profit_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_eht_minimum_cost_for_profit")]
        public Microsoft.Xrm.Sdk.Money ofm_eht_minimum_cost_for_profit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_eht_minimum_cost_for_profit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_eht_minimum_cost_for_profit", value);
            }
        }

        /// <summary>
        /// Value of the EHT Minimum Cost - For Profit in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_eht_minimum_cost_for_profit_base")]
        public Microsoft.Xrm.Sdk.Money ofm_eht_minimum_cost_for_profit_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_eht_minimum_cost_for_profit_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ei")]
        public System.Nullable<decimal> ofm_ei
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_ei");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_ei", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_elf_educational_programming_cap_fte_year")]
        public Microsoft.Xrm.Sdk.Money ofm_elf_educational_programming_cap_fte_year
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_elf_educational_programming_cap_fte_year");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_elf_educational_programming_cap_fte_year", value);
            }
        }

        /// <summary>
        /// Value of the ELF Educational Programming cap/ FTE / Year in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_elf_educational_programming_cap_fte_year_base")]
        public Microsoft.Xrm.Sdk.Money ofm_elf_educational_programming_cap_fte_year_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_elf_educational_programming_cap_fte_year_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_elf_hours_per_fte")]
        public System.Nullable<decimal> ofm_elf_hours_per_fte
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_elf_hours_per_fte");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_elf_hours_per_fte", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_end_date")]
        public System.Nullable<System.DateTime> ofm_end_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_end_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_end_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_extended_benefits")]
        public System.Nullable<decimal> ofm_extended_benefits
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_extended_benefits");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_extended_benefits", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_for_profit_eht_over_1_5m")]
        public System.Nullable<decimal> ofm_for_profit_eht_over_1_5m
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_for_profit_eht_over_1_5m");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_for_profit_eht_over_1_5m", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_for_profit_eht_over_500k")]
        public System.Nullable<decimal> ofm_for_profit_eht_over_500k
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_for_profit_eht_over_500k");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_for_profit_eht_over_500k", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_hours_per_day")]
        public System.Nullable<decimal> ofm_hours_per_day
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_hours_per_day");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_hours_per_day", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_inclusion_hours_per_fte")]
        public System.Nullable<decimal> ofm_inclusion_hours_per_fte
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_inclusion_hours_per_fte");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_inclusion_hours_per_fte", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licenced_childcare_cap_per_fte_per_year")]
        public Microsoft.Xrm.Sdk.Money ofm_licenced_childcare_cap_per_fte_per_year
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_licenced_childcare_cap_per_fte_per_year");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_licenced_childcare_cap_per_fte_per_year", value);
            }
        }

        /// <summary>
        /// Value of the Licenced Childcare cap/ FTE / Year in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licenced_childcare_cap_per_fte_per_year_base")]
        public Microsoft.Xrm.Sdk.Money ofm_licenced_childcare_cap_per_fte_per_year_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_licenced_childcare_cap_per_fte_per_year_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licensed_childcare_hours_per_fte")]
        public System.Nullable<decimal> ofm_licensed_childcare_hours_per_fte
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_licensed_childcare_hours_per_fte");
            }
        }

        /// <summary>
        /// Max Annual Open Hours
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_max_annual_open_hours")]
        public System.Nullable<decimal> ofm_max_annual_open_hours
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_max_annual_open_hours");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_max_annual_open_hours", value);
            }
        }

        /// <summary>
        /// Min Care Hours/FTE Ratio
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_min_care_hours_per_fte_ratio")]
        public System.Nullable<decimal> ofm_min_care_hours_per_fte_ratio
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_min_care_hours_per_fte_ratio");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_min_care_hours_per_fte_ratio", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_no_of_sick_days")]
        public System.Nullable<decimal> ofm_no_of_sick_days
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_no_of_sick_days");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_no_of_sick_days", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_no_of_stat_holidays")]
        public System.Nullable<decimal> ofm_no_of_stat_holidays
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_no_of_stat_holidays");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_no_of_stat_holidays", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_no_of_vacation_days")]
        public System.Nullable<decimal> ofm_no_of_vacation_days
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_no_of_vacation_days");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_no_of_vacation_days", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_not_for_profit_eht_over_1_5m")]
        public System.Nullable<decimal> ofm_not_for_profit_eht_over_1_5m
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_not_for_profit_eht_over_1_5m");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_not_for_profit_eht_over_1_5m", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_parent_fee_per_day_ft")]
        public Microsoft.Xrm.Sdk.Money ofm_parent_fee_per_day_ft
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_parent_fee_per_day_ft");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_parent_fee_per_day_ft", value);
            }
        }

        /// <summary>
        /// Value of the Parent Fee Per Day (FT) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_parent_fee_per_day_ft_base")]
        public Microsoft.Xrm.Sdk.Money ofm_parent_fee_per_day_ft_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_parent_fee_per_day_ft_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_parent_fee_per_day_pt")]
        public Microsoft.Xrm.Sdk.Money ofm_parent_fee_per_day_pt
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_parent_fee_per_day_pt");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_parent_fee_per_day_pt", value);
            }
        }

        /// <summary>
        /// Value of the Parent Fee Per Day (PT) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_parent_fee_per_day_pt_base")]
        public Microsoft.Xrm.Sdk.Money ofm_parent_fee_per_day_pt_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_parent_fee_per_day_pt_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_parent_fee_per_day_pt_school_age")]
        public Microsoft.Xrm.Sdk.Money ofm_parent_fee_per_day_pt_school_age
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_parent_fee_per_day_pt_school_age");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_parent_fee_per_day_pt_school_age", value);
            }
        }

        /// <summary>
        /// Value of the School Age Parent Fees Per Day (Part-Time)  in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_parent_fee_per_day_pt_school_age_base")]
        public Microsoft.Xrm.Sdk.Money ofm_parent_fee_per_day_pt_school_age_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_parent_fee_per_day_pt_school_age_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_parent_fee_per_month_ft")]
        public Microsoft.Xrm.Sdk.Money ofm_parent_fee_per_month_ft
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_parent_fee_per_month_ft");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_parent_fee_per_month_ft", value);
            }
        }

        /// <summary>
        /// Value of the Parent Fee Per Month (FT) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_parent_fee_per_month_ft_base")]
        public Microsoft.Xrm.Sdk.Money ofm_parent_fee_per_month_ft_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_parent_fee_per_month_ft_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_parent_fee_per_month_pt")]
        public Microsoft.Xrm.Sdk.Money ofm_parent_fee_per_month_pt
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_parent_fee_per_month_pt");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_parent_fee_per_month_pt", value);
            }
        }

        /// <summary>
        /// Value of the Parent Fee Per Month (PT) in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_parent_fee_per_month_pt_base")]
        public Microsoft.Xrm.Sdk.Money ofm_parent_fee_per_month_pt_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_parent_fee_per_month_pt_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_parent_fee_per_month_pt_school_age")]
        public Microsoft.Xrm.Sdk.Money ofm_parent_fee_per_month_pt_school_age
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_parent_fee_per_month_pt_school_age");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_parent_fee_per_month_pt_school_age", value);
            }
        }

        /// <summary>
        /// Value of the School Age Parent Fee Per Month (Parent - Time)  in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_parent_fee_per_month_pt_school_age_base")]
        public Microsoft.Xrm.Sdk.Money ofm_parent_fee_per_month_pt_school_age_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_parent_fee_per_month_pt_school_age_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pde_cultural_training")]
        public Microsoft.Xrm.Sdk.Money ofm_pde_cultural_training
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_pde_cultural_training");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_pde_cultural_training", value);
            }
        }

        /// <summary>
        /// Value of the Professional Development Cultural Training in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pde_cultural_training_base")]
        public Microsoft.Xrm.Sdk.Money ofm_pde_cultural_training_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_pde_cultural_training_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pde_inclusion_training")]
        public Microsoft.Xrm.Sdk.Money ofm_pde_inclusion_training
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_pde_inclusion_training");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_pde_inclusion_training", value);
            }
        }

        /// <summary>
        /// Value of the Professional Development Inclusion Training in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pde_inclusion_training_base")]
        public Microsoft.Xrm.Sdk.Money ofm_pde_inclusion_training_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_pde_inclusion_training_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_professional_development_hours")]
        public System.Nullable<int> ofm_professional_development_hours
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_professional_development_hours");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_professional_development_hours", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pto_breaks")]
        public System.Nullable<decimal> ofm_pto_breaks
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_pto_breaks");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_pto_breaks", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_quality_enhancement_factor")]
        public System.Nullable<decimal> ofm_quality_enhancement_factor
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_quality_enhancement_factor");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_quality_enhancement_factor", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_rate_scheduleid")]
        public System.Nullable<System.Guid> ofm_rate_scheduleid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_rate_scheduleid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_rate_scheduleid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_rate_scheduleid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_rate_scheduleid = value;
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_schedule_number")]
        public System.Nullable<int> ofm_schedule_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_schedule_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_schedule_number", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_sick_hours_per_fte")]
        public System.Nullable<decimal> ofm_sick_hours_per_fte
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_sick_hours_per_fte");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_standard_dues_per_fte")]
        public Microsoft.Xrm.Sdk.Money ofm_standard_dues_per_fte
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_standard_dues_per_fte");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_standard_dues_per_fte", value);
            }
        }

        /// <summary>
        /// Value of the Standard Dues/FTE in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_standard_dues_per_fte_base")]
        public Microsoft.Xrm.Sdk.Money ofm_standard_dues_per_fte_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_standard_dues_per_fte_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_start_date")]
        public System.Nullable<System.DateTime> ofm_start_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_start_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_start_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_statutory_breaks")]
        public System.Nullable<decimal> ofm_statutory_breaks
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_statutory_breaks");
            }
        }

        /// <summary>
        /// Supervisor Rate
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supervisor_rate")]
        public Microsoft.Xrm.Sdk.Money ofm_supervisor_rate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_supervisor_rate");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_supervisor_rate", value);
            }
        }

        /// <summary>
        /// Value of the Supervisor Rate in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supervisor_rate_base")]
        public Microsoft.Xrm.Sdk.Money ofm_supervisor_rate_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_supervisor_rate_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supervisor_ratio")]
        public System.Nullable<int> ofm_supervisor_ratio
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_supervisor_ratio");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_supervisor_ratio", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_total_fte_hours_per_year")]
        public System.Nullable<decimal> ofm_total_fte_hours_per_year
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_total_fte_hours_per_year");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_vacation_hours_per_fte")]
        public System.Nullable<decimal> ofm_vacation_hours_per_fte
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_vacation_hours_per_fte");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wage_grid_markup")]
        public System.Nullable<decimal> ofm_wage_grid_markup
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_wage_grid_markup");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_wage_grid_markup", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wages_ece_cost")]
        public Microsoft.Xrm.Sdk.Money ofm_wages_ece_cost
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_wages_ece_cost");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_wages_ece_cost", value);
            }
        }

        /// <summary>
        /// Value of the ECE Cost in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wages_ece_cost_base")]
        public Microsoft.Xrm.Sdk.Money ofm_wages_ece_cost_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_wages_ece_cost_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wages_ecea_cost")]
        public Microsoft.Xrm.Sdk.Money ofm_wages_ecea_cost
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_wages_ecea_cost");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_wages_ecea_cost", value);
            }
        }

        /// <summary>
        /// Value of the ECEA Cost in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wages_ecea_cost_base")]
        public Microsoft.Xrm.Sdk.Money ofm_wages_ecea_cost_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_wages_ecea_cost_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wages_ite_cost")]
        public Microsoft.Xrm.Sdk.Money ofm_wages_ite_cost
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_wages_ite_cost");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_wages_ite_cost", value);
            }
        }

        /// <summary>
        /// Value of the ITE cost in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wages_ite_cost_base")]
        public Microsoft.Xrm.Sdk.Money ofm_wages_ite_cost_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_wages_ite_cost_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wages_ra_cost")]
        public Microsoft.Xrm.Sdk.Money ofm_wages_ra_cost
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_wages_ra_cost");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_wages_ra_cost", value);
            }
        }

        /// <summary>
        /// Value of the RA Cost in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wages_ra_cost_base")]
        public Microsoft.Xrm.Sdk.Money ofm_wages_ra_cost_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_wages_ra_cost_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wcb")]
        public System.Nullable<decimal> ofm_wcb
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_wcb");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_wcb", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_weeks_in_a_year")]
        public System.Nullable<int> ofm_weeks_in_a_year
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_weeks_in_a_year");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_weeks_in_a_year", value);
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Rate Schedule
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_rate_schedule_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_rate_schedule_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Rate Schedule
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_rate_schedule_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_rate_schedule_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the currency associated with the entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("transactioncurrencyid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
        public string transactioncurrencyidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("transactioncurrencyid"))
                {
                    return this.FormattedValues["transactioncurrencyid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N ofm_rateschedule_cclr
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_rateschedule_cclr")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_cclr_ratio> ofm_rateschedule_cclr
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_cclr_ratio>("ofm_rateschedule_cclr", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_cclr_ratio>("ofm_rateschedule_cclr", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_rateschedule_funding
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_rateschedule_funding")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_funding> ofm_rateschedule_funding
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_funding>("ofm_rateschedule_funding", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_funding>("ofm_rateschedule_funding", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_rateschedule_fundingrate
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_rateschedule_fundingrate")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_funding_rate> ofm_rateschedule_fundingrate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_funding_rate>("ofm_rateschedule_fundingrate", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_funding_rate>("ofm_rateschedule_fundingrate", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_rate_schedule
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_rate_schedule")]
        public ECC.Core.DataContext.Team team_ofm_rate_schedule
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_rate_schedule", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_rate_schedule(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_rate_scheduleid"] = base.Id;
                        break;
                    case "ofm_rate_scheduleid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// OFM Reminder Record
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_reminder")]
    public partial class ofm_reminder : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_reminder entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_application = "ofm_application";
            public const string ofm_application_reminder = "ofm_application_reminder";
            public const string ofm_applicationname = "ofm_applicationname";
            public const string ofm_caption = "ofm_caption";
            public const string ofm_completed_on = "ofm_completed_on";
            public const string ofm_due_date = "ofm_due_date";
            public const string ofm_email = "ofm_email";
            public const string ofm_email_reminder = "ofm_email_reminder";
            public const string ofm_emailname = "ofm_emailname";
            public const string ofm_reminder_allowance = "ofm_reminder_allowance";
            public const string ofm_reminderid = "ofm_reminderid";
            public const string Id = "ofm_reminderid";
            public const string ofm_template_number = "ofm_template_number";
            public const string ofm_year_number = "ofm_year_number";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_reminder = "team_ofm_reminder";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_reminder(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_reminder(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_reminder(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_reminder() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_reminderid";

        public const string PrimaryNameAttribute = "ofm_caption";

        public const string EntitySchemaName = "ofm_reminder";

        public const string EntityLogicalName = "ofm_reminder";

        public const string EntityLogicalCollectionName = "ofm_reminders";

        public const string EntitySetName = "ofm_reminders";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The associated application record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_application");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_application", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_applicationname")]
        public string ofm_applicationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_application"))
                {
                    return this.FormattedValues["ofm_application"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// OFM Reminder record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_caption")]
        public string ofm_caption
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_caption");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_caption", value);
            }
        }

        /// <summary>
        /// Completed On
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_completed_on")]
        public System.Nullable<System.DateTime> ofm_completed_on
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_completed_on");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_completed_on", value);
            }
        }

        /// <summary>
        /// Due Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_due_date")]
        public System.Nullable<System.DateTime> ofm_due_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_due_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_due_date", value);
            }
        }

        /// <summary>
        /// The associated Email record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_email")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_email
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_email");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_email", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_emailname")]
        public string ofm_emailname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_email"))
                {
                    return this.FormattedValues["ofm_email"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_reminderid")]
        public System.Nullable<System.Guid> ofm_reminderid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_reminderid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_reminderid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_reminderid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_reminderid = value;
            }
        }

        /// <summary>
        /// Template Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_template_number")]
        public System.Nullable<int> ofm_template_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_template_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_template_number", value);
            }
        }

        /// <summary>
        /// Year Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_year_number")]
        public System.Nullable<int> ofm_year_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_year_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_year_number", value);
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Reminder
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_reminder_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_reminder_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Reminder
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_reminder_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_reminder_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N ofm_reminder_allowance
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_reminder_allowance")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_allowance> ofm_reminder_allowance
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_allowance>("ofm_reminder_allowance", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_allowance>("ofm_reminder_allowance", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_application_reminder
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_application_reminder")]
        public ECC.Core.DataContext.ofm_application ofm_application_reminder
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_application_reminder", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_application_reminder", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_email_reminder
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_email")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_email_reminder")]
        public ECC.Core.DataContext.Email ofm_email_reminder
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Email>("ofm_email_reminder", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Email>("ofm_email_reminder", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_reminder
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_reminder")]
        public ECC.Core.DataContext.Team team_ofm_reminder
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_reminder", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_reminder(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_reminderid"] = base.Id;
                        break;
                    case "ofm_reminderid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_request_category")]
    public partial class ofm_request_category : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_request_category entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_assistance_request_category = "ofm_assistance_request_category";
            public const string ofm_name = "ofm_name";
            public const string ofm_request_category_number = "ofm_request_category_number";
            public const string ofm_request_categoryid = "ofm_request_categoryid";
            public const string Id = "ofm_request_categoryid";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_request_category = "team_ofm_request_category";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_request_category(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_request_category(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_request_category(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ofm_request_category_number";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_request_category() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_request_categoryid";

        public const string PrimaryNameAttribute = "ofm_name";

        public const string EntitySchemaName = "ofm_request_category";

        public const string EntityLogicalName = "ofm_request_category";

        public const string EntityLogicalCollectionName = "ofm_request_categories";

        public const string EntitySetName = "ofm_request_categories";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
        public string ofm_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_name", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_request_category_number")]
        public System.Nullable<int> ofm_request_category_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_request_category_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_request_category_number", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_request_categoryid")]
        public System.Nullable<System.Guid> ofm_request_categoryid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_request_categoryid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_request_categoryid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_request_categoryid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_request_categoryid = value;
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Request Category
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_request_category_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_request_category_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Request Category
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_request_category_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_request_category_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N ofm_assistance_request_category
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_assistance_request_category")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_assistance_request> ofm_assistance_request_category
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_assistance_request>("ofm_assistance_request_category", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_assistance_request>("ofm_assistance_request_category", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_request_category
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_request_category")]
        public ECC.Core.DataContext.Team team_ofm_request_category
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_request_category", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_request_category(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_request_categoryid"] = base.Id;
                        break;
                    case "ofm_request_categoryid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// A section on a report
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_section")]
    public partial class ofm_section : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_section entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_customer_voice_survey_id = "ofm_customer_voice_survey_id";
            public const string ofm_is_published = "ofm_is_published";
            public const string ofm_is_publishedname = "ofm_is_publishedname";
            public const string ofm_name = "ofm_name";
            public const string ofm_section_order = "ofm_section_order";
            public const string ofm_section_question = "ofm_section_question";
            public const string ofm_section_question_business_rule = "ofm_section_question_business_rule";
            public const string ofm_section_title = "ofm_section_title";
            public const string ofm_sectionid = "ofm_sectionid";
            public const string Id = "ofm_sectionid";
            public const string ofm_source_section_id = "ofm_source_section_id";
            public const string ofm_survey = "ofm_survey";
            public const string ofm_survey_section = "ofm_survey_section";
            public const string ofm_surveyname = "ofm_surveyname";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_section = "team_ofm_section";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_section(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_section(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_section(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_section() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_sectionid";

        public const string PrimaryNameAttribute = "ofm_name";

        public const string EntitySchemaName = "ofm_section";

        public const string EntityLogicalName = "ofm_section";

        public const string EntityLogicalCollectionName = "ofm_sections";

        public const string EntitySetName = "ofm_sections";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_customer_voice_survey_id")]
        public string ofm_customer_voice_survey_id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_customer_voice_survey_id");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_customer_voice_survey_id", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_is_published")]
        public System.Nullable<bool> ofm_is_published
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_is_published");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_is_published", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_is_publishedname")]
        public string ofm_is_publishedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_is_published"))
                {
                    return this.FormattedValues["ofm_is_published"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The name of the custom entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
        public string ofm_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_name", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_section_order")]
        public System.Nullable<int> ofm_section_order
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_section_order");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_section_order", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_section_title")]
        public string ofm_section_title
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_section_title");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_section_title", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_sectionid")]
        public System.Nullable<System.Guid> ofm_sectionid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_sectionid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_sectionid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_sectionid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_sectionid = value;
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_source_section_id")]
        public string ofm_source_section_id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_source_section_id");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_source_section_id", value);
            }
        }

        /// <summary>
        /// Unique identifier for Survey associated with Section.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_survey")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_survey
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_survey");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_survey", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_surveyname")]
        public string ofm_surveyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_survey"))
                {
                    return this.FormattedValues["ofm_survey"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Section
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_section_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_section_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Section
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_section_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_section_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N ofm_section_question
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_section_question")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_question> ofm_section_question
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_question>("ofm_section_question", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_question>("ofm_section_question", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_section_question_business_rule
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_section_question_business_rule")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_question_business_rule> ofm_section_question_business_rule
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_question_business_rule>("ofm_section_question_business_rule", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_question_business_rule>("ofm_section_question_business_rule", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_survey_section
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_survey")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_survey_section")]
        public ECC.Core.DataContext.ofm_survey ofm_survey_section
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_survey>("ofm_survey_section", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_survey>("ofm_survey_section", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_section
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_section")]
        public ECC.Core.DataContext.Team team_ofm_section
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_section", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_section(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_sectionid"] = base.Id;
                        break;
                    case "ofm_sectionid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// Space Allocation
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_space_allocation")]
    public partial class ofm_space_allocation : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_space_allocation entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_adjusted_allocation = "ofm_adjusted_allocation";
            public const string ofm_caption = "ofm_caption";
            public const string ofm_cclr_ratio = "ofm_cclr_ratio";
            public const string ofm_cclr_rationame = "ofm_cclr_rationame";
            public const string ofm_cclr_spaceallocation = "ofm_cclr_spaceallocation";
            public const string ofm_default_allocation = "ofm_default_allocation";
            public const string ofm_funding = "ofm_funding";
            public const string ofm_funding_spaceallocation = "ofm_funding_spaceallocation";
            public const string ofm_fundingname = "ofm_fundingname";
            public const string ofm_order_number = "ofm_order_number";
            public const string ofm_space_allocationid = "ofm_space_allocationid";
            public const string Id = "ofm_space_allocationid";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_space_allocation = "team_ofm_space_allocation";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_space_allocation(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_space_allocation(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_space_allocation(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ofm_cclr_ratio,ofm_funding";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_space_allocation() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_space_allocationid";

        public const string PrimaryNameAttribute = "ofm_caption";

        public const string EntitySchemaName = "ofm_space_allocation";

        public const string EntityLogicalName = "ofm_space_allocation";

        public const string EntityLogicalCollectionName = "ofm_space_allocations";

        public const string EntitySetName = "ofm_space_allocations";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// New Allocation
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_adjusted_allocation")]
        public System.Nullable<int> ofm_adjusted_allocation
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_adjusted_allocation");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_adjusted_allocation", value);
            }
        }

        /// <summary>
        /// ID
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_caption")]
        public string ofm_caption
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_caption");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_caption", value);
            }
        }

        /// <summary>
        /// The associated CCLR Ratio
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cclr_ratio")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_cclr_ratio
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_cclr_ratio");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_cclr_ratio", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cclr_rationame")]
        public string ofm_cclr_rationame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_cclr_ratio"))
                {
                    return this.FormattedValues["ofm_cclr_ratio"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Default Allocation
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_default_allocation")]
        public System.Nullable<int> ofm_default_allocation
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_default_allocation");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_default_allocation", value);
            }
        }

        /// <summary>
        /// The associated Funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_funding")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_funding
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_funding");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_funding", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fundingname")]
        public string ofm_fundingname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_funding"))
                {
                    return this.FormattedValues["ofm_funding"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_order_number")]
        public System.Nullable<int> ofm_order_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_order_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_order_number", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_space_allocationid")]
        public System.Nullable<System.Guid> ofm_space_allocationid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_space_allocationid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_space_allocationid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_space_allocationid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_space_allocationid = value;
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Space Allocation
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_space_allocation_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_space_allocation_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Space Allocation
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_space_allocation_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_space_allocation_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 ofm_cclr_spaceallocation
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cclr_ratio")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_cclr_spaceallocation")]
        public ECC.Core.DataContext.ofm_cclr_ratio ofm_cclr_spaceallocation
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_cclr_ratio>("ofm_cclr_spaceallocation", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_cclr_ratio>("ofm_cclr_spaceallocation", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_funding_spaceallocation
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_funding")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_funding_spaceallocation")]
        public ECC.Core.DataContext.ofm_funding ofm_funding_spaceallocation
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_funding>("ofm_funding_spaceallocation", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_funding>("ofm_funding_spaceallocation", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_space_allocation
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_space_allocation")]
        public ECC.Core.DataContext.Team team_ofm_space_allocation
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_space_allocation", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_space_allocation(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_space_allocationid"] = base.Id;
                        break;
                    case "ofm_space_allocationid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// Standing History
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_standing_history")]
    public partial class ofm_standing_history : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_standing_history entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_caption = "ofm_caption";
            public const string ofm_duration = "ofm_duration";
            public const string ofm_end_date = "ofm_end_date";
            public const string ofm_good_standing_status = "ofm_good_standing_status";
            public const string ofm_good_standing_statusname = "ofm_good_standing_statusname";
            public const string ofm_no_counter = "ofm_no_counter";
            public const string ofm_organization = "ofm_organization";
            public const string ofm_organization_standing_history = "ofm_organization_standing_history";
            public const string ofm_organizationname = "ofm_organizationname";
            public const string ofm_organizationyominame = "ofm_organizationyominame";
            public const string ofm_standing_historyid = "ofm_standing_historyid";
            public const string Id = "ofm_standing_historyid";
            public const string ofm_start_date = "ofm_start_date";
            public const string ofm_validated_on = "ofm_validated_on";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_standing_history = "team_ofm_standing_history";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_standing_history(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_standing_history(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_standing_history(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_standing_history() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_standing_historyid";

        public const string PrimaryNameAttribute = "ofm_caption";

        public const string EntitySchemaName = "ofm_standing_history";

        public const string EntityLogicalName = "ofm_standing_history";

        public const string EntityLogicalCollectionName = "ofm_standing_histories";

        public const string EntitySetName = "ofm_standing_histories";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// ID
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_caption")]
        public string ofm_caption
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_caption");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_caption", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_duration")]
        public System.Nullable<decimal> ofm_duration
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_duration");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_duration", value);
            }
        }

        /// <summary>
        /// End Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_end_date")]
        public System.Nullable<System.DateTime> ofm_end_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_end_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_end_date", value);
            }
        }

        /// <summary>
        /// Good Standing Status
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_good_standing_status")]
        public virtual ecc_ynempty? ofm_good_standing_status
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_good_standing_status")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_good_standing_status", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_good_standing_statusname")]
        public string ofm_good_standing_statusname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_good_standing_status"))
                {
                    return this.FormattedValues["ofm_good_standing_status"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_no_counter")]
        public System.Nullable<int> ofm_no_counter
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_no_counter");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_no_counter", value);
            }
        }

        /// <summary>
        /// The associated organization
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_organization")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_organization
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_organization");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_organization", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_organizationname")]
        public string ofm_organizationname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_organization"))
                {
                    return this.FormattedValues["ofm_organization"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_organizationyominame")]
        public string ofm_organizationyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_organization"))
                {
                    return this.FormattedValues["ofm_organization"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_standing_historyid")]
        public System.Nullable<System.Guid> ofm_standing_historyid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_standing_historyid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_standing_historyid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_standing_historyid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_standing_historyid = value;
            }
        }

        /// <summary>
        /// Start Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_start_date")]
        public System.Nullable<System.DateTime> ofm_start_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_start_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_start_date", value);
            }
        }

        /// <summary>
        /// Validated On
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_validated_on")]
        public System.Nullable<System.DateTime> ofm_validated_on
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_validated_on");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_validated_on", value);
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Standing History
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_standing_history_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_standing_history_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Standing History
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_standing_history_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_standing_history_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 ofm_organization_standing_history
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_organization")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_organization_standing_history")]
        public ECC.Core.DataContext.Account ofm_organization_standing_history
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Account>("ofm_organization_standing_history", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Account>("ofm_organization_standing_history", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_standing_history
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_standing_history")]
        public ECC.Core.DataContext.Team team_ofm_standing_history
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_standing_history", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_standing_history(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_standing_historyid"] = base.Id;
                        break;
                    case "ofm_standing_historyid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// MyCCS Statutory Holiday Record
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_stat_holiday")]
    public partial class ofm_stat_holiday : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_stat_holiday entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_caption = "ofm_caption";
            public const string ofm_date_observed = "ofm_date_observed";
            public const string ofm_holiday_date = "ofm_holiday_date";
            public const string ofm_holiday_type = "ofm_holiday_type";
            public const string ofm_holiday_typename = "ofm_holiday_typename";
            public const string ofm_name = "ofm_name";
            public const string ofm_selected_year = "ofm_selected_year";
            public const string ofm_stat_holidayid = "ofm_stat_holidayid";
            public const string Id = "ofm_stat_holidayid";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_stat_holiday = "team_ofm_stat_holiday";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_stat_holiday(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_stat_holiday(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_stat_holiday(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_stat_holiday() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_stat_holidayid";

        public const string PrimaryNameAttribute = "ofm_caption";

        public const string EntitySchemaName = "ofm_stat_holiday";

        public const string EntityLogicalName = "ofm_stat_holiday";

        public const string EntityLogicalCollectionName = "ofm_stat_holidaies";

        public const string EntitySetName = "ofm_stat_holidaies";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// MyCCS Statutory Holiday record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_caption")]
        public string ofm_caption
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_caption");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_caption", value);
            }
        }

        /// <summary>
        /// Date Observed (if holiday falls on weekend)
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_date_observed")]
        public System.Nullable<System.DateTime> ofm_date_observed
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_date_observed");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_date_observed", value);
            }
        }

        /// <summary>
        /// Stat Day
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_holiday_date")]
        public System.Nullable<System.DateTime> ofm_holiday_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_holiday_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_holiday_date", value);
            }
        }

        /// <summary>
        /// Type
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_holiday_type")]
        public virtual ecc_holiday_type? ofm_holiday_type
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_holiday_type?)(EntityOptionSetEnum.GetEnum(this, "ofm_holiday_type")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_holiday_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_holiday_typename")]
        public string ofm_holiday_typename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_holiday_type"))
                {
                    return this.FormattedValues["ofm_holiday_type"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Holiday Name
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
        public string ofm_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_name", value);
            }
        }

        /// <summary>
        /// Selected Year
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_selected_year")]
        public System.Nullable<int> ofm_selected_year
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_selected_year");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_selected_year", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_stat_holidayid")]
        public System.Nullable<System.Guid> ofm_stat_holidayid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_stat_holidayid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_stat_holidayid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_stat_holidayid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_stat_holidayid = value;
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Statutory Holiday
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_stat_holiday_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_stat_holiday_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Statutory Holiday
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_stat_holiday_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_stat_holiday_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 team_ofm_stat_holiday
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_stat_holiday")]
        public ECC.Core.DataContext.Team team_ofm_stat_holiday
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_stat_holiday", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_stat_holiday(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_stat_holidayid"] = base.Id;
                        break;
                    case "ofm_stat_holidayid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_subcategory")]
    public partial class ofm_subcategory : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_subcategory entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_display_order = "ofm_display_order";
            public const string ofm_name = "ofm_name";
            public const string ofm_subcategoryid = "ofm_subcategoryid";
            public const string Id = "ofm_subcategoryid";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_subcategory = "team_ofm_subcategory";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_subcategory(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_subcategory(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_subcategory(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ofm_display_order";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_subcategory() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_subcategoryid";

        public const string PrimaryNameAttribute = "ofm_name";

        public const string EntitySchemaName = "ofm_subcategory";

        public const string EntityLogicalName = "ofm_subcategory";

        public const string EntityLogicalCollectionName = "ofm_subcategories";

        public const string EntitySetName = "ofm_subcategories";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_display_order")]
        public System.Nullable<int> ofm_display_order
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_display_order");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_display_order", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
        public string ofm_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_name", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_subcategoryid")]
        public System.Nullable<System.Guid> ofm_subcategoryid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_subcategoryid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_subcategoryid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_subcategoryid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_subcategoryid = value;
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Sub-Category
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_subcategory_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_subcategory_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Sub-Category
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_subcategory_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_subcategory_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 team_ofm_subcategory
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_subcategory")]
        public ECC.Core.DataContext.Team team_ofm_subcategory
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_subcategory", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_subcategory(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_subcategoryid"] = base.Id;
                        break;
                    case "ofm_subcategoryid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// Supplementary Schedule Record Per Calendar Year
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_supplementary_schedule")]
    public partial class ofm_supplementary_schedule : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_supplementary_schedule entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string exchangerate = "exchangerate";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_caption = "ofm_caption";
            public const string ofm_end_date = "ofm_end_date";
            public const string ofm_indigenous_between_limits_amount = "ofm_indigenous_between_limits_amount";
            public const string ofm_indigenous_between_limits_amount_base = "ofm_indigenous_between_limits_amount_base";
            public const string ofm_indigenous_greater_upper_limit_amount = "ofm_indigenous_greater_upper_limit_amount";
            public const string ofm_indigenous_greater_upper_limit_amount_base = "ofm_indigenous_greater_upper_limit_amount_base";
            public const string ofm_indigenous_less_lower_limit_amount = "ofm_indigenous_less_lower_limit_amount";
            public const string ofm_indigenous_less_lower_limit_amount_base = "ofm_indigenous_less_lower_limit_amount_base";
            public const string ofm_needs_between_limits_amount = "ofm_needs_between_limits_amount";
            public const string ofm_needs_between_limits_amount_base = "ofm_needs_between_limits_amount_base";
            public const string ofm_needs_greater_upper_limit_amount = "ofm_needs_greater_upper_limit_amount";
            public const string ofm_needs_greater_upper_limit_amount_base = "ofm_needs_greater_upper_limit_amount_base";
            public const string ofm_needs_less_lower_limit_amount = "ofm_needs_less_lower_limit_amount";
            public const string ofm_needs_less_lower_limit_amount_base = "ofm_needs_less_lower_limit_amount_base";
            public const string ofm_overnight_care_premium = "ofm_overnight_care_premium";
            public const string ofm_schedule_number = "ofm_schedule_number";
            public const string ofm_space_lower_limit = "ofm_space_lower_limit";
            public const string ofm_space_upper_limit = "ofm_space_upper_limit";
            public const string ofm_sqw_caps_for_centers = "ofm_sqw_caps_for_centers";
            public const string ofm_sqw_caps_for_homebased = "ofm_sqw_caps_for_homebased";
            public const string ofm_start_date = "ofm_start_date";
            public const string ofm_supplementary_scheduleid = "ofm_supplementary_scheduleid";
            public const string Id = "ofm_supplementary_scheduleid";
            public const string ofm_supplementaryschedule_allowance = "ofm_supplementaryschedule_allowance";
            public const string ofm_transport_ge_20_spaces_lease_cap_month = "ofm_transport_ge_20_spaces_lease_cap_month";
            public const string ofm_transport_ge_20_spaces_lease_cap_month_base = "ofm_transport_ge_20_spaces_lease_cap_month_base";
            public const string ofm_transport_less_20_spaces_lease_cap_month = "ofm_transport_less_20_spaces_lease_cap_month";
            public const string ofm_transport_less_20_spaces_lease_cap_month_base = "ofm_transport_less_20_spaces_lease_cap_month_base";
            public const string ofm_transport_reimbursement_rate_per_km = "ofm_transport_reimbursement_rate_per_km";
            public const string ofm_transport_reimbursement_rate_per_km_base = "ofm_transport_reimbursement_rate_per_km_base";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_supplementary_schedule = "team_ofm_supplementary_schedule";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string transactioncurrencyid = "transactioncurrencyid";
            public const string transactioncurrencyidname = "transactioncurrencyidname";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_supplementary_schedule(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_supplementary_schedule(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_supplementary_schedule(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ofm_schedule_number";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_supplementary_schedule() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_supplementary_scheduleid";

        public const string PrimaryNameAttribute = "ofm_caption";

        public const string EntitySchemaName = "ofm_supplementary_schedule";

        public const string EntityLogicalName = "ofm_supplementary_schedule";

        public const string EntityLogicalCollectionName = "ofm_supplementary_schedules";

        public const string EntitySetName = "ofm_supplementary_schedules";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Exchange rate for the currency associated with the entity with respect to the base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
        public System.Nullable<decimal> exchangerate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// OFM Supplementary Schedule Record Identifier
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_caption")]
        public string ofm_caption
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_caption");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_caption", value);
            }
        }

        /// <summary>
        /// End Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_end_date")]
        public System.Nullable<System.DateTime> ofm_end_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_end_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_end_date", value);
            }
        }

        /// <summary>
        /// Facilities with 10 - 20 spaces
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_indigenous_between_limits_amount")]
        public Microsoft.Xrm.Sdk.Money ofm_indigenous_between_limits_amount
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_indigenous_between_limits_amount");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_indigenous_between_limits_amount", value);
            }
        }

        /// <summary>
        /// Value of the Facilities with 10 - 20 spaces in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_indigenous_between_limits_amount_base")]
        public Microsoft.Xrm.Sdk.Money ofm_indigenous_between_limits_amount_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_indigenous_between_limits_amount_base");
            }
        }

        /// <summary>
        /// Facilities with 20+ spaces
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_indigenous_greater_upper_limit_amount")]
        public Microsoft.Xrm.Sdk.Money ofm_indigenous_greater_upper_limit_amount
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_indigenous_greater_upper_limit_amount");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_indigenous_greater_upper_limit_amount", value);
            }
        }

        /// <summary>
        /// Value of the Facilities with 20+ spaces in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_indigenous_greater_upper_limit_amount_base")]
        public Microsoft.Xrm.Sdk.Money ofm_indigenous_greater_upper_limit_amount_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_indigenous_greater_upper_limit_amount_base");
            }
        }

        /// <summary>
        /// Facilities with 9 or less spaces
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_indigenous_less_lower_limit_amount")]
        public Microsoft.Xrm.Sdk.Money ofm_indigenous_less_lower_limit_amount
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_indigenous_less_lower_limit_amount");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_indigenous_less_lower_limit_amount", value);
            }
        }

        /// <summary>
        /// Value of the Facilities with 9 or less spaces in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_indigenous_less_lower_limit_amount_base")]
        public Microsoft.Xrm.Sdk.Money ofm_indigenous_less_lower_limit_amount_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_indigenous_less_lower_limit_amount_base");
            }
        }

        /// <summary>
        /// Facilities with 10 - 20 spaces
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_needs_between_limits_amount")]
        public Microsoft.Xrm.Sdk.Money ofm_needs_between_limits_amount
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_needs_between_limits_amount");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_needs_between_limits_amount", value);
            }
        }

        /// <summary>
        /// Value of the Facilities with 10 - 20 spaces in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_needs_between_limits_amount_base")]
        public Microsoft.Xrm.Sdk.Money ofm_needs_between_limits_amount_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_needs_between_limits_amount_base");
            }
        }

        /// <summary>
        /// Facilities with 20+ spaces
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_needs_greater_upper_limit_amount")]
        public Microsoft.Xrm.Sdk.Money ofm_needs_greater_upper_limit_amount
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_needs_greater_upper_limit_amount");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_needs_greater_upper_limit_amount", value);
            }
        }

        /// <summary>
        /// Value of the Facilities with 20+ spaces in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_needs_greater_upper_limit_amount_base")]
        public Microsoft.Xrm.Sdk.Money ofm_needs_greater_upper_limit_amount_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_needs_greater_upper_limit_amount_base");
            }
        }

        /// <summary>
        /// Facilities with 9 or less spaces
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_needs_less_lower_limit_amount")]
        public Microsoft.Xrm.Sdk.Money ofm_needs_less_lower_limit_amount
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_needs_less_lower_limit_amount");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_needs_less_lower_limit_amount", value);
            }
        }

        /// <summary>
        /// Value of the Facilities with 9 or less spaces in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_needs_less_lower_limit_amount_base")]
        public Microsoft.Xrm.Sdk.Money ofm_needs_less_lower_limit_amount_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_needs_less_lower_limit_amount_base");
            }
        }

        /// <summary>
        /// Premium
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_overnight_care_premium")]
        public System.Nullable<decimal> ofm_overnight_care_premium
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_overnight_care_premium");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_overnight_care_premium", value);
            }
        }

        /// <summary>
        /// Schedule Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_schedule_number")]
        public System.Nullable<int> ofm_schedule_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_schedule_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_schedule_number", value);
            }
        }

        /// <summary>
        /// Space Lower Limit
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_space_lower_limit")]
        public System.Nullable<int> ofm_space_lower_limit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_space_lower_limit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_space_lower_limit", value);
            }
        }

        /// <summary>
        /// Space Upper Limit
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_space_upper_limit")]
        public System.Nullable<int> ofm_space_upper_limit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_space_upper_limit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_space_upper_limit", value);
            }
        }

        /// <summary>
        /// Caps for Centers
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_sqw_caps_for_centers")]
        public System.Nullable<decimal> ofm_sqw_caps_for_centers
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_sqw_caps_for_centers");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_sqw_caps_for_centers", value);
            }
        }

        /// <summary>
        /// Caps for Home-based
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_sqw_caps_for_homebased")]
        public System.Nullable<decimal> ofm_sqw_caps_for_homebased
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("ofm_sqw_caps_for_homebased");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_sqw_caps_for_homebased", value);
            }
        }

        /// <summary>
        /// Start Date
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_start_date")]
        public System.Nullable<System.DateTime> ofm_start_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_start_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_start_date", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supplementary_scheduleid")]
        public System.Nullable<System.Guid> ofm_supplementary_scheduleid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_supplementary_scheduleid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_supplementary_scheduleid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supplementary_scheduleid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_supplementary_scheduleid = value;
            }
        }

        /// <summary>
        /// >= 20 spaces lease cap/month
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_transport_ge_20_spaces_lease_cap_month")]
        public Microsoft.Xrm.Sdk.Money ofm_transport_ge_20_spaces_lease_cap_month
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_transport_ge_20_spaces_lease_cap_month");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_transport_ge_20_spaces_lease_cap_month", value);
            }
        }

        /// <summary>
        /// Value of the >= 20 spaces lease cap/month in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_transport_ge_20_spaces_lease_cap_month_base")]
        public Microsoft.Xrm.Sdk.Money ofm_transport_ge_20_spaces_lease_cap_month_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_transport_ge_20_spaces_lease_cap_month_base");
            }
        }

        /// <summary>
        /// < 20 spaces lease cap/month
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_transport_less_20_spaces_lease_cap_month")]
        public Microsoft.Xrm.Sdk.Money ofm_transport_less_20_spaces_lease_cap_month
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_transport_less_20_spaces_lease_cap_month");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_transport_less_20_spaces_lease_cap_month", value);
            }
        }

        /// <summary>
        /// Value of the < 20 spaces lease cap/month in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_transport_less_20_spaces_lease_cap_month_base")]
        public Microsoft.Xrm.Sdk.Money ofm_transport_less_20_spaces_lease_cap_month_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_transport_less_20_spaces_lease_cap_month_base");
            }
        }

        /// <summary>
        /// Transport reimbursement/km
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_transport_reimbursement_rate_per_km")]
        public Microsoft.Xrm.Sdk.Money ofm_transport_reimbursement_rate_per_km
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_transport_reimbursement_rate_per_km");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_transport_reimbursement_rate_per_km", value);
            }
        }

        /// <summary>
        /// Value of the Transport reimbursement/km in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_transport_reimbursement_rate_per_km_base")]
        public Microsoft.Xrm.Sdk.Money ofm_transport_reimbursement_rate_per_km_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_transport_reimbursement_rate_per_km_base");
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Supplementary Schedule
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_supplementary_schedule_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_supplementary_schedule_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Supplementary Schedule
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_supplementary_schedule_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_supplementary_schedule_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the currency associated with the entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("transactioncurrencyid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
        public string transactioncurrencyidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("transactioncurrencyid"))
                {
                    return this.FormattedValues["transactioncurrencyid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N ofm_supplementaryschedule_allowance
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_supplementaryschedule_allowance")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_allowance> ofm_supplementaryschedule_allowance
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_allowance>("ofm_supplementaryschedule_allowance", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_allowance>("ofm_supplementaryschedule_allowance", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_supplementary_schedule
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_supplementary_schedule")]
        public ECC.Core.DataContext.Team team_ofm_supplementary_schedule
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_supplementary_schedule", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_supplementary_schedule(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_supplementary_scheduleid"] = base.Id;
                        break;
                    case "ofm_supplementary_scheduleid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// OFM Report Template Created in Customer Voice
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_survey")]
    public partial class ofm_survey : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_survey entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_customervoiceprojectid = "ofm_customervoiceprojectid";
            public const string ofm_description = "ofm_description";
            public const string ofm_end_date = "ofm_end_date";
            public const string ofm_is_published = "ofm_is_published";
            public const string ofm_is_publishedname = "ofm_is_publishedname";
            public const string ofm_name = "ofm_name";
            public const string ofm_report_id = "ofm_report_id";
            public const string ofm_start_date = "ofm_start_date";
            public const string ofm_survey_section = "ofm_survey_section";
            public const string ofm_survey_survey_response = "ofm_survey_survey_response";
            public const string ofm_surveyid = "ofm_surveyid";
            public const string Id = "ofm_surveyid";
            public const string ofm_version = "ofm_version";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_survey = "team_ofm_survey";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_survey(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_survey(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_survey(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_survey() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_surveyid";

        public const string PrimaryNameAttribute = "ofm_name";

        public const string EntitySchemaName = "ofm_survey";

        public const string EntityLogicalName = "ofm_survey";

        public const string EntityLogicalCollectionName = "ofm_surveies";

        public const string EntitySetName = "ofm_surveies";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_customervoiceprojectid")]
        public string ofm_customervoiceprojectid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_customervoiceprojectid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_customervoiceprojectid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_description")]
        public string ofm_description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_description", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_end_date")]
        public System.Nullable<System.DateTime> ofm_end_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_end_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_end_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_is_published")]
        public System.Nullable<bool> ofm_is_published
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_is_published");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_is_published", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_is_publishedname")]
        public string ofm_is_publishedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_is_published"))
                {
                    return this.FormattedValues["ofm_is_published"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The name of the custom entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
        public string ofm_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_name", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_report_id")]
        public string ofm_report_id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_report_id");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_report_id", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_start_date")]
        public System.Nullable<System.DateTime> ofm_start_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_start_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_start_date", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_surveyid")]
        public System.Nullable<System.Guid> ofm_surveyid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_surveyid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_surveyid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_surveyid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_surveyid = value;
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_version")]
        public string ofm_version
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_version");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_version", value);
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Survey
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_survey_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_survey_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Survey
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_survey_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_survey_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N ofm_survey_section
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_survey_section")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_section> ofm_survey_section
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_section>("ofm_survey_section", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_section>("ofm_survey_section", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_survey_survey_response
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_survey_survey_response")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_survey_response> ofm_survey_survey_response
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_survey_response>("ofm_survey_survey_response", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_survey_response>("ofm_survey_survey_response", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_survey
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_survey")]
        public ECC.Core.DataContext.Team team_ofm_survey
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_survey", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_survey(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_surveyid"] = base.Id;
                        break;
                    case "ofm_surveyid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// A funding related report record submitted by a provider.
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_survey_response")]
    public partial class ofm_survey_response : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_survey_response entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_certificate_status = "ofm_certificate_status";
            public const string ofm_certificate_statusname = "ofm_certificate_statusname";
            public const string ofm_contact = "ofm_contact";
            public const string ofm_contact_survey_response = "ofm_contact_survey_response";
            public const string ofm_contactname = "ofm_contactname";
            public const string ofm_contactyominame = "ofm_contactyominame";
            public const string ofm_current_version = "ofm_current_version";
            public const string ofm_current_versionname = "ofm_current_versionname";
            public const string ofm_duedate = "ofm_duedate";
            public const string ofm_facility = "ofm_facility";
            public const string ofm_facility_survey_response = "ofm_facility_survey_response";
            public const string ofm_facilityname = "ofm_facilityname";
            public const string ofm_facilityyominame = "ofm_facilityyominame";
            public const string ofm_fiscal_year = "ofm_fiscal_year";
            public const string ofm_fiscal_year_survey_response = "ofm_fiscal_year_survey_response";
            public const string ofm_fiscal_yearname = "ofm_fiscal_yearname";
            public const string ofm_late_flag = "ofm_late_flag";
            public const string ofm_late_flagname = "ofm_late_flagname";
            public const string ofm_name = "ofm_name";
            public const string ofm_providerreport_employeecertificatestatus = "ofm_providerreport_employeecertificatestatus";
            public const string ofm_report_month = "ofm_report_month";
            public const string ofm_report_monthname = "ofm_report_monthname";
            public const string ofm_response_id = "ofm_response_id";
            public const string ofm_start_date = "ofm_start_date";
            public const string ofm_submitted_on = "ofm_submitted_on";
            public const string ofm_survey = "ofm_survey";
            public const string Referencingofm_survey_response_current_version = "ofm_survey_response_current_version";
            public const string ofm_survey_response_question_response = "ofm_survey_response_question_response";
            public const string ofm_survey_responseid = "ofm_survey_responseid";
            public const string Id = "ofm_survey_responseid";
            public const string ofm_survey_survey_response = "ofm_survey_survey_response";
            public const string ofm_surveyname = "ofm_surveyname";
            public const string ofm_unlock = "ofm_unlock";
            public const string ofm_unlock_date = "ofm_unlock_date";
            public const string ofm_unlock_reason = "ofm_unlock_reason";
            public const string ofm_unlockname = "ofm_unlockname";
            public const string ofm_version_number = "ofm_version_number";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string Referencedofm_survey_response_current_version = "Referencedofm_survey_response_current_version";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_survey_response = "team_ofm_survey_response";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_survey_response(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_survey_response(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_survey_response(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "ofm_response_id";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_survey_response() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_survey_responseid";

        public const string PrimaryNameAttribute = "ofm_name";

        public const string EntitySchemaName = "ofm_survey_response";

        public const string EntityLogicalName = "ofm_survey_response";

        public const string EntityLogicalCollectionName = "ofm_survey_responses";

        public const string EntitySetName = "ofm_survey_responses";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Certificate Status
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_certificate_status")]
        public virtual ecc_pass_fail_empty? ofm_certificate_status
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_pass_fail_empty?)(EntityOptionSetEnum.GetEnum(this, "ofm_certificate_status")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_certificate_status", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_certificate_statusname")]
        public string ofm_certificate_statusname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_certificate_status"))
                {
                    return this.FormattedValues["ofm_certificate_status"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for Contact associated with Survey Response.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_contact")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_contact
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_contact");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_contact", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_contactname")]
        public string ofm_contactname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_contact"))
                {
                    return this.FormattedValues["ofm_contact"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_contactyominame")]
        public string ofm_contactyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_contact"))
                {
                    return this.FormattedValues["ofm_contact"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_current_version")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_current_version
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_current_version");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_current_version", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_current_versionname")]
        public string ofm_current_versionname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_current_version"))
                {
                    return this.FormattedValues["ofm_current_version"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_duedate")]
        public System.Nullable<System.DateTime> ofm_duedate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_duedate");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_duedate", value);
            }
        }

        /// <summary>
        /// Unique identifier for Organization-Facility associated with Survey Response.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_facility
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_facility");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_facility", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilityname")]
        public string ofm_facilityname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_facility"))
                {
                    return this.FormattedValues["ofm_facility"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilityyominame")]
        public string ofm_facilityyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_facility"))
                {
                    return this.FormattedValues["ofm_facility"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for Fiscal Year associated with Survey Response.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fiscal_year")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_fiscal_year
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_fiscal_year");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_fiscal_year", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fiscal_yearname")]
        public string ofm_fiscal_yearname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_fiscal_year"))
                {
                    return this.FormattedValues["ofm_fiscal_year"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_late_flag")]
        public System.Nullable<bool> ofm_late_flag
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_late_flag");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_late_flag", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_late_flagname")]
        public string ofm_late_flagname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_late_flag"))
                {
                    return this.FormattedValues["ofm_late_flag"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The provider report Id.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
        public string ofm_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_name", value);
            }
        }

        /// <summary>
        /// The month of the provider report
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_report_month")]
        public virtual ecc_month? ofm_report_month
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ecc_month?)(EntityOptionSetEnum.GetEnum(this, "ofm_report_month")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_report_month", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_report_monthname")]
        public string ofm_report_monthname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_report_month"))
                {
                    return this.FormattedValues["ofm_report_month"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_response_id")]
        public string ofm_response_id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_response_id");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_response_id", value);
            }
        }

        /// <summary>
        /// The first date of the reporting month
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_start_date")]
        public System.Nullable<System.DateTime> ofm_start_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_start_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_start_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_submitted_on")]
        public System.Nullable<System.DateTime> ofm_submitted_on
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_submitted_on");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_submitted_on", value);
            }
        }

        /// <summary>
        /// Unique identifier for Report Template associated with the Provider Report.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_survey")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_survey
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_survey");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_survey", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_survey_responseid")]
        public System.Nullable<System.Guid> ofm_survey_responseid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_survey_responseid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_survey_responseid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_survey_responseid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_survey_responseid = value;
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_surveyname")]
        public string ofm_surveyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_survey"))
                {
                    return this.FormattedValues["ofm_survey"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_unlock")]
        public System.Nullable<bool> ofm_unlock
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_unlock");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_unlock", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_unlock_date")]
        public System.Nullable<System.DateTime> ofm_unlock_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_unlock_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_unlock_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_unlock_reason")]
        public string ofm_unlock_reason
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_unlock_reason");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_unlock_reason", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_unlockname")]
        public string ofm_unlockname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_unlock"))
                {
                    return this.FormattedValues["ofm_unlock"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_version_number")]
        public System.Nullable<int> ofm_version_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("ofm_version_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_version_number", value);
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Survey Response
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_survey_response_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_survey_response_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Survey Response
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_survey_response_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_survey_response_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N ofm_providerreport_employeecertificatestatus
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_providerreport_employeecertificatestatus")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_employee_certificate_status> ofm_providerreport_employeecertificatestatus
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_employee_certificate_status>("ofm_providerreport_employeecertificatestatus", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_employee_certificate_status>("ofm_providerreport_employeecertificatestatus", null, value);
            }
        }

        /// <summary>
        /// 1:N ofm_survey_response_current_version
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_survey_response_current_version", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_survey_response> Referencedofm_survey_response_current_version
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_survey_response>("ofm_survey_response_current_version", Microsoft.Xrm.Sdk.EntityRole.Referenced);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_survey_response>("ofm_survey_response_current_version", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
            }
        }

        /// <summary>
        /// 1:N ofm_survey_response_question_response
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_survey_response_question_response")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_question_response> ofm_survey_response_question_response
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_question_response>("ofm_survey_response_question_response", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_question_response>("ofm_survey_response_question_response", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_contact_survey_response
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_contact")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_contact_survey_response")]
        public ECC.Core.DataContext.Contact ofm_contact_survey_response
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_contact_survey_response", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_contact_survey_response", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_facility_survey_response
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_facility_survey_response")]
        public ECC.Core.DataContext.Account ofm_facility_survey_response
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Account>("ofm_facility_survey_response", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Account>("ofm_facility_survey_response", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_fiscal_year_survey_response
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fiscal_year")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_fiscal_year_survey_response")]
        public ECC.Core.DataContext.ofm_fiscal_year ofm_fiscal_year_survey_response
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_fiscal_year>("ofm_fiscal_year_survey_response", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_fiscal_year>("ofm_fiscal_year_survey_response", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_survey_response_current_version
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_current_version")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_survey_response_current_version", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
        public ECC.Core.DataContext.ofm_survey_response Referencingofm_survey_response_current_version
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_survey_response>("ofm_survey_response_current_version", Microsoft.Xrm.Sdk.EntityRole.Referencing);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_survey_response>("ofm_survey_response_current_version", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
            }
        }

        /// <summary>
        /// N:1 ofm_survey_survey_response
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_survey")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_survey_survey_response")]
        public ECC.Core.DataContext.ofm_survey ofm_survey_survey_response
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_survey>("ofm_survey_survey_response", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_survey>("ofm_survey_survey_response", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_survey_response
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_survey_response")]
        public ECC.Core.DataContext.Team team_ofm_survey_response
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_survey_response", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_survey_response(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_survey_responseid"] = base.Id;
                        break;
                    case "ofm_survey_responseid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_system_configuration")]
    public partial class ofm_system_configuration : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_system_configuration entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_name = "ofm_name";
            public const string ofm_system_configurationid = "ofm_system_configurationid";
            public const string Id = "ofm_system_configurationid";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_system_configuration = "team_ofm_system_configuration";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_system_configuration(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_system_configuration(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_system_configuration(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_system_configuration() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_system_configurationid";

        public const string PrimaryNameAttribute = "ofm_name";

        public const string EntitySchemaName = "ofm_system_configuration";

        public const string EntityLogicalName = "ofm_system_configuration";

        public const string EntityLogicalCollectionName = "ofm_system_configurations";

        public const string EntitySetName = "ofm_system_configurations";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
        public string ofm_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_name", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_system_configurationid")]
        public System.Nullable<System.Guid> ofm_system_configurationid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_system_configurationid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_system_configurationid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_system_configurationid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_system_configurationid = value;
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the System Configuration
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_system_configuration_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_system_configuration_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the System Configuration
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_system_configuration_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_system_configuration_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 team_ofm_system_configuration
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_system_configuration")]
        public ECC.Core.DataContext.Team team_ofm_system_configuration
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_system_configuration", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_system_configuration(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_system_configurationid"] = base.Id;
                        break;
                    case "ofm_system_configurationid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_system_message")]
    public partial class ofm_system_message : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_system_message entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_end_date = "ofm_end_date";
            public const string ofm_message = "ofm_message";
            public const string ofm_name = "ofm_name";
            public const string ofm_start_date = "ofm_start_date";
            public const string ofm_system_message_number = "ofm_system_message_number";
            public const string ofm_system_messageid = "ofm_system_messageid";
            public const string Id = "ofm_system_messageid";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_system_message = "team_ofm_system_message";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_system_message(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_system_message(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_system_message(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_system_message() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_system_messageid";

        public const string PrimaryNameAttribute = "ofm_name";

        public const string EntitySchemaName = "ofm_system_message";

        public const string EntityLogicalName = "ofm_system_message";

        public const string EntityLogicalCollectionName = "ofm_system_messages";

        public const string EntitySetName = "ofm_system_messages";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_end_date")]
        public System.Nullable<System.DateTime> ofm_end_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_end_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_end_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_message")]
        public string ofm_message
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_message");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_message", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
        public string ofm_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_name", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_start_date")]
        public System.Nullable<System.DateTime> ofm_start_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_start_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_start_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_system_message_number")]
        public string ofm_system_message_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_system_message_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_system_message_number", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_system_messageid")]
        public System.Nullable<System.Guid> ofm_system_messageid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_system_messageid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_system_messageid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_system_messageid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_system_messageid = value;
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the OFM System Message
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_system_message_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_system_message_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the OFM System Message
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_system_message_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_system_message_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 team_ofm_system_message
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_system_message")]
        public ECC.Core.DataContext.Team team_ofm_system_message
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_system_message", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_system_message(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_system_messageid"] = base.Id;
                        break;
                    case "ofm_system_messageid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_top_up_fund")]
    public partial class ofm_top_up_fund : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the ofm_top_up_fund entity
        /// </summary>
        public partial class Fields
        {
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string exchangerate = "exchangerate";
            public const string importsequencenumber = "importsequencenumber";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string ofm_approved_by = "ofm_approved_by";
            public const string ofm_approved_byname = "ofm_approved_byname";
            public const string ofm_approved_byyominame = "ofm_approved_byyominame";
            public const string ofm_approved_date = "ofm_approved_date";
            public const string ofm_end_date = "ofm_end_date";
            public const string ofm_facility = "ofm_facility";
            public const string ofm_facilityname = "ofm_facilityname";
            public const string ofm_facilityyominame = "ofm_facilityyominame";
            public const string ofm_funding = "ofm_funding";
            public const string ofm_funding_number = "ofm_funding_number";
            public const string ofm_fundingname = "ofm_fundingname";
            public const string ofm_name = "ofm_name";
            public const string ofm_payment_top_up_fund = "ofm_payment_top_up_fund";
            public const string ofm_pcm_validated = "ofm_pcm_validated";
            public const string ofm_pcm_validatedname = "ofm_pcm_validatedname";
            public const string ofm_pdf_organization_name = "ofm_pdf_organization_name";
            public const string ofm_programming_amount = "ofm_programming_amount";
            public const string ofm_programming_amount_base = "ofm_programming_amount_base";
            public const string ofm_start_date = "ofm_start_date";
            public const string ofm_top_up_fund_facility = "ofm_top_up_fund_facility";
            public const string ofm_top_up_fundid = "ofm_top_up_fundid";
            public const string Id = "ofm_top_up_fundid";
            public const string ofm_top_up_funding = "ofm_top_up_funding";
            public const string ofm_top_up_pdf = "ofm_top_up_pdf";
            public const string ofm_top_up_pdf_name = "ofm_top_up_pdf_name";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string ownerid = "ownerid";
            public const string owneridname = "owneridname";
            public const string owneridyominame = "owneridyominame";
            public const string owningbusinessunit = "owningbusinessunit";
            public const string owningbusinessunitname = "owningbusinessunitname";
            public const string owningteam = "owningteam";
            public const string owninguser = "owninguser";
            public const string statecode = "statecode";
            public const string statecodename = "statecodename";
            public const string statuscode = "statuscode";
            public const string statuscodename = "statuscodename";
            public const string team_ofm_top_up_fund = "team_ofm_top_up_fund";
            public const string timezoneruleversionnumber = "timezoneruleversionnumber";
            public const string transactioncurrencyid = "transactioncurrencyid";
            public const string transactioncurrencyidname = "transactioncurrencyidname";
            public const string utcconversiontimezonecode = "utcconversiontimezonecode";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_top_up_fund(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_top_up_fund(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_top_up_fund(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_top_up_fund() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "ofm_top_up_fundid";

        public const string PrimaryNameAttribute = "ofm_name";

        public const string EntitySchemaName = "ofm_top_up_fund";

        public const string EntityLogicalName = "ofm_top_up_fund";

        public const string EntityLogicalCollectionName = "ofm_top_up_funds";

        public const string EntitySetName = "ofm_top_up_funds";

        /// <summary>
        /// Unique identifier of the user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Exchange rate for the currency associated with the entity with respect to the base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
        public System.Nullable<decimal> exchangerate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
            }
        }

        /// <summary>
        /// Sequence number of the import that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who modified the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_approved_by")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_approved_by
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_approved_by");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_approved_by", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_approved_byname")]
        public string ofm_approved_byname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_approved_by"))
                {
                    return this.FormattedValues["ofm_approved_by"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_approved_byyominame")]
        public string ofm_approved_byyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_approved_by"))
                {
                    return this.FormattedValues["ofm_approved_by"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_approved_date")]
        public System.Nullable<System.DateTime> ofm_approved_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_approved_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_approved_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_end_date")]
        public System.Nullable<System.DateTime> ofm_end_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_end_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_end_date", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_facility
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_facility");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_facility", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilityname")]
        public string ofm_facilityname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_facility"))
                {
                    return this.FormattedValues["ofm_facility"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilityyominame")]
        public string ofm_facilityyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_facility"))
                {
                    return this.FormattedValues["ofm_facility"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_funding")]
        public Microsoft.Xrm.Sdk.EntityReference ofm_funding
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_funding");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_funding", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_funding_number")]
        public string ofm_funding_number
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_funding_number");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_funding_number", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fundingname")]
        public string ofm_fundingname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_funding"))
                {
                    return this.FormattedValues["ofm_funding"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
        public string ofm_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_name", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pcm_validated")]
        public System.Nullable<bool> ofm_pcm_validated
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ofm_pcm_validated");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_pcm_validated", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pcm_validatedname")]
        public string ofm_pcm_validatedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_pcm_validated"))
                {
                    return this.FormattedValues["ofm_pcm_validated"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Organization Name for Top Up PDF
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pdf_organization_name")]
        public string ofm_pdf_organization_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("ofm_pdf_organization_name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_pdf_organization_name", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_programming_amount")]
        public Microsoft.Xrm.Sdk.Money ofm_programming_amount
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_programming_amount");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_programming_amount", value);
            }
        }

        /// <summary>
        /// Value of the Programming Amount in base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_programming_amount_base")]
        public Microsoft.Xrm.Sdk.Money ofm_programming_amount_base
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_programming_amount_base");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_start_date")]
        public System.Nullable<System.DateTime> ofm_start_date
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_start_date");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_start_date", value);
            }
        }

        /// <summary>
        /// Unique identifier for entity instances
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_top_up_fundid")]
        public System.Nullable<System.Guid> ofm_top_up_fundid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_top_up_fundid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ofm_top_up_fundid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_top_up_fundid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.ofm_top_up_fundid = value;
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_top_up_pdf")]
        public object ofm_top_up_pdf
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<object>("ofm_top_up_pdf");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_top_up_pdf_name")]
        public string ofm_top_up_pdf_name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ofm_top_up_pdf"))
                {
                    return this.FormattedValues["ofm_top_up_pdf"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Owner Id
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference ownerid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ownerid", value);
            }
        }

        /// <summary>
        /// Name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
        public string owneridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Yomi name of the owner
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
        public string owneridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ownerid"))
                {
                    return this.FormattedValues["ownerid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the business unit that owns the record
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("owningbusinessunit", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
        public string owningbusinessunitname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("owningbusinessunit"))
                {
                    return this.FormattedValues["owningbusinessunit"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference owningteam
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference owninguser
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Status of the Topup Fund
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public virtual ofm_top_up_fund_statecode? statecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_top_up_fund_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
        public string statecodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statecode"))
                {
                    return this.FormattedValues["statecode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Reason for the status of the Topup Fund
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public virtual ofm_top_up_fund_StatusCode? statuscode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((ofm_top_up_fund_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
        public string statuscodename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("statuscode"))
                {
                    return this.FormattedValues["statuscode"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> timezoneruleversionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
            }
        }

        /// <summary>
        /// Unique identifier of the currency associated with the entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("transactioncurrencyid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
        public string transactioncurrencyidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("transactioncurrencyid"))
                {
                    return this.FormattedValues["transactioncurrencyid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> utcconversiontimezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
            }
        }

        /// <summary>
        /// Version Number
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N ofm_payment_top_up_fund
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_payment_top_up_fund")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_payment> ofm_payment_top_up_fund
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_payment>("ofm_payment_top_up_fund", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_payment>("ofm_payment_top_up_fund", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_top_up_fund_facility
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_top_up_fund_facility")]
        public ECC.Core.DataContext.Account ofm_top_up_fund_facility
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Account>("ofm_top_up_fund_facility", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.Account>("ofm_top_up_fund_facility", null, value);
            }
        }

        /// <summary>
        /// N:1 ofm_top_up_funding
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_funding")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_top_up_funding")]
        public ECC.Core.DataContext.ofm_funding ofm_top_up_funding
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.ofm_funding>("ofm_top_up_funding", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntity<ECC.Core.DataContext.ofm_funding>("ofm_top_up_funding", null, value);
            }
        }

        /// <summary>
        /// N:1 team_ofm_top_up_fund
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_top_up_fund")]
        public ECC.Core.DataContext.Team team_ofm_top_up_fund
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_top_up_fund", null);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public ofm_top_up_fund(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_top_up_fundid"] = base.Id;
                        break;
                    case "ofm_top_up_fundid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// Collection of system users that routinely collaborate. Teams can be used to simplify record sharing and provide team members with common access to organization data when team members belong to different Business Units.
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("team")]
    public partial class Team : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the team entity
        /// </summary>
        public partial class Fields
        {
            public const string administratorid = "administratorid";
            public const string administratoridname = "administratoridname";
            public const string administratoridyominame = "administratoridyominame";
            public const string azureactivedirectoryobjectid = "azureactivedirectoryobjectid";
            public const string businessunitid = "businessunitid";
            public const string businessunitidname = "businessunitidname";
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string delegatedauthorizationid = "delegatedauthorizationid";
            public const string delegatedauthorizationidname = "delegatedauthorizationidname";
            public const string description = "description";
            public const string emailaddress = "emailaddress";
            public const string exchangerate = "exchangerate";
            public const string importsequencenumber = "importsequencenumber";
            public const string isdefault = "isdefault";
            public const string isdefaultname = "isdefaultname";
            public const string issastokenset = "issastokenset";
            public const string issastokensetname = "issastokensetname";
            public const string membershiptype = "membershiptype";
            public const string membershiptypename = "membershiptypename";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string msft_datastate = "msft_datastate";
            public const string msft_datastatename = "msft_datastatename";
            public const string name = "name";
            public const string organizationid = "organizationid";
            public const string organizationidname = "organizationidname";
            public const string overriddencreatedon = "overriddencreatedon";
            public const string processid = "processid";
            public const string queueid = "queueid";
            public const string queueidname = "queueidname";
            public const string regardingobjectid = "regardingobjectid";
            public const string sharelinkqualifier = "sharelinkqualifier";
            public const string stageid = "stageid";
            public const string systemmanaged = "systemmanaged";
            public const string systemmanagedname = "systemmanagedname";
            public const string team_accounts = "team_accounts";
            public const string team_contacts = "team_contacts";
            public const string team_email = "team_email";
            public const string team_msfp_project = "team_msfp_project";
            public const string team_msfp_question = "team_msfp_question";
            public const string team_msfp_survey = "team_msfp_survey";
            public const string team_ofm_ack_codes = "team_ofm_ack_codes";
            public const string team_ofm_allowance = "team_ofm_allowance";
            public const string team_ofm_application = "team_ofm_application";
            public const string team_ofm_assistance_request = "team_ofm_assistance_request";
            public const string team_ofm_bceid_facility = "team_ofm_bceid_facility";
            public const string team_ofm_cclr_ratio = "team_ofm_cclr_ratio";
            public const string team_ofm_communication_type = "team_ofm_communication_type";
            public const string team_ofm_conversation = "team_ofm_conversation";
            public const string team_ofm_data_import = "team_ofm_data_import";
            public const string team_ofm_document = "team_ofm_document";
            public const string team_ofm_employee_certificate = "team_ofm_employee_certificate";
            public const string team_ofm_employee_certificate_status = "team_ofm_employee_certificate_status";
            public const string team_ofm_expense = "team_ofm_expense";
            public const string team_ofm_facility_intake = "team_ofm_facility_intake";
            public const string team_ofm_facility_request = "team_ofm_facility_request";
            public const string team_ofm_fiscal_year = "team_ofm_fiscal_year";
            public const string team_ofm_funding = "team_ofm_funding";
            public const string team_ofm_funding_rate = "team_ofm_funding_rate";
            public const string team_ofm_intake = "team_ofm_intake";
            public const string team_ofm_integration_log = "team_ofm_integration_log";
            public const string team_ofm_licence = "team_ofm_licence";
            public const string team_ofm_licence_detail = "team_ofm_licence_detail";
            public const string team_ofm_payment = "team_ofm_payment";
            public const string team_ofm_payment_file_exchange = "team_ofm_payment_file_exchange";
            public const string team_ofm_payment_request = "team_ofm_payment_request";
            public const string team_ofm_pcm_review = "team_ofm_pcm_review";
            public const string team_ofm_portal_permission = "team_ofm_portal_permission";
            public const string team_ofm_portal_privilege = "team_ofm_portal_privilege";
            public const string team_ofm_portal_role = "team_ofm_portal_role";
            public const string team_ofm_progress_tracker = "team_ofm_progress_tracker";
            public const string team_ofm_provider_employee = "team_ofm_provider_employee";
            public const string team_ofm_question = "team_ofm_question";
            public const string team_ofm_question_business_rule = "team_ofm_question_business_rule";
            public const string team_ofm_question_response = "team_ofm_question_response";
            public const string team_ofm_rate_schedule = "team_ofm_rate_schedule";
            public const string team_ofm_reminder = "team_ofm_reminder";
            public const string team_ofm_request_category = "team_ofm_request_category";
            public const string team_ofm_section = "team_ofm_section";
            public const string team_ofm_space_allocation = "team_ofm_space_allocation";
            public const string team_ofm_standing_history = "team_ofm_standing_history";
            public const string team_ofm_stat_holiday = "team_ofm_stat_holiday";
            public const string team_ofm_subcategory = "team_ofm_subcategory";
            public const string team_ofm_supplementary_schedule = "team_ofm_supplementary_schedule";
            public const string team_ofm_survey = "team_ofm_survey";
            public const string team_ofm_survey_response = "team_ofm_survey_response";
            public const string team_ofm_system_configuration = "team_ofm_system_configuration";
            public const string team_ofm_system_message = "team_ofm_system_message";
            public const string team_ofm_top_up_fund = "team_ofm_top_up_fund";
            public const string teamid = "teamid";
            public const string Id = "teamid";
            public const string teamtemplateid = "teamtemplateid";
            public const string teamtype = "teamtype";
            public const string teamtypename = "teamtypename";
            public const string transactioncurrencyid = "transactioncurrencyid";
            public const string transactioncurrencyidname = "transactioncurrencyidname";
            public const string traversedpath = "traversedpath";
            public const string versionnumber = "versionnumber";
            public const string yominame = "yominame";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public Team(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public Team(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public Team(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        public const string AlternateKeys = "azureactivedirectoryobjectid,membershiptype";

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public Team() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "teamid";

        public const string PrimaryNameAttribute = "name";

        public const string EntitySchemaName = "Team";

        public const string EntityLogicalName = "team";

        public const string EntityLogicalCollectionName = "teams";

        public const string EntitySetName = "teams";

        /// <summary>
        /// Unique identifier of the user primary responsible for the team.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("administratorid")]
        public Microsoft.Xrm.Sdk.EntityReference administratorid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("administratorid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("administratorid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("administratoridname")]
        public string administratoridname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("administratorid"))
                {
                    return this.FormattedValues["administratorid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("administratoridyominame")]
        public string administratoridyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("administratorid"))
                {
                    return this.FormattedValues["administratorid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The object Id for a group.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("azureactivedirectoryobjectid")]
        public System.Nullable<System.Guid> azureactivedirectoryobjectid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("azureactivedirectoryobjectid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("azureactivedirectoryobjectid", value);
            }
        }

        /// <summary>
        /// Unique identifier of the business unit with which the team is associated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessunitid")]
        public Microsoft.Xrm.Sdk.EntityReference businessunitid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("businessunitid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("businessunitid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessunitidname")]
        public string businessunitidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("businessunitid"))
                {
                    return this.FormattedValues["businessunitid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier of the user who created the team.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the team was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the team.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The delegated authorization context for the team.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("delegatedauthorizationid")]
        public Microsoft.Xrm.Sdk.EntityReference delegatedauthorizationid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("delegatedauthorizationid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("delegatedauthorizationid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("delegatedauthorizationidname")]
        public string delegatedauthorizationidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("delegatedauthorizationid"))
                {
                    return this.FormattedValues["delegatedauthorizationid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Description of the team.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
        public string description
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("description");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("description", value);
            }
        }

        /// <summary>
        /// Email address for the team.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress")]
        public string emailaddress
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("emailaddress");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("emailaddress", value);
            }
        }

        /// <summary>
        /// Exchange rate for the currency associated with the team with respect to the base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
        public System.Nullable<decimal> exchangerate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
            }
        }

        /// <summary>
        /// Unique identifier of the data import or data migration that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> importsequencenumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
            }
        }

        /// <summary>
        /// Information about whether the team is a default business unit team.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdefault")]
        public System.Nullable<bool> isdefault
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isdefault");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdefaultname")]
        public string isdefaultname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("isdefault"))
                {
                    return this.FormattedValues["isdefault"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("issastokenset")]
        public System.Nullable<bool> issastokenset
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("issastokenset");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("issastokensetname")]
        public string issastokensetname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("issastokenset"))
                {
                    return this.FormattedValues["issastokenset"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("membershiptype")]
        public virtual Team_membershiptype? membershiptype
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Team_membershiptype?)(EntityOptionSetEnum.GetEnum(this, "membershiptype")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("membershiptype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("membershiptypename")]
        public string membershiptypename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("membershiptype"))
                {
                    return this.FormattedValues["membershiptype"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier of the user who last modified the team.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the team was last modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who last modified the team.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msft_datastate")]
        public virtual msft_DataState? msft_datastate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((msft_DataState?)(EntityOptionSetEnum.GetEnum(this, "msft_datastate")));
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msft_datastatename")]
        public string msft_datastatename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("msft_datastate"))
                {
                    return this.FormattedValues["msft_datastate"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Name of the team.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
        public string name
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("name");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("name", value);
            }
        }

        /// <summary>
        /// Unique identifier of the organization associated with the team.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
        public System.Nullable<System.Guid> organizationid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("organizationid");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationidname")]
        public string organizationidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("organizationid"))
                {
                    return this.FormattedValues["organizationid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> overriddencreatedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
            }
        }

        /// <summary>
        /// Shows the ID of the process.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
        public System.Nullable<System.Guid> processid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("processid", value);
            }
        }

        /// <summary>
        /// Unique identifier of the default queue for the team.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("queueid")]
        public Microsoft.Xrm.Sdk.EntityReference queueid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("queueid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("queueid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("queueidname")]
        public string queueidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("queueid"))
                {
                    return this.FormattedValues["queueid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Choose the record that the team relates to.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        public Microsoft.Xrm.Sdk.EntityReference regardingobjectid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("regardingobjectid", value);
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sharelinkqualifier")]
        public string sharelinkqualifier
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("sharelinkqualifier");
            }
        }

        /// <summary>
        /// Shows the ID of the stage.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
        public System.Nullable<System.Guid> stageid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("stageid", value);
            }
        }

        /// <summary>
        /// Select whether the team will be managed by the system.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("systemmanaged")]
        public System.Nullable<bool> systemmanaged
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("systemmanaged");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("systemmanagedname")]
        public string systemmanagedname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("systemmanaged"))
                {
                    return this.FormattedValues["systemmanaged"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier for the team.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamid")]
        public System.Nullable<System.Guid> teamid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("teamid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("teamid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.teamid = value;
            }
        }

        /// <summary>
        /// Shows the team template that is associated with the team.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamtemplateid")]
        public Microsoft.Xrm.Sdk.EntityReference teamtemplateid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("teamtemplateid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("teamtemplateid", value);
            }
        }

        /// <summary>
        /// Select the team type.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamtype")]
        public virtual Team_teamtype? teamtype
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((Team_teamtype?)(EntityOptionSetEnum.GetEnum(this, "teamtype")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("teamtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamtypename")]
        public string teamtypename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("teamtype"))
                {
                    return this.FormattedValues["teamtype"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier of the currency associated with the team.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("transactioncurrencyid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
        public string transactioncurrencyidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("transactioncurrencyid"))
                {
                    return this.FormattedValues["transactioncurrencyid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
        public string traversedpath
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("traversedpath");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("traversedpath", value);
            }
        }

        /// <summary>
        /// Version number of the team.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// Pronunciation of the full name of the team, written in phonetic hiragana or katakana characters.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yominame")]
        public string yominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("yominame");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("yominame", value);
            }
        }

        /// <summary>
        /// 1:N team_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_accounts")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Account> team_accounts
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.Account>("team_accounts", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.Account>("team_accounts", null, value);
            }
        }

        /// <summary>
        /// 1:N team_contacts
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_contacts")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Contact> team_contacts
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.Contact>("team_contacts", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.Contact>("team_contacts", null, value);
            }
        }

        /// <summary>
        /// 1:N team_email
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_email")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Email> team_email
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.Email>("team_email", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.Email>("team_email", null, value);
            }
        }

        /// <summary>
        /// 1:N team_msfp_project
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_msfp_project")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.msfp_project> team_msfp_project
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.msfp_project>("team_msfp_project", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.msfp_project>("team_msfp_project", null, value);
            }
        }

        /// <summary>
        /// 1:N team_msfp_question
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_msfp_question")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.msfp_question> team_msfp_question
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.msfp_question>("team_msfp_question", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.msfp_question>("team_msfp_question", null, value);
            }
        }

        /// <summary>
        /// 1:N team_msfp_survey
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_msfp_survey")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.msfp_survey> team_msfp_survey
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.msfp_survey>("team_msfp_survey", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.msfp_survey>("team_msfp_survey", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_ack_codes
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_ack_codes")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_ack_codes> team_ofm_ack_codes
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_ack_codes>("team_ofm_ack_codes", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_ack_codes>("team_ofm_ack_codes", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_allowance
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_allowance")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_allowance> team_ofm_allowance
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_allowance>("team_ofm_allowance", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_allowance>("team_ofm_allowance", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_application
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_application")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_application> team_ofm_application
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_application>("team_ofm_application", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_application>("team_ofm_application", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_assistance_request
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_assistance_request")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_assistance_request> team_ofm_assistance_request
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_assistance_request>("team_ofm_assistance_request", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_assistance_request>("team_ofm_assistance_request", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_bceid_facility
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_bceid_facility")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_bceid_facility> team_ofm_bceid_facility
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_bceid_facility>("team_ofm_bceid_facility", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_bceid_facility>("team_ofm_bceid_facility", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_cclr_ratio
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_cclr_ratio")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_cclr_ratio> team_ofm_cclr_ratio
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_cclr_ratio>("team_ofm_cclr_ratio", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_cclr_ratio>("team_ofm_cclr_ratio", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_communication_type
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_communication_type")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_communication_type> team_ofm_communication_type
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_communication_type>("team_ofm_communication_type", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_communication_type>("team_ofm_communication_type", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_conversation
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_conversation")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_conversation> team_ofm_conversation
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_conversation>("team_ofm_conversation", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_conversation>("team_ofm_conversation", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_data_import
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_data_import")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_data_import> team_ofm_data_import
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_data_import>("team_ofm_data_import", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_data_import>("team_ofm_data_import", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_document
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_document")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_document> team_ofm_document
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_document>("team_ofm_document", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_document>("team_ofm_document", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_employee_certificate
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_employee_certificate")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_employee_certificate> team_ofm_employee_certificate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_employee_certificate>("team_ofm_employee_certificate", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_employee_certificate>("team_ofm_employee_certificate", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_employee_certificate_status
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_employee_certificate_status")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_employee_certificate_status> team_ofm_employee_certificate_status
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_employee_certificate_status>("team_ofm_employee_certificate_status", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_employee_certificate_status>("team_ofm_employee_certificate_status", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_expense
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_expense")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_expense> team_ofm_expense
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_expense>("team_ofm_expense", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_expense>("team_ofm_expense", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_facility_intake
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_facility_intake")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_facility_intake> team_ofm_facility_intake
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_facility_intake>("team_ofm_facility_intake", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_facility_intake>("team_ofm_facility_intake", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_facility_request
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_facility_request")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_facility_request> team_ofm_facility_request
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_facility_request>("team_ofm_facility_request", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_facility_request>("team_ofm_facility_request", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_fiscal_year
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_fiscal_year")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_fiscal_year> team_ofm_fiscal_year
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_fiscal_year>("team_ofm_fiscal_year", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_fiscal_year>("team_ofm_fiscal_year", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_funding
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_funding")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_funding> team_ofm_funding
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_funding>("team_ofm_funding", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_funding>("team_ofm_funding", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_funding_rate
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_funding_rate")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_funding_rate> team_ofm_funding_rate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_funding_rate>("team_ofm_funding_rate", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_funding_rate>("team_ofm_funding_rate", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_intake
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_intake")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_intake> team_ofm_intake
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_intake>("team_ofm_intake", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_intake>("team_ofm_intake", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_integration_log
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_integration_log")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_integration_log> team_ofm_integration_log
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_integration_log>("team_ofm_integration_log", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_integration_log>("team_ofm_integration_log", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_licence
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_licence")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_licence> team_ofm_licence
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_licence>("team_ofm_licence", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_licence>("team_ofm_licence", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_licence_detail
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_licence_detail")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_licence_detail> team_ofm_licence_detail
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_licence_detail>("team_ofm_licence_detail", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_licence_detail>("team_ofm_licence_detail", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_payment
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_payment")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_payment> team_ofm_payment
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_payment>("team_ofm_payment", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_payment>("team_ofm_payment", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_payment_file_exchange
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_payment_file_exchange")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_payment_file_exchange> team_ofm_payment_file_exchange
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_payment_file_exchange>("team_ofm_payment_file_exchange", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_payment_file_exchange>("team_ofm_payment_file_exchange", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_payment_request
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_payment_request")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_payment_request> team_ofm_payment_request
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_payment_request>("team_ofm_payment_request", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_payment_request>("team_ofm_payment_request", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_pcm_review
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_pcm_review")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_pcm_review> team_ofm_pcm_review
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_pcm_review>("team_ofm_pcm_review", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_pcm_review>("team_ofm_pcm_review", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_portal_permission
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_portal_permission")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_portal_permission> team_ofm_portal_permission
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_portal_permission>("team_ofm_portal_permission", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_portal_permission>("team_ofm_portal_permission", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_portal_privilege
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_portal_privilege")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_portal_privilege> team_ofm_portal_privilege
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_portal_privilege>("team_ofm_portal_privilege", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_portal_privilege>("team_ofm_portal_privilege", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_portal_role
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_portal_role")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_portal_role> team_ofm_portal_role
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_portal_role>("team_ofm_portal_role", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_portal_role>("team_ofm_portal_role", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_progress_tracker
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_progress_tracker")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_progress_tracker> team_ofm_progress_tracker
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_progress_tracker>("team_ofm_progress_tracker", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_progress_tracker>("team_ofm_progress_tracker", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_provider_employee
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_provider_employee")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_provider_employee> team_ofm_provider_employee
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_provider_employee>("team_ofm_provider_employee", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_provider_employee>("team_ofm_provider_employee", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_question
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_question")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_question> team_ofm_question
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_question>("team_ofm_question", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_question>("team_ofm_question", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_question_business_rule
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_question_business_rule")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_question_business_rule> team_ofm_question_business_rule
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_question_business_rule>("team_ofm_question_business_rule", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_question_business_rule>("team_ofm_question_business_rule", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_question_response
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_question_response")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_question_response> team_ofm_question_response
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_question_response>("team_ofm_question_response", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_question_response>("team_ofm_question_response", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_rate_schedule
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_rate_schedule")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_rate_schedule> team_ofm_rate_schedule
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_rate_schedule>("team_ofm_rate_schedule", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_rate_schedule>("team_ofm_rate_schedule", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_reminder
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_reminder")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_reminder> team_ofm_reminder
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_reminder>("team_ofm_reminder", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_reminder>("team_ofm_reminder", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_request_category
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_request_category")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_request_category> team_ofm_request_category
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_request_category>("team_ofm_request_category", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_request_category>("team_ofm_request_category", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_section
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_section")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_section> team_ofm_section
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_section>("team_ofm_section", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_section>("team_ofm_section", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_space_allocation
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_space_allocation")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_space_allocation> team_ofm_space_allocation
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_space_allocation>("team_ofm_space_allocation", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_space_allocation>("team_ofm_space_allocation", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_standing_history
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_standing_history")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_standing_history> team_ofm_standing_history
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_standing_history>("team_ofm_standing_history", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_standing_history>("team_ofm_standing_history", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_stat_holiday
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_stat_holiday")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_stat_holiday> team_ofm_stat_holiday
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_stat_holiday>("team_ofm_stat_holiday", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_stat_holiday>("team_ofm_stat_holiday", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_subcategory
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_subcategory")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_subcategory> team_ofm_subcategory
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_subcategory>("team_ofm_subcategory", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_subcategory>("team_ofm_subcategory", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_supplementary_schedule
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_supplementary_schedule")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_supplementary_schedule> team_ofm_supplementary_schedule
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_supplementary_schedule>("team_ofm_supplementary_schedule", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_supplementary_schedule>("team_ofm_supplementary_schedule", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_survey
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_survey")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_survey> team_ofm_survey
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_survey>("team_ofm_survey", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_survey>("team_ofm_survey", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_survey_response
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_survey_response")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_survey_response> team_ofm_survey_response
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_survey_response>("team_ofm_survey_response", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_survey_response>("team_ofm_survey_response", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_system_configuration
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_system_configuration")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_system_configuration> team_ofm_system_configuration
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_system_configuration>("team_ofm_system_configuration", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_system_configuration>("team_ofm_system_configuration", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_system_message
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_system_message")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_system_message> team_ofm_system_message
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_system_message>("team_ofm_system_message", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_system_message>("team_ofm_system_message", null, value);
            }
        }

        /// <summary>
        /// 1:N team_ofm_top_up_fund
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_top_up_fund")]
        public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_top_up_fund> team_ofm_top_up_fund
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetRelatedEntities<ECC.Core.DataContext.ofm_top_up_fund>("team_ofm_top_up_fund", null);
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetRelatedEntities<ECC.Core.DataContext.ofm_top_up_fund>("team_ofm_top_up_fund", null, value);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public Team(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["teamid"] = base.Id;
                        break;
                    case "teamid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// Time zone definition, including name and time zone code.
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("timezonedefinition")]
    public partial class TimeZoneDefinition : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the timezonedefinition entity
        /// </summary>
        public partial class Fields
        {
            public const string bias = "bias";
            public const string createdby = "createdby";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string daylightname = "daylightname";
            public const string modifiedby = "modifiedby";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string organizationid = "organizationid";
            public const string retiredorder = "retiredorder";
            public const string standardname = "standardname";
            public const string timezonecode = "timezonecode";
            public const string timezonedefinitionid = "timezonedefinitionid";
            public const string Id = "timezonedefinitionid";
            public const string userinterfacename = "userinterfacename";
            public const string versionnumber = "versionnumber";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public TimeZoneDefinition(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public TimeZoneDefinition(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public TimeZoneDefinition(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public TimeZoneDefinition() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "timezonedefinitionid";

        public const string PrimaryNameAttribute = "userinterfacename";

        public const string EntitySchemaName = "TimeZoneDefinition";

        public const string EntityLogicalName = "timezonedefinition";

        public const string EntityLogicalCollectionName = "timezonedefinitions";

        public const string EntitySetName = "timezonedefinitions";

        /// <summary>
        /// Base time bias of the time zone.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bias")]
        public System.Nullable<int> bias
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("bias");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("bias", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who created the time zone record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        /// <summary>
        /// Date and time when the time zone record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the timezonedefinition.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Time zone name for the daylight time.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("daylightname")]
        public string daylightname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("daylightname");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("daylightname", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who last modified the time zone record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        /// <summary>
        /// Date and time when the time zone record was modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who last modified the timezonedefinition.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier of the organization associated with the time zone definition.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
        public Microsoft.Xrm.Sdk.EntityReference organizationid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
            }
        }

        /// <summary>
        /// Order an entry for a time zone definition is retired. 0 for the latest entry.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("retiredorder")]
        public System.Nullable<int> retiredorder
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("retiredorder");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("retiredorder", value);
            }
        }

        /// <summary>
        /// Time zone name for the standard time.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("standardname")]
        public string standardname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("standardname");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("standardname", value);
            }
        }

        /// <summary>
        /// Time zone identification code.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonecode")]
        public System.Nullable<int> timezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezonecode", value);
            }
        }

        /// <summary>
        /// Unique identifier of the time zone record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonedefinitionid")]
        public System.Nullable<System.Guid> timezonedefinitionid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("timezonedefinitionid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezonedefinitionid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonedefinitionid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.timezonedefinitionid = value;
            }
        }

        /// <summary>
        /// Display name for the time zone in the Microsoft Windows registry.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("userinterfacename")]
        public string userinterfacename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("userinterfacename");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("userinterfacename", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public TimeZoneDefinition(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["timezonedefinitionid"] = base.Id;
                        break;
                    case "timezonedefinitionid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }

    /// <summary>
    /// User's preferred settings.
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("usersettings")]
    public partial class UserSettings : Microsoft.Xrm.Sdk.Entity
    {

        /// <summary>
        /// Available fields, a the time of codegen, for the usersettings entity
        /// </summary>
        public partial class Fields
        {
            public const string addressbooksyncinterval = "addressbooksyncinterval";
            public const string advancedfindstartupmode = "advancedfindstartupmode";
            public const string allowemailcredentials = "allowemailcredentials";
            public const string allowemailcredentialsname = "allowemailcredentialsname";
            public const string amdesignator = "amdesignator";
            public const string autocaptureuserstatus = "autocaptureuserstatus";
            public const string autocreatecontactonpromote = "autocreatecontactonpromote";
            public const string businessunitid = "businessunitid";
            public const string businessunitidname = "businessunitidname";
            public const string calendartype = "calendartype";
            public const string createdby = "createdby";
            public const string createdbyname = "createdbyname";
            public const string createdbyyominame = "createdbyyominame";
            public const string createdon = "createdon";
            public const string createdonbehalfby = "createdonbehalfby";
            public const string createdonbehalfbyname = "createdonbehalfbyname";
            public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
            public const string currencydecimalprecision = "currencydecimalprecision";
            public const string currencyformatcode = "currencyformatcode";
            public const string currencysymbol = "currencysymbol";
            public const string d365autoinstallattemptstatus = "d365autoinstallattemptstatus";
            public const string d365autoinstallattemptstatusname = "d365autoinstallattemptstatusname";
            public const string datavalidationmodeforexporttoexcel = "datavalidationmodeforexporttoexcel";
            public const string datavalidationmodeforexporttoexcelname = "datavalidationmodeforexporttoexcelname";
            public const string dateformatcode = "dateformatcode";
            public const string dateformatstring = "dateformatstring";
            public const string dateseparator = "dateseparator";
            public const string decimalsymbol = "decimalsymbol";
            public const string defaultcalendarview = "defaultcalendarview";
            public const string defaultcountrycode = "defaultcountrycode";
            public const string defaultdashboardid = "defaultdashboardid";
            public const string defaultsearchexperience = "defaultsearchexperience";
            public const string defaultsearchexperiencename = "defaultsearchexperiencename";
            public const string emailpassword = "emailpassword";
            public const string emailusername = "emailusername";
            public const string entityformmode = "entityformmode";
            public const string fullnameconventioncode = "fullnameconventioncode";
            public const string getstartedpanecontentenabled = "getstartedpanecontentenabled";
            public const string helplanguageid = "helplanguageid";
            public const string homepagearea = "homepagearea";
            public const string homepagelayout = "homepagelayout";
            public const string homepagesubarea = "homepagesubarea";
            public const string ignoreunsolicitedemail = "ignoreunsolicitedemail";
            public const string ignoreunsolicitedemailname = "ignoreunsolicitedemailname";
            public const string incomingemailfilteringmethod = "incomingemailfilteringmethod";
            public const string incomingemailfilteringmethodname = "incomingemailfilteringmethodname";
            public const string isappsforcrmalertdismissed = "isappsforcrmalertdismissed";
            public const string isautodatacaptureenabled = "isautodatacaptureenabled";
            public const string isdefaultcountrycodecheckenabled = "isdefaultcountrycodecheckenabled";
            public const string isduplicatedetectionenabledwhengoingonline = "isduplicatedetectionenabledwhengoingonline";
            public const string isemailconversationviewenabled = "isemailconversationviewenabled";
            public const string isguidedhelpenabled = "isguidedhelpenabled";
            public const string isresourcebookingexchangesyncenabled = "isresourcebookingexchangesyncenabled";
            public const string issendasallowed = "issendasallowed";
            public const string lastalertsviewedtime = "lastalertsviewedtime";
            public const string lastmodifiedtimeforviewpersonalizationsettings = "lastmodifiedtimeforviewpersonalizationsettings";
            public const string localeid = "localeid";
            public const string longdateformatcode = "longdateformatcode";
            public const string modifiedby = "modifiedby";
            public const string modifiedbyname = "modifiedbyname";
            public const string modifiedbyyominame = "modifiedbyyominame";
            public const string modifiedon = "modifiedon";
            public const string modifiedonbehalfby = "modifiedonbehalfby";
            public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
            public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
            public const string negativecurrencyformatcode = "negativecurrencyformatcode";
            public const string negativeformatcode = "negativeformatcode";
            public const string nexttrackingnumber = "nexttrackingnumber";
            public const string numbergroupformat = "numbergroupformat";
            public const string numberseparator = "numberseparator";
            public const string offlinesyncinterval = "offlinesyncinterval";
            public const string outlooksyncinterval = "outlooksyncinterval";
            public const string paginglimit = "paginglimit";
            public const string personalizationsettings = "personalizationsettings";
            public const string pmdesignator = "pmdesignator";
            public const string preferredsolution = "preferredsolution";
            public const string preferredsolutionname = "preferredsolutionname";
            public const string pricingdecimalprecision = "pricingdecimalprecision";
            public const string releasechannel = "releasechannel";
            public const string releasechannelname = "releasechannelname";
            public const string reportscripterrors = "reportscripterrors";
            public const string reportscripterrorsname = "reportscripterrorsname";
            public const string resourcebookingexchangesyncversion = "resourcebookingexchangesyncversion";
            public const string selectedglobalfilterid = "selectedglobalfilterid";
            public const string showweeknumber = "showweeknumber";
            public const string splitviewstate = "splitviewstate";
            public const string synccontactcompany = "synccontactcompany";
            public const string systemuserid = "systemuserid";
            public const string Id = "systemuserid";
            public const string tablescopeddvsearchfeatureteachingbubbleviews = "tablescopeddvsearchfeatureteachingbubbleviews";
            public const string tablescopeddvsearchquickfindteachingbubbleviews = "tablescopeddvsearchquickfindteachingbubbleviews";
            public const string timeformatcode = "timeformatcode";
            public const string timeformatstring = "timeformatstring";
            public const string timeseparator = "timeseparator";
            public const string timezonebias = "timezonebias";
            public const string timezonecode = "timezonecode";
            public const string timezonedaylightbias = "timezonedaylightbias";
            public const string timezonedaylightday = "timezonedaylightday";
            public const string timezonedaylightdayofweek = "timezonedaylightdayofweek";
            public const string timezonedaylighthour = "timezonedaylighthour";
            public const string timezonedaylightminute = "timezonedaylightminute";
            public const string timezonedaylightmonth = "timezonedaylightmonth";
            public const string timezonedaylightsecond = "timezonedaylightsecond";
            public const string timezonedaylightyear = "timezonedaylightyear";
            public const string timezonestandardbias = "timezonestandardbias";
            public const string timezonestandardday = "timezonestandardday";
            public const string timezonestandarddayofweek = "timezonestandarddayofweek";
            public const string timezonestandardhour = "timezonestandardhour";
            public const string timezonestandardminute = "timezonestandardminute";
            public const string timezonestandardmonth = "timezonestandardmonth";
            public const string timezonestandardsecond = "timezonestandardsecond";
            public const string timezonestandardyear = "timezonestandardyear";
            public const string trackingtokenid = "trackingtokenid";
            public const string transactioncurrencyid = "transactioncurrencyid";
            public const string transactioncurrencyidname = "transactioncurrencyidname";
            public const string trytogglesets = "trytogglesets";
            public const string trytogglestatus = "trytogglestatus";
            public const string trytogglestatusname = "trytogglestatusname";
            public const string uilanguageid = "uilanguageid";
            public const string usecrmformforappointment = "usecrmformforappointment";
            public const string usecrmformforcontact = "usecrmformforcontact";
            public const string usecrmformforemail = "usecrmformforemail";
            public const string usecrmformfortask = "usecrmformfortask";
            public const string useimagestrips = "useimagestrips";
            public const string userprofile = "userprofile";
            public const string versionnumber = "versionnumber";
            public const string visualizationpanelayout = "visualizationpanelayout";
            public const string visualizationpanelayoutname = "visualizationpanelayoutname";
            public const string workdaystarttime = "workdaystarttime";
            public const string workdaystoptime = "workdaystoptime";
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public UserSettings(System.Guid id) :
                base(EntityLogicalName, id)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public UserSettings(string keyName, object keyValue) :
                base(EntityLogicalName, keyName, keyValue)
        {
        }

        [System.Diagnostics.DebuggerNonUserCode()]
        public UserSettings(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) :
                base(EntityLogicalName, keyAttributes)
        {
        }

        /// <summary>
        /// Default Constructor.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public UserSettings() :
                base(EntityLogicalName)
        {
        }

        public const string PrimaryIdAttribute = "systemuserid";

        public const string EntitySchemaName = "UserSettings";

        public const string EntityLogicalName = "usersettings";

        public const string EntityLogicalCollectionName = "usersettingses";

        public const string EntitySetName = "usersettingscollection";

        /// <summary>
        /// Normal polling frequency used for address book synchronization in Microsoft Office Outlook.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("addressbooksyncinterval")]
        public System.Nullable<int> addressbooksyncinterval
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("addressbooksyncinterval");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("addressbooksyncinterval", value);
            }
        }

        /// <summary>
        /// Default mode, such as simple or detailed, for advanced find.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("advancedfindstartupmode")]
        public System.Nullable<int> advancedfindstartupmode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("advancedfindstartupmode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("advancedfindstartupmode", value);
            }
        }

        /// <summary>
        /// This attribute is no longer used. The data is now in the Mailbox.AllowEmailConnectorToUseCredentials attribute.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowemailcredentials")]
        [System.ObsoleteAttribute()]
        public System.Nullable<bool> allowemailcredentials
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("allowemailcredentials");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowemailcredentialsname")]
        public string allowemailcredentialsname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("allowemailcredentials"))
                {
                    return this.FormattedValues["allowemailcredentials"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// AM designator to use in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("amdesignator")]
        public string amdesignator
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("amdesignator");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("amdesignator", value);
            }
        }

        /// <summary>
        /// Set user status for ADC Suggestions
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("autocaptureuserstatus")]
        public System.Nullable<int> autocaptureuserstatus
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("autocaptureuserstatus");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("autocaptureuserstatus", value);
            }
        }

        /// <summary>
        /// Auto-create contact on client promote
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("autocreatecontactonpromote")]
        public System.Nullable<int> autocreatecontactonpromote
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("autocreatecontactonpromote");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("autocreatecontactonpromote", value);
            }
        }

        /// <summary>
        /// Unique identifier of the business unit with which the user is associated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessunitid")]
        public System.Nullable<System.Guid> businessunitid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("businessunitid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("businessunitid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessunitidname")]
        public string businessunitidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("businessunitid"))
                {
                    return this.FormattedValues["businessunitid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Calendar type for the system. Set to Gregorian US by default.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("calendartype")]
        public System.Nullable<int> calendartype
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("calendartype");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("calendartype", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who created the user settings.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference createdby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
        public string createdbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
        public string createdbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdby"))
                {
                    return this.FormattedValues["createdby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the user settings object was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> createdon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the usersettings.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("createdonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
        public string createdonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
        public string createdonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("createdonbehalfby"))
                {
                    return this.FormattedValues["createdonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Number of decimal places that can be used for currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currencydecimalprecision")]
        [System.ObsoleteAttribute()]
        public System.Nullable<int> currencydecimalprecision
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("currencydecimalprecision");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("currencydecimalprecision", value);
            }
        }

        /// <summary>
        /// Information about how currency symbols are placed in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currencyformatcode")]
        public System.Nullable<int> currencyformatcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("currencyformatcode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("currencyformatcode", value);
            }
        }

        /// <summary>
        /// Symbol used for currency in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currencysymbol")]
        public string currencysymbol
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("currencysymbol");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("currencysymbol", value);
            }
        }

        /// <summary>
        /// Determines the status of auto install of Dynamics 365 to Teams attempt has been completed
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("d365autoinstallattemptstatus")]
        public virtual UserSettings_d365autoinstallattemptstatus? d365autoinstallattemptstatus
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((UserSettings_d365autoinstallattemptstatus?)(EntityOptionSetEnum.GetEnum(this, "d365autoinstallattemptstatus")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("d365autoinstallattemptstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("d365autoinstallattemptstatusname")]
        public string d365autoinstallattemptstatusname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("d365autoinstallattemptstatus"))
                {
                    return this.FormattedValues["d365autoinstallattemptstatus"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Information that specifies the level of data validation in excel worksheets exported in a format suitable for import.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("datavalidationmodeforexporttoexcel")]
        public virtual UserSettings_datavalidationmodeforexporttoexcel? datavalidationmodeforexporttoexcel
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((UserSettings_datavalidationmodeforexporttoexcel?)(EntityOptionSetEnum.GetEnum(this, "datavalidationmodeforexporttoexcel")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("datavalidationmodeforexporttoexcel", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("datavalidationmodeforexporttoexcelname")]
        public string datavalidationmodeforexporttoexcelname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("datavalidationmodeforexporttoexcel"))
                {
                    return this.FormattedValues["datavalidationmodeforexporttoexcel"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Information about how the date is displayed in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dateformatcode")]
        public System.Nullable<int> dateformatcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("dateformatcode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("dateformatcode", value);
            }
        }

        /// <summary>
        /// String showing how the date is displayed throughout Microsoft 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dateformatstring")]
        public string dateformatstring
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("dateformatstring");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("dateformatstring", value);
            }
        }

        /// <summary>
        /// Character used to separate the month, the day, and the year in dates in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dateseparator")]
        public string dateseparator
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("dateseparator");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("dateseparator", value);
            }
        }

        /// <summary>
        /// Symbol used for decimal in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("decimalsymbol")]
        public string decimalsymbol
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("decimalsymbol");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("decimalsymbol", value);
            }
        }

        /// <summary>
        /// Default calendar view for the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultcalendarview")]
        public System.Nullable<int> defaultcalendarview
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("defaultcalendarview");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("defaultcalendarview", value);
            }
        }

        /// <summary>
        /// Text area to enter default country code.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultcountrycode")]
        public string defaultcountrycode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("defaultcountrycode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("defaultcountrycode", value);
            }
        }

        /// <summary>
        /// Unique identifier of the default dashboard.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultdashboardid")]
        public System.Nullable<System.Guid> defaultdashboardid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("defaultdashboardid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("defaultdashboardid", value);
            }
        }

        /// <summary>
        /// Default search experience for the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultsearchexperience")]
        public virtual UserSettings_defaultsearchexperience? defaultsearchexperience
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((UserSettings_defaultsearchexperience?)(EntityOptionSetEnum.GetEnum(this, "defaultsearchexperience")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("defaultsearchexperience", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultsearchexperiencename")]
        public string defaultsearchexperiencename
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("defaultsearchexperience"))
                {
                    return this.FormattedValues["defaultsearchexperience"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// This attribute is no longer used. The data is now in the Mailbox.Password attribute.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailpassword")]
        [System.ObsoleteAttribute()]
        public string emailpassword
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("emailpassword");
            }
        }

        /// <summary>
        /// This attribute is no longer used. The data is now in the Mailbox.UserName attribute.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailusername")]
        [System.ObsoleteAttribute()]
        public string emailusername
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("emailusername");
            }
        }

        /// <summary>
        /// Indicates the form mode to be used.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityformmode")]
        public virtual UserSettings_entityformmode? entityformmode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((UserSettings_entityformmode?)(EntityOptionSetEnum.GetEnum(this, "entityformmode")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("entityformmode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        /// <summary>
        /// Order in which names are to be displayed in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fullnameconventioncode")]
        public System.Nullable<int> fullnameconventioncode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("fullnameconventioncode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("fullnameconventioncode", value);
            }
        }

        /// <summary>
        /// Information that specifies whether the Get Started pane in lists is enabled.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("getstartedpanecontentenabled")]
        public System.Nullable<bool> getstartedpanecontentenabled
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("getstartedpanecontentenabled");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("getstartedpanecontentenabled", value);
            }
        }

        /// <summary>
        /// Unique identifier of the Help language.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("helplanguageid")]
        public System.Nullable<int> helplanguageid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("helplanguageid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("helplanguageid", value);
            }
        }

        /// <summary>
        /// Web site home page for the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("homepagearea")]
        public string homepagearea
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("homepagearea");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("homepagearea", value);
            }
        }

        /// <summary>
        /// Configuration of the home page layout.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("homepagelayout")]
        public string homepagelayout
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("homepagelayout");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("homepagelayout", value);
            }
        }

        /// <summary>
        /// Web site page for the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("homepagesubarea")]
        public string homepagesubarea
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("homepagesubarea");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("homepagesubarea", value);
            }
        }

        /// <summary>
        /// Information that specifies whether a user account is to ignore unsolicited email (deprecated).
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ignoreunsolicitedemail")]
        public System.Nullable<bool> ignoreunsolicitedemail
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ignoreunsolicitedemail");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("ignoreunsolicitedemail", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ignoreunsolicitedemailname")]
        public string ignoreunsolicitedemailname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("ignoreunsolicitedemail"))
                {
                    return this.FormattedValues["ignoreunsolicitedemail"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Incoming email filtering method.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingemailfilteringmethod")]
        public virtual UserSettings_incomingemailfilteringmethod? incomingemailfilteringmethod
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((UserSettings_incomingemailfilteringmethod?)(EntityOptionSetEnum.GetEnum(this, "incomingemailfilteringmethod")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("incomingemailfilteringmethod", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingemailfilteringmethodname")]
        public string incomingemailfilteringmethodname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("incomingemailfilteringmethod"))
                {
                    return this.FormattedValues["incomingemailfilteringmethod"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Show or dismiss alert for Apps for 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isappsforcrmalertdismissed")]
        public System.Nullable<bool> isappsforcrmalertdismissed
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isappsforcrmalertdismissed");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("isappsforcrmalertdismissed", value);
            }
        }

        /// <summary>
        /// Indicates whether to use the Auto Capture feature enabled or not.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isautodatacaptureenabled")]
        public System.Nullable<bool> isautodatacaptureenabled
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isautodatacaptureenabled");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("isautodatacaptureenabled", value);
            }
        }

        /// <summary>
        /// Enable or disable country code selection .
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdefaultcountrycodecheckenabled")]
        public System.Nullable<bool> isdefaultcountrycodecheckenabled
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isdefaultcountrycodecheckenabled");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("isdefaultcountrycodecheckenabled", value);
            }
        }

        /// <summary>
        /// Indicates if duplicate detection is enabled when going online.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isduplicatedetectionenabledwhengoingonline")]
        public System.Nullable<bool> isduplicatedetectionenabledwhengoingonline
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isduplicatedetectionenabledwhengoingonline");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("isduplicatedetectionenabledwhengoingonline", value);
            }
        }

        /// <summary>
        /// Enable or disable email conversation view on timeline wall selection.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isemailconversationviewenabled")]
        public System.Nullable<bool> isemailconversationviewenabled
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isemailconversationviewenabled");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("isemailconversationviewenabled", value);
            }
        }

        /// <summary>
        /// Enable or disable guided help.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isguidedhelpenabled")]
        public System.Nullable<bool> isguidedhelpenabled
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isguidedhelpenabled");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("isguidedhelpenabled", value);
            }
        }

        /// <summary>
        /// Indicates if the synchronization of user resource booking with Exchange is enabled at user level.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isresourcebookingexchangesyncenabled")]
        public System.Nullable<bool> isresourcebookingexchangesyncenabled
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isresourcebookingexchangesyncenabled");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("isresourcebookingexchangesyncenabled", value);
            }
        }

        /// <summary>
        /// Indicates if send as other user privilege is enabled or not.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("issendasallowed")]
        public System.Nullable<bool> issendasallowed
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("issendasallowed");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("issendasallowed", value);
            }
        }

        /// <summary>
        /// Shows the last time when the traces were read from the database.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastalertsviewedtime")]
        public System.Nullable<System.DateTime> lastalertsviewedtime
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastalertsviewedtime");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("lastalertsviewedtime", value);
            }
        }

        /// <summary>
        /// Stores the timestamp for when the ViewPersonalizationSettings attribute was updated for this user in the UserEntityUISettings table.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastmodifiedtimeforviewpersonalizationsettings")]
        public System.Nullable<System.DateTime> lastmodifiedtimeforviewpersonalizationsettings
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastmodifiedtimeforviewpersonalizationsettings");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("lastmodifiedtimeforviewpersonalizationsettings", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user locale.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("localeid")]
        public System.Nullable<int> localeid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("localeid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("localeid", value);
            }
        }

        /// <summary>
        /// Information that specifies how Long Date is displayed throughout Microsoft 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("longdateformatcode")]
        public System.Nullable<int> longdateformatcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("longdateformatcode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("longdateformatcode", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user who last modified the user settings.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
        public string modifiedbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
        public string modifiedbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedby"))
                {
                    return this.FormattedValues["modifiedby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Date and time when the user settings object was last modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> modifiedon
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who last modified the usersettings.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("modifiedonbehalfby", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
        public string modifiedonbehalfbyname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
        public string modifiedonbehalfbyyominame
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("modifiedonbehalfby"))
                {
                    return this.FormattedValues["modifiedonbehalfby"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Information that specifies how negative currency numbers are displayed in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("negativecurrencyformatcode")]
        public System.Nullable<int> negativecurrencyformatcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("negativecurrencyformatcode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("negativecurrencyformatcode", value);
            }
        }

        /// <summary>
        /// Information that specifies how negative numbers are displayed in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("negativeformatcode")]
        public System.Nullable<int> negativeformatcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("negativeformatcode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("negativeformatcode", value);
            }
        }

        /// <summary>
        /// Next tracking number.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("nexttrackingnumber")]
        public System.Nullable<int> nexttrackingnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("nexttrackingnumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("nexttrackingnumber", value);
            }
        }

        /// <summary>
        /// Information that specifies how numbers are grouped in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("numbergroupformat")]
        public string numbergroupformat
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("numbergroupformat");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("numbergroupformat", value);
            }
        }

        /// <summary>
        /// Symbol used for number separation in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("numberseparator")]
        public string numberseparator
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("numberseparator");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("numberseparator", value);
            }
        }

        /// <summary>
        /// Normal polling frequency used for background offline synchronization in Microsoft Office Outlook.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("offlinesyncinterval")]
        public System.Nullable<int> offlinesyncinterval
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("offlinesyncinterval");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("offlinesyncinterval", value);
            }
        }

        /// <summary>
        /// Normal polling frequency used for record synchronization in Microsoft Office Outlook.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outlooksyncinterval")]
        public System.Nullable<int> outlooksyncinterval
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("outlooksyncinterval");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("outlooksyncinterval", value);
            }
        }

        /// <summary>
        /// Information that specifies how many items to list on a page in list views.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("paginglimit")]
        public System.Nullable<int> paginglimit
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("paginglimit");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("paginglimit", value);
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("personalizationsettings")]
        public string personalizationsettings
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("personalizationsettings");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("personalizationsettings", value);
            }
        }

        /// <summary>
        /// PM designator to use in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pmdesignator")]
        public string pmdesignator
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("pmdesignator");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("pmdesignator", value);
            }
        }

        /// <summary>
        /// Preferred Solution when create a component without under a solution in this organization
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredsolution")]
        public Microsoft.Xrm.Sdk.EntityReference preferredsolution
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("preferredsolution");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("preferredsolution", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredsolutionname")]
        public string preferredsolutionname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("preferredsolution"))
                {
                    return this.FormattedValues["preferredsolution"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Number of decimal places that can be used for prices.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pricingdecimalprecision")]
        [System.ObsoleteAttribute()]
        public System.Nullable<int> pricingdecimalprecision
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("pricingdecimalprecision");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("pricingdecimalprecision", value);
            }
        }

        /// <summary>
        /// Model app channel override
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("releasechannel")]
        public virtual UserSettings_releasechannel? releasechannel
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((UserSettings_releasechannel?)(EntityOptionSetEnum.GetEnum(this, "releasechannel")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("releasechannel", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("releasechannelname")]
        public string releasechannelname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("releasechannel"))
                {
                    return this.FormattedValues["releasechannel"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Picklist for selecting the user preference for reporting scripting errors.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reportscripterrors")]
        public virtual UserSettings_reportscripterrors? reportscripterrors
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((UserSettings_reportscripterrors?)(EntityOptionSetEnum.GetEnum(this, "reportscripterrors")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("reportscripterrors", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reportscripterrorsname")]
        public string reportscripterrorsname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("reportscripterrors"))
                {
                    return this.FormattedValues["reportscripterrors"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The version number for resource booking synchronization with Exchange.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resourcebookingexchangesyncversion")]
        public System.Nullable<long> resourcebookingexchangesyncversion
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("resourcebookingexchangesyncversion");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("resourcebookingexchangesyncversion", value);
            }
        }

        /// <summary>
        /// Store selected customer service hub dashboard saved filter id.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("selectedglobalfilterid")]
        public System.Nullable<System.Guid> selectedglobalfilterid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("selectedglobalfilterid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("selectedglobalfilterid", value);
            }
        }

        /// <summary>
        /// Information that specifies whether to display the week number in calendar displays in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("showweeknumber")]
        public System.Nullable<bool> showweeknumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("showweeknumber");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("showweeknumber", value);
            }
        }

        /// <summary>
        /// For Internal use only
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("splitviewstate")]
        public System.Nullable<bool> splitviewstate
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("splitviewstate");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("splitviewstate", value);
            }
        }

        /// <summary>
        /// Indicates if the company field in Microsoft Office Outlook items are set during Outlook synchronization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("synccontactcompany")]
        public System.Nullable<bool> synccontactcompany
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("synccontactcompany");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("synccontactcompany", value);
            }
        }

        /// <summary>
        /// Unique identifier of the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("systemuserid")]
        public System.Nullable<System.Guid> systemuserid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("systemuserid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("systemuserid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("systemuserid")]
        public override System.Guid Id
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return base.Id;
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.systemuserid = value;
            }
        }

        /// <summary>
        /// The number of times a user has interacted with the Tabled Scoped Dataverse Search feature teaching bubble.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("tablescopeddvsearchfeatureteachingbubbleviews")]
        public System.Nullable<int> tablescopeddvsearchfeatureteachingbubbleviews
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("tablescopeddvsearchfeatureteachingbubbleviews");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("tablescopeddvsearchfeatureteachingbubbleviews", value);
            }
        }

        /// <summary>
        /// The number of times a user has interacted with the Tabled Scoped Dataverse Search Quick Find teaching bubble.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("tablescopeddvsearchquickfindteachingbubbleviews")]
        public System.Nullable<int> tablescopeddvsearchquickfindteachingbubbleviews
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("tablescopeddvsearchquickfindteachingbubbleviews");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("tablescopeddvsearchquickfindteachingbubbleviews", value);
            }
        }

        /// <summary>
        /// Information that specifies how the time is displayed in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timeformatcode")]
        public System.Nullable<int> timeformatcode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timeformatcode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timeformatcode", value);
            }
        }

        /// <summary>
        /// Text for how time is displayed in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timeformatstring")]
        public string timeformatstring
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("timeformatstring");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timeformatstring", value);
            }
        }

        /// <summary>
        /// Text for how time is displayed in Microsoft Dynamics 365.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timeseparator")]
        public string timeseparator
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("timeseparator");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timeseparator", value);
            }
        }

        /// <summary>
        /// Local time zone adjustment for the user. System calculated based on the time zone selected.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonebias")]
        public System.Nullable<int> timezonebias
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezonebias");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezonebias", value);
            }
        }

        /// <summary>
        /// Local time zone for the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonecode")]
        public System.Nullable<int> timezonecode
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezonecode");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezonecode", value);
            }
        }

        /// <summary>
        /// Local time zone daylight adjustment for the user. System calculated based on the time zone selected.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonedaylightbias")]
        public System.Nullable<int> timezonedaylightbias
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezonedaylightbias");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezonedaylightbias", value);
            }
        }

        /// <summary>
        /// Local time zone daylight day for the user. System calculated based on the time zone selected.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonedaylightday")]
        public System.Nullable<int> timezonedaylightday
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezonedaylightday");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezonedaylightday", value);
            }
        }

        /// <summary>
        /// Local time zone daylight day of week for the user. System calculated based on the time zone selected in Options.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonedaylightdayofweek")]
        public System.Nullable<int> timezonedaylightdayofweek
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezonedaylightdayofweek");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezonedaylightdayofweek", value);
            }
        }

        /// <summary>
        /// Local time zone daylight hour for the user. System calculated based on the time zone selected.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonedaylighthour")]
        public System.Nullable<int> timezonedaylighthour
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezonedaylighthour");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezonedaylighthour", value);
            }
        }

        /// <summary>
        /// Local time zone daylight minute for the user. System calculated based on the time zone selected.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonedaylightminute")]
        public System.Nullable<int> timezonedaylightminute
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezonedaylightminute");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezonedaylightminute", value);
            }
        }

        /// <summary>
        /// Local time zone daylight month for the user. System calculated based on the time zone selected.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonedaylightmonth")]
        public System.Nullable<int> timezonedaylightmonth
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezonedaylightmonth");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezonedaylightmonth", value);
            }
        }

        /// <summary>
        /// Local time zone daylight second for the user. System calculated based on the time zone selected.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonedaylightsecond")]
        public System.Nullable<int> timezonedaylightsecond
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezonedaylightsecond");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezonedaylightsecond", value);
            }
        }

        /// <summary>
        /// Local time zone daylight year for the user. System calculated based on the time zone selected.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonedaylightyear")]
        public System.Nullable<int> timezonedaylightyear
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezonedaylightyear");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezonedaylightyear", value);
            }
        }

        /// <summary>
        /// Local time zone standard time bias for the user. System calculated based on the time zone selected.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonestandardbias")]
        public System.Nullable<int> timezonestandardbias
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezonestandardbias");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezonestandardbias", value);
            }
        }

        /// <summary>
        /// Local time zone standard day for the user. System calculated based on the time zone selected.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonestandardday")]
        public System.Nullable<int> timezonestandardday
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezonestandardday");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezonestandardday", value);
            }
        }

        /// <summary>
        /// Local time zone standard day of week for the user. System calculated based on the time zone selected.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonestandarddayofweek")]
        public System.Nullable<int> timezonestandarddayofweek
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezonestandarddayofweek");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezonestandarddayofweek", value);
            }
        }

        /// <summary>
        /// Local time zone standard hour for the user. System calculated based on the time zone selected.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonestandardhour")]
        public System.Nullable<int> timezonestandardhour
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezonestandardhour");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezonestandardhour", value);
            }
        }

        /// <summary>
        /// Local time zone standard minute for the user. System calculated based on the time zone selected.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonestandardminute")]
        public System.Nullable<int> timezonestandardminute
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezonestandardminute");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezonestandardminute", value);
            }
        }

        /// <summary>
        /// Local time zone standard month for the user. System calculated based on the time zone selected.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonestandardmonth")]
        public System.Nullable<int> timezonestandardmonth
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezonestandardmonth");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezonestandardmonth", value);
            }
        }

        /// <summary>
        /// Local time zone standard second for the user. System calculated based on the time zone selected.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonestandardsecond")]
        public System.Nullable<int> timezonestandardsecond
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezonestandardsecond");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezonestandardsecond", value);
            }
        }

        /// <summary>
        /// Local time zone standard year for the user. System calculated based on the time zone selected.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonestandardyear")]
        public System.Nullable<int> timezonestandardyear
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezonestandardyear");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("timezonestandardyear", value);
            }
        }

        /// <summary>
        /// Tracking token ID.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("trackingtokenid")]
        public System.Nullable<int> trackingtokenid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("trackingtokenid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("trackingtokenid", value);
            }
        }

        /// <summary>
        /// Unique identifier of the default currency of the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("transactioncurrencyid", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
        public string transactioncurrencyidname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("transactioncurrencyid"))
                {
                    return this.FormattedValues["transactioncurrencyid"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// The list of app modules with try toggle sets
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("trytogglesets")]
        public string trytogglesets
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("trytogglesets");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("trytogglesets", value);
            }
        }

        /// <summary>
        /// Enable or disable try toggle status.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("trytogglestatus")]
        public System.Nullable<bool> trytogglestatus
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("trytogglestatus");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("trytogglestatus", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("trytogglestatusname")]
        public string trytogglestatusname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("trytogglestatus"))
                {
                    return this.FormattedValues["trytogglestatus"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Unique identifier of the language in which to view the user interface (UI).
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("uilanguageid")]
        public System.Nullable<int> uilanguageid
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("uilanguageid");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("uilanguageid", value);
            }
        }

        /// <summary>
        /// Indicates whether to use the Microsoft Dynamics 365 appointment form within Microsoft Office Outlook for creating new appointments.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usecrmformforappointment")]
        public System.Nullable<bool> usecrmformforappointment
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("usecrmformforappointment");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("usecrmformforappointment", value);
            }
        }

        /// <summary>
        /// Indicates whether to use the Microsoft Dynamics 365 contact form within Microsoft Office Outlook for creating new contacts.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usecrmformforcontact")]
        public System.Nullable<bool> usecrmformforcontact
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("usecrmformforcontact");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("usecrmformforcontact", value);
            }
        }

        /// <summary>
        /// Indicates whether to use the Microsoft Dynamics 365 email form within Microsoft Office Outlook for creating new emails.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usecrmformforemail")]
        public System.Nullable<bool> usecrmformforemail
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("usecrmformforemail");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("usecrmformforemail", value);
            }
        }

        /// <summary>
        /// Indicates whether to use the Microsoft Dynamics 365 task form within Microsoft Office Outlook for creating new tasks.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usecrmformfortask")]
        public System.Nullable<bool> usecrmformfortask
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("usecrmformfortask");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("usecrmformfortask", value);
            }
        }

        /// <summary>
        /// Indicates whether image strips are used to render images.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("useimagestrips")]
        public System.Nullable<bool> useimagestrips
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("useimagestrips");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("useimagestrips", value);
            }
        }

        /// <summary>
        /// Specifies user profile ids in comma separated list.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("userprofile")]
        public string userprofile
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("userprofile");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("userprofile", value);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> versionnumber
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// The layout of the visualization pane.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("visualizationpanelayout")]
        public virtual UserSettings_visualizationpanelayout? visualizationpanelayout
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return ((UserSettings_visualizationpanelayout?)(EntityOptionSetEnum.GetEnum(this, "visualizationpanelayout")));
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("visualizationpanelayout", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("visualizationpanelayoutname")]
        public string visualizationpanelayoutname
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                if (this.FormattedValues.Contains("visualizationpanelayout"))
                {
                    return this.FormattedValues["visualizationpanelayout"];
                }
                else
                {
                    return default(string);
                }
            }
        }

        /// <summary>
        /// Workday start time for the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("workdaystarttime")]
        public string workdaystarttime
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("workdaystarttime");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("workdaystarttime", value);
            }
        }

        /// <summary>
        /// Workday stop time for the user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("workdaystoptime")]
        public string workdaystoptime
        {
            [System.Diagnostics.DebuggerNonUserCode()]
            get
            {
                return this.GetAttributeValue<string>("workdaystoptime");
            }
            [System.Diagnostics.DebuggerNonUserCode()]
            set
            {
                this.SetAttributeValue("workdaystoptime", value);
            }
        }

        /// <summary>
        /// Constructor for populating via LINQ queries given a LINQ anonymous type
        /// <param name="anonymousType">LINQ anonymous type.</param>
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode()]
        public UserSettings(object anonymousType) :
                this()
        {
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();

                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int)value);
                    name = name.Remove(name.Length - "enum".Length);
                }

                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["systemuserid"] = base.Id;
                        break;
                    case "systemuserid":
                        var id = (System.Nullable<System.Guid>)value;
                        if (id == null) { continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
        }
    }
}
#pragma warning restore CS1591
