#pragma warning disable CS1591
// Code Generated by DLaB.ModelBuilderExtensions
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ECC.Core.DataContext
{
	
	
	/// <summary>
	/// Organization or Facility that represents a Childcare Provider
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("account")]
	public partial class Account : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the account entity
		/// </summary>
		public static partial class Fields
		{
			public const string Account_Email_EmailSender = "Account_Email_EmailSender";
			public const string Account_Email_SendersAccount = "Account_Email_SendersAccount";
			public const string Account_Emails = "Account_Emails";
			public const string Referencingaccount_master_account = "account_master_account";
			public const string Referencingaccount_parent_account = "account_parent_account";
			public const string account_primary_contact = "account_primary_contact";
			public const string accountcategorycode = "accountcategorycode";
			public const string accountclassificationcode = "accountclassificationcode";
			public const string accountid = "accountid";
			public const string Id = "accountid";
			public const string accountnumber = "accountnumber";
			public const string accountratingcode = "accountratingcode";
			public const string address1_addressid = "address1_addressid";
			public const string address1_addresstypecode = "address1_addresstypecode";
			public const string address1_city = "address1_city";
			public const string address1_composite = "address1_composite";
			public const string address1_country = "address1_country";
			public const string address1_county = "address1_county";
			public const string address1_fax = "address1_fax";
			public const string address1_freighttermscode = "address1_freighttermscode";
			public const string address1_latitude = "address1_latitude";
			public const string address1_line1 = "address1_line1";
			public const string address1_line2 = "address1_line2";
			public const string address1_line3 = "address1_line3";
			public const string address1_longitude = "address1_longitude";
			public const string address1_name = "address1_name";
			public const string address1_postalcode = "address1_postalcode";
			public const string address1_postofficebox = "address1_postofficebox";
			public const string address1_primarycontactname = "address1_primarycontactname";
			public const string address1_shippingmethodcode = "address1_shippingmethodcode";
			public const string address1_stateorprovince = "address1_stateorprovince";
			public const string address1_telephone1 = "address1_telephone1";
			public const string address1_telephone2 = "address1_telephone2";
			public const string address1_telephone3 = "address1_telephone3";
			public const string address1_upszone = "address1_upszone";
			public const string address1_utcoffset = "address1_utcoffset";
			public const string address2_addressid = "address2_addressid";
			public const string address2_addresstypecode = "address2_addresstypecode";
			public const string address2_city = "address2_city";
			public const string address2_composite = "address2_composite";
			public const string address2_country = "address2_country";
			public const string address2_county = "address2_county";
			public const string address2_fax = "address2_fax";
			public const string address2_freighttermscode = "address2_freighttermscode";
			public const string address2_latitude = "address2_latitude";
			public const string address2_line1 = "address2_line1";
			public const string address2_line2 = "address2_line2";
			public const string address2_line3 = "address2_line3";
			public const string address2_longitude = "address2_longitude";
			public const string address2_name = "address2_name";
			public const string address2_postalcode = "address2_postalcode";
			public const string address2_postofficebox = "address2_postofficebox";
			public const string address2_primarycontactname = "address2_primarycontactname";
			public const string address2_shippingmethodcode = "address2_shippingmethodcode";
			public const string address2_stateorprovince = "address2_stateorprovince";
			public const string address2_telephone1 = "address2_telephone1";
			public const string address2_telephone2 = "address2_telephone2";
			public const string address2_telephone3 = "address2_telephone3";
			public const string address2_upszone = "address2_upszone";
			public const string address2_utcoffset = "address2_utcoffset";
			public const string adx_createdbyipaddress = "adx_createdbyipaddress";
			public const string adx_createdbyusername = "adx_createdbyusername";
			public const string adx_modifiedbyipaddress = "adx_modifiedbyipaddress";
			public const string adx_modifiedbyusername = "adx_modifiedbyusername";
			public const string aging30 = "aging30";
			public const string aging30_base = "aging30_base";
			public const string aging60 = "aging60";
			public const string aging60_base = "aging60_base";
			public const string aging90 = "aging90";
			public const string aging90_base = "aging90_base";
			public const string businesstypecode = "businesstypecode";
			public const string ccof_accounttype = "ccof_accounttype";
			public const string ccof_approveduntil = "ccof_approveduntil";
			public const string ccof_contractstatus = "ccof_contractstatus";
			public const string ccof_everreceivedfundingundertheccofprogram = "ccof_everreceivedfundingundertheccofprogram";
			public const string ccof_facilityenddate = "ccof_facilityenddate";
			public const string ccof_facilitylicencenumber = "ccof_facilitylicencenumber";
			public const string ccof_facilityreceived_ccof_funding = "ccof_facilityreceived_ccof_funding";
			public const string ccof_facilitystartdate = "ccof_facilitystartdate";
			public const string ccof_facilitystatus = "ccof_facilitystatus";
			public const string ccof_formcomplete = "ccof_formcomplete";
			public const string ccof_fundingagreementnumber = "ccof_fundingagreementnumber";
			public const string ccof_instructionnumber = "ccof_instructionnumber";
			public const string ccof_is_mailing_address_same = "ccof_is_mailing_address_same";
			public const string ccof_licensestartdate = "ccof_licensestartdate";
			public const string ccof_managerdisabled = "ccof_managerdisabled";
			public const string ccof_maximumcapacity = "ccof_maximumcapacity";
			public const string ccof_numberoffacilities = "ccof_numberoffacilities";
			public const string ccof_numberoffacilities_date = "ccof_numberoffacilities_date";
			public const string ccof_numberoffacilities_state = "ccof_numberoffacilities_state";
			public const string ccof_organizationid = "ccof_organizationid";
			public const string ccof_organizationname = "ccof_organizationname";
			public const string ccof_position = "ccof_position";
			public const string ccof_primarybusinessbceid = "ccof_primarybusinessbceid";
			public const string ccof_providername = "ccof_providername";
			public const string ccof_typeoforganization = "ccof_typeoforganization";
			public const string ccof_unreadactionmessages = "ccof_unreadactionmessages";
			public const string ccof_unreadactionmessages_date = "ccof_unreadactionmessages_date";
			public const string ccof_unreadactionmessages_state = "ccof_unreadactionmessages_state";
			public const string contact_customer_accounts = "contact_customer_accounts";
			public const string createdby = "createdby";
			public const string createdbyexternalparty = "createdbyexternalparty";
			public const string createdbyexternalpartyName = "createdbyexternalpartyname";
			public const string createdbyName = "createdbyname";
			public const string createdon = "createdon";
			public const string createdonbehalfby = "createdonbehalfby";
			public const string createdonbehalfbyName = "createdonbehalfbyname";
			public const string creditlimit = "creditlimit";
			public const string creditlimit_base = "creditlimit_base";
			public const string creditonhold = "creditonhold";
			public const string customersizecode = "customersizecode";
			public const string customertypecode = "customertypecode";
			public const string defaultpricelevelid = "defaultpricelevelid";
			public const string defaultpricelevelidName = "defaultpricelevelidname";
			public const string description = "description";
			public const string donotbulkemail = "donotbulkemail";
			public const string donotbulkpostalmail = "donotbulkpostalmail";
			public const string donotemail = "donotemail";
			public const string donotfax = "donotfax";
			public const string donotphone = "donotphone";
			public const string donotpostalmail = "donotpostalmail";
			public const string donotsendmm = "donotsendmm";
			public const string emailaddress1 = "emailaddress1";
			public const string emailaddress2 = "emailaddress2";
			public const string emailaddress3 = "emailaddress3";
			public const string entityimage = "entityimage";
			public const string entityimage_timestamp = "entityimage_timestamp";
			public const string entityimage_url = "entityimage_url";
			public const string entityimageid = "entityimageid";
			public const string entityimageidName = "entityimageidname";
			public const string exchangerate = "exchangerate";
			public const string fax = "fax";
			public const string followemail = "followemail";
			public const string ftpsiteurl = "ftpsiteurl";
			public const string importsequencenumber = "importsequencenumber";
			public const string industrycode = "industrycode";
			public const string lastonholdtime = "lastonholdtime";
			public const string lastusedincampaign = "lastusedincampaign";
			public const string marketcap = "marketcap";
			public const string marketcap_base = "marketcap_base";
			public const string marketingonly = "marketingonly";
			public const string masterid = "masterid";
			public const string masteridName = "masteridname";
			public const string merged = "merged";
			public const string modifiedby = "modifiedby";
			public const string modifiedbyexternalparty = "modifiedbyexternalparty";
			public const string modifiedbyexternalpartyName = "modifiedbyexternalpartyname";
			public const string modifiedbyName = "modifiedbyname";
			public const string modifiedon = "modifiedon";
			public const string modifiedonbehalfby = "modifiedonbehalfby";
			public const string modifiedonbehalfbyName = "modifiedonbehalfbyname";
			public const string Referencingmsa_account_managingpartner = "msa_account_managingpartner";
			public const string msa_contact_managingpartner = "msa_contact_managingpartner";
			public const string msa_managingpartnerid = "msa_managingpartnerid";
			public const string msa_managingpartneridName = "msa_managingpartneridname";
			public const string Referencingmsdyn_account_account_BillingAccount = "msdyn_account_account_BillingAccount";
			public const string msdyn_accountkpiid = "msdyn_accountkpiid";
			public const string msdyn_accountkpiidName = "msdyn_accountkpiidname";
			public const string msdyn_billingaccount = "msdyn_billingaccount";
			public const string msdyn_billingaccountName = "msdyn_billingaccountname";
			public const string msdyn_gdproptout = "msdyn_gdproptout";
			public const string msdyn_preferredresource = "msdyn_preferredresource";
			public const string msdyn_preferredresourceName = "msdyn_preferredresourcename";
			public const string msdyn_primarytimezone = "msdyn_primarytimezone";
			public const string msdyn_salesaccelerationinsightid = "msdyn_salesaccelerationinsightid";
			public const string msdyn_salesaccelerationinsightidName = "msdyn_salesaccelerationinsightidname";
			public const string msdyn_salestaxcode = "msdyn_salestaxcode";
			public const string msdyn_salestaxcodeName = "msdyn_salestaxcodename";
			public const string msdyn_segmentid = "msdyn_segmentid";
			public const string msdyn_segmentidName = "msdyn_segmentidname";
			public const string msdyn_serviceterritory = "msdyn_serviceterritory";
			public const string msdyn_serviceterritoryName = "msdyn_serviceterritoryname";
			public const string msdyn_taxexempt = "msdyn_taxexempt";
			public const string msdyn_taxexemptnumber = "msdyn_taxexemptnumber";
			public const string msdyn_travelcharge = "msdyn_travelcharge";
			public const string msdyn_travelcharge_base = "msdyn_travelcharge_base";
			public const string msdyn_travelchargetype = "msdyn_travelchargetype";
			public const string msdyn_workhourtemplate = "msdyn_workhourtemplate";
			public const string msdyn_workhourtemplateName = "msdyn_workhourtemplatename";
			public const string msdyn_workorderinstructions = "msdyn_workorderinstructions";
			public const string msft_datastate = "msft_datastate";
			public const string name = "name";
			public const string numberofemployees = "numberofemployees";
			public const string ofm_accb_providerid = "ofm_accb_providerid";
			public const string ofm_business_bceid_facility = "ofm_business_bceid_facility";
			public const string ofm_business_number = "ofm_business_number";
			public const string ofm_business_type = "ofm_business_type";
			public const string ofm_contact_account = "ofm_contact_account";
			public const string ofm_document_account = "ofm_document_account";
			public const string ofm_doing_business_as = "ofm_doing_business_as";
			public const string ofm_facility_application = "ofm_facility_application";
			public const string ofm_facility_licence = "ofm_facility_licence";
			public const string ofm_facility_request_facility = "ofm_facility_request_facility";
			public const string ofm_funding_facility_account = "ofm_funding_facility_account";
			public const string ofm_good_standing_indicator = "ofm_good_standing_indicator";
			public const string ofm_good_standing_status = "ofm_good_standing_status";
			public const string ofm_good_standing_validated_on = "ofm_good_standing_validated_on";
			public const string ofm_indigenous_led = "ofm_indigenous_led";
			public const string ofm_is_mailing_address_different = "ofm_is_mailing_address_different";
			public const string ofm_organization_application = "ofm_organization_application";
			public const string ofm_organization_legal_name = "ofm_organization_legal_name";
			public const string ofm_ownership = "ofm_ownership";
			public const string ofm_primarycontact = "ofm_primarycontact";
			public const string ofm_primarycontactName = "ofm_primarycontactname";
			public const string ofm_provider_type = "ofm_provider_type";
			public const string ofm_tdad_funding_agreement_number = "ofm_tdad_funding_agreement_number";
			public const string onholdtime = "onholdtime";
			public const string opendeals = "opendeals";
			public const string opendeals_date = "opendeals_date";
			public const string opendeals_state = "opendeals_state";
			public const string openrevenue = "openrevenue";
			public const string openrevenue_base = "openrevenue_base";
			public const string openrevenue_date = "openrevenue_date";
			public const string openrevenue_state = "openrevenue_state";
			public const string originatingleadid = "originatingleadid";
			public const string originatingleadidName = "originatingleadidname";
			public const string overriddencreatedon = "overriddencreatedon";
			public const string ownerid = "ownerid";
			public const string owneridName = "owneridname";
			public const string ownershipcode = "ownershipcode";
			public const string owningbusinessunit = "owningbusinessunit";
			public const string owningbusinessunitName = "owningbusinessunitname";
			public const string owningteam = "owningteam";
			public const string owningteamName = "owningteamname";
			public const string owninguser = "owninguser";
			public const string owninguserName = "owningusername";
			public const string parentaccountid = "parentaccountid";
			public const string parentaccountidName = "parentaccountidname";
			public const string participatesinworkflow = "participatesinworkflow";
			public const string paymenttermscode = "paymenttermscode";
			public const string preferredappointmentdaycode = "preferredappointmentdaycode";
			public const string preferredappointmenttimecode = "preferredappointmenttimecode";
			public const string preferredcontactmethodcode = "preferredcontactmethodcode";
			public const string preferredequipmentid = "preferredequipmentid";
			public const string preferredequipmentidName = "preferredequipmentidname";
			public const string preferredserviceid = "preferredserviceid";
			public const string preferredserviceidName = "preferredserviceidname";
			public const string preferredsystemuserid = "preferredsystemuserid";
			public const string preferredsystemuseridName = "preferredsystemuseridname";
			public const string primarycontactid = "primarycontactid";
			public const string primarycontactidName = "primarycontactidname";
			public const string primarysatoriid = "primarysatoriid";
			public const string primarytwitterid = "primarytwitterid";
			public const string processid = "processid";
			public const string Referencedaccount_master_account = "Referencedaccount_master_account";
			public const string Referencedaccount_parent_account = "Referencedaccount_parent_account";
			public const string Referencedmsa_account_managingpartner = "Referencedmsa_account_managingpartner";
			public const string Referencedmsdyn_account_account_BillingAccount = "Referencedmsdyn_account_account_BillingAccount";
			public const string revenue = "revenue";
			public const string revenue_base = "revenue_base";
			public const string sharesoutstanding = "sharesoutstanding";
			public const string shippingmethodcode = "shippingmethodcode";
			public const string sic = "sic";
			public const string slaid = "slaid";
			public const string slaidName = "slaidname";
			public const string slainvokedid = "slainvokedid";
			public const string slainvokedidName = "slainvokedidname";
			public const string stageid = "stageid";
			public const string stageidName = "stageidname";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string stockexchange = "stockexchange";
			public const string team_accounts = "team_accounts";
			public const string teamsfollowed = "teamsfollowed";
			public const string telephone1 = "telephone1";
			public const string telephone2 = "telephone2";
			public const string telephone3 = "telephone3";
			public const string territorycode = "territorycode";
			public const string territoryid = "territoryid";
			public const string territoryidName = "territoryidname";
			public const string tickersymbol = "tickersymbol";
			public const string timespentbymeonemailandmeetings = "timespentbymeonemailandmeetings";
			public const string timezoneruleversionnumber = "timezoneruleversionnumber";
			public const string transactioncurrencyid = "transactioncurrencyid";
			public const string transactioncurrencyidName = "transactioncurrencyidname";
			public const string traversedpath = "traversedpath";
			public const string utcconversiontimezonecode = "utcconversiontimezonecode";
			public const string versionnumber = "versionnumber";
			public const string websiteurl = "websiteurl";
			public const string yominame = "yominame";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public Account(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public Account(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public Account(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		public const string AlternateKeys = "accountnumber";
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Account() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "accountid";
		
		public const string PrimaryNameAttribute = "name";
		
		public const string EntitySchemaName = "Account";
		
		public const string EntityLogicalName = "account";
		
		public const string EntityLogicalCollectionName = "accounts";
		
		public const string EntitySetName = "accounts";
		
		public const int EntityTypeCode = 1;
		
		/// <summary>
		/// Select a category to indicate whether the customer account is standard or preferred.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountcategorycode")]
		public virtual Account_accountcategorycode? accountcategorycode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_accountcategorycode?)(EntityOptionSetEnum.GetEnum(this, "accountcategorycode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("accountcategorycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Select a classification code to indicate the potential value of the customer account based on the projected return on investment, cooperation level, sales cycle length or other criteria.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountclassificationcode")]
		public virtual Account_accountclassificationcode? accountclassificationcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_accountclassificationcode?)(EntityOptionSetEnum.GetEnum(this, "accountclassificationcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("accountclassificationcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Unique identifier of the account.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountid")]
		public System.Nullable<System.Guid> accountid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("accountid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("accountid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.accountid = value;
			}
		}
		
		/// <summary>
		/// Type an ID number or code for the account to quickly search and identify the account in system views.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountnumber")]
		public string accountnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("accountnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("accountnumber", value);
			}
		}
		
		/// <summary>
		/// Select a rating to indicate the value of the customer account.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountratingcode")]
		public virtual Account_accountratingcode? accountratingcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_accountratingcode?)(EntityOptionSetEnum.GetEnum(this, "accountratingcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("accountratingcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Unique identifier for address 1.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_addressid")]
		public System.Nullable<System.Guid> address1_addressid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("address1_addressid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_addressid", value);
			}
		}
		
		/// <summary>
		/// Select the primary address type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_addresstypecode")]
		public virtual Account_address1_addresstypecode? address1_addresstypecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_address1_addresstypecode?)(EntityOptionSetEnum.GetEnum(this, "address1_addresstypecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_addresstypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Type the city for the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_city")]
		public string address1_city
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_city");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_city", value);
			}
		}
		
		/// <summary>
		/// Shows the complete primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_composite")]
		public string address1_composite
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_composite");
			}
		}
		
		/// <summary>
		/// Type the country or region for the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_country")]
		public string address1_country
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_country");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_country", value);
			}
		}
		
		/// <summary>
		/// Type the county for the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_county")]
		public string address1_county
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_county");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_county", value);
			}
		}
		
		/// <summary>
		/// Type the fax number associated with the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_fax")]
		public string address1_fax
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_fax");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_fax", value);
			}
		}
		
		/// <summary>
		/// Select the freight terms for the primary address to make sure shipping orders are processed correctly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_freighttermscode")]
		public virtual Account_address1_freighttermscode? address1_freighttermscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_address1_freighttermscode?)(EntityOptionSetEnum.GetEnum(this, "address1_freighttermscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_freighttermscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Type the latitude value for the primary address for use in mapping and other applications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_latitude")]
		public System.Nullable<double> address1_latitude
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("address1_latitude");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_latitude", value);
			}
		}
		
		/// <summary>
		/// Type the first line of the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_line1")]
		public string address1_line1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_line1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_line1", value);
			}
		}
		
		/// <summary>
		/// Type the second line of the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_line2")]
		public string address1_line2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_line2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_line2", value);
			}
		}
		
		/// <summary>
		/// Type the third line of the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_line3")]
		public string address1_line3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_line3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_line3", value);
			}
		}
		
		/// <summary>
		/// Type the longitude value for the primary address for use in mapping and other applications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_longitude")]
		public System.Nullable<double> address1_longitude
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("address1_longitude");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_longitude", value);
			}
		}
		
		/// <summary>
		/// Type a descriptive name for the primary address, such as Corporate Headquarters.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_name")]
		public string address1_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_name", value);
			}
		}
		
		/// <summary>
		/// Type the ZIP Code or postal code for the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_postalcode")]
		public string address1_postalcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_postalcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_postalcode", value);
			}
		}
		
		/// <summary>
		/// Type the post office box number of the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_postofficebox")]
		public string address1_postofficebox
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_postofficebox");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_postofficebox", value);
			}
		}
		
		/// <summary>
		/// Type the name of the main contact at the account's primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_primarycontactname")]
		public string address1_primarycontactname
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_primarycontactname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_primarycontactname", value);
			}
		}
		
		/// <summary>
		/// Select a shipping method for deliveries sent to this address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_shippingmethodcode")]
		public virtual Account_address1_shippingmethodcode? address1_shippingmethodcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_address1_shippingmethodcode?)(EntityOptionSetEnum.GetEnum(this, "address1_shippingmethodcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Type the state or province of the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_stateorprovince")]
		public string address1_stateorprovince
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_stateorprovince");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_stateorprovince", value);
			}
		}
		
		/// <summary>
		/// Type the main phone number associated with the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_telephone1")]
		public string address1_telephone1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_telephone1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_telephone1", value);
			}
		}
		
		/// <summary>
		/// Type a second phone number associated with the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_telephone2")]
		public string address1_telephone2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_telephone2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_telephone2", value);
			}
		}
		
		/// <summary>
		/// Type a third phone number associated with the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_telephone3")]
		public string address1_telephone3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_telephone3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_telephone3", value);
			}
		}
		
		/// <summary>
		/// Type the UPS zone of the primary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_upszone")]
		public string address1_upszone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_upszone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_upszone", value);
			}
		}
		
		/// <summary>
		/// Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_utcoffset")]
		public System.Nullable<int> address1_utcoffset
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("address1_utcoffset");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_utcoffset", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for address 2.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_addressid")]
		public System.Nullable<System.Guid> address2_addressid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("address2_addressid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_addressid", value);
			}
		}
		
		/// <summary>
		/// Select the secondary address type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_addresstypecode")]
		public virtual Account_address2_addresstypecode? address2_addresstypecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_address2_addresstypecode?)(EntityOptionSetEnum.GetEnum(this, "address2_addresstypecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_addresstypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Type the city for the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_city")]
		public string address2_city
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_city");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_city", value);
			}
		}
		
		/// <summary>
		/// Shows the complete secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_composite")]
		public string address2_composite
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_composite");
			}
		}
		
		/// <summary>
		/// Type the country or region for the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_country")]
		public string address2_country
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_country");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_country", value);
			}
		}
		
		/// <summary>
		/// Type the county for the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_county")]
		public string address2_county
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_county");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_county", value);
			}
		}
		
		/// <summary>
		/// Type the fax number associated with the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_fax")]
		public string address2_fax
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_fax");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_fax", value);
			}
		}
		
		/// <summary>
		/// Select the freight terms for the secondary address to make sure shipping orders are processed correctly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_freighttermscode")]
		public virtual Account_address2_freighttermscode? address2_freighttermscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_address2_freighttermscode?)(EntityOptionSetEnum.GetEnum(this, "address2_freighttermscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_freighttermscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Type the latitude value for the secondary address for use in mapping and other applications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_latitude")]
		public System.Nullable<double> address2_latitude
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("address2_latitude");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_latitude", value);
			}
		}
		
		/// <summary>
		/// Type the first line of the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_line1")]
		public string address2_line1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_line1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_line1", value);
			}
		}
		
		/// <summary>
		/// Type the second line of the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_line2")]
		public string address2_line2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_line2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_line2", value);
			}
		}
		
		/// <summary>
		/// Type the third line of the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_line3")]
		public string address2_line3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_line3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_line3", value);
			}
		}
		
		/// <summary>
		/// Type the longitude value for the secondary address for use in mapping and other applications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_longitude")]
		public System.Nullable<double> address2_longitude
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("address2_longitude");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_longitude", value);
			}
		}
		
		/// <summary>
		/// Type a descriptive name for the secondary address, such as Corporate Headquarters.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_name")]
		public string address2_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_name", value);
			}
		}
		
		/// <summary>
		/// Type the ZIP Code or postal code for the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_postalcode")]
		public string address2_postalcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_postalcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_postalcode", value);
			}
		}
		
		/// <summary>
		/// Type the post office box number of the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_postofficebox")]
		public string address2_postofficebox
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_postofficebox");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_postofficebox", value);
			}
		}
		
		/// <summary>
		/// Type the name of the main contact at the account's secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_primarycontactname")]
		public string address2_primarycontactname
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_primarycontactname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_primarycontactname", value);
			}
		}
		
		/// <summary>
		/// Select a shipping method for deliveries sent to this address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_shippingmethodcode")]
		public virtual Account_address2_shippingmethodcode? address2_shippingmethodcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_address2_shippingmethodcode?)(EntityOptionSetEnum.GetEnum(this, "address2_shippingmethodcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Type the state or province of the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_stateorprovince")]
		public string address2_stateorprovince
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_stateorprovince");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_stateorprovince", value);
			}
		}
		
		/// <summary>
		/// Type the main phone number associated with the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_telephone1")]
		public string address2_telephone1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_telephone1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_telephone1", value);
			}
		}
		
		/// <summary>
		/// Type a second phone number associated with the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_telephone2")]
		public string address2_telephone2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_telephone2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_telephone2", value);
			}
		}
		
		/// <summary>
		/// Type a third phone number associated with the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_telephone3")]
		public string address2_telephone3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_telephone3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_telephone3", value);
			}
		}
		
		/// <summary>
		/// Type the UPS zone of the secondary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_upszone")]
		public string address2_upszone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_upszone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_upszone", value);
			}
		}
		
		/// <summary>
		/// Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_utcoffset")]
		public System.Nullable<int> address2_utcoffset
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("address2_utcoffset");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_utcoffset", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_createdbyipaddress")]
		public string adx_createdbyipaddress
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_createdbyipaddress");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_createdbyipaddress", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_createdbyusername")]
		public string adx_createdbyusername
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_createdbyusername");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_createdbyusername", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_modifiedbyipaddress")]
		public string adx_modifiedbyipaddress
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_modifiedbyipaddress");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_modifiedbyipaddress", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_modifiedbyusername")]
		public string adx_modifiedbyusername
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_modifiedbyusername");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_modifiedbyusername", value);
			}
		}
		
		/// <summary>
		/// For system use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging30")]
		public Microsoft.Xrm.Sdk.Money aging30
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging30");
			}
		}
		
		/// <summary>
		/// The base currency equivalent of the aging 30 field.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging30_base")]
		public Microsoft.Xrm.Sdk.Money aging30_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging30_base");
			}
		}
		
		/// <summary>
		/// For system use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging60")]
		public Microsoft.Xrm.Sdk.Money aging60
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging60");
			}
		}
		
		/// <summary>
		/// The base currency equivalent of the aging 60 field.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging60_base")]
		public Microsoft.Xrm.Sdk.Money aging60_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging60_base");
			}
		}
		
		/// <summary>
		/// For system use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging90")]
		public Microsoft.Xrm.Sdk.Money aging90
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging90");
			}
		}
		
		/// <summary>
		/// The base currency equivalent of the aging 90 field.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging90_base")]
		public Microsoft.Xrm.Sdk.Money aging90_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging90_base");
			}
		}
		
		/// <summary>
		/// Select the legal designation or other business type of the account for contracts or reporting purposes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businesstypecode")]
		public virtual Account_businesstypecode? businesstypecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_businesstypecode?)(EntityOptionSetEnum.GetEnum(this, "businesstypecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("businesstypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_accounttype")]
		public virtual ccof_AccountType? ccof_accounttype
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ccof_AccountType?)(EntityOptionSetEnum.GetEnum(this, "ccof_accounttype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_accounttype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_approveduntil")]
		public System.Nullable<System.DateTime> ccof_approveduntil
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_approveduntil");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_approveduntil", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_contractstatus")]
		public virtual ccof_ContractStatus? ccof_contractstatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ccof_ContractStatus?)(EntityOptionSetEnum.GetEnum(this, "ccof_contractstatus")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_contractstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_everreceivedfundingundertheccofprogram")]
		public virtual ccof_EverReceivedfundingundertheCCOFprog? ccof_everreceivedfundingundertheccofprogram
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ccof_EverReceivedfundingundertheCCOFprog?)(EntityOptionSetEnum.GetEnum(this, "ccof_everreceivedfundingundertheccofprogram")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_everreceivedfundingundertheccofprogram", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facilityenddate")]
		public System.Nullable<System.DateTime> ccof_facilityenddate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_facilityenddate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_facilityenddate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facilitylicencenumber")]
		public string ccof_facilitylicencenumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_facilitylicencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_facilitylicencenumber", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facilityreceived_ccof_funding")]
		public string ccof_facilityreceived_ccof_funding
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_facilityreceived_ccof_funding");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_facilityreceived_ccof_funding", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facilitystartdate")]
		public System.Nullable<System.DateTime> ccof_facilitystartdate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_facilitystartdate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_facilitystartdate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_facilitystatus")]
		public virtual ccof_FacilityStatus? ccof_facilitystatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ccof_FacilityStatus?)(EntityOptionSetEnum.GetEnum(this, "ccof_facilitystatus")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_facilitystatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_formcomplete")]
		public System.Nullable<bool> ccof_formcomplete
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_formcomplete");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_formcomplete", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_fundingagreementnumber")]
		public string ccof_fundingagreementnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_fundingagreementnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_fundingagreementnumber", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_instructionnumber")]
		public string ccof_instructionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_instructionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_instructionnumber", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_is_mailing_address_same")]
		public System.Nullable<bool> ccof_is_mailing_address_same
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_is_mailing_address_same");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_is_mailing_address_same", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_licensestartdate")]
		public System.Nullable<System.DateTime> ccof_licensestartdate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_licensestartdate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_licensestartdate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_managerdisabled")]
		public System.Nullable<bool> ccof_managerdisabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ccof_managerdisabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_managerdisabled", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_maximumcapacity")]
		public System.Nullable<int> ccof_maximumcapacity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_maximumcapacity");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_maximumcapacity", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_numberoffacilities")]
		public System.Nullable<int> ccof_numberoffacilities
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_numberoffacilities");
			}
		}
		
		/// <summary>
		/// Last Updated time of rollup field Number of Facilities.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_numberoffacilities_date")]
		public System.Nullable<System.DateTime> ccof_numberoffacilities_date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_numberoffacilities_date");
			}
		}
		
		/// <summary>
		/// State of rollup field Number of Facilities.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_numberoffacilities_state")]
		public System.Nullable<int> ccof_numberoffacilities_state
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_numberoffacilities_state");
			}
		}
		
		/// <summary>
		/// Organization ID
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_organizationid")]
		public string ccof_organizationid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_organizationid");
			}
		}
		
		/// <summary>
		/// Parent Organization Name
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_organizationname")]
		public string ccof_organizationname
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_organizationname");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_position")]
		public string ccof_position
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_position");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_position", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_primarybusinessbceid")]
		public string ccof_primarybusinessbceid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_primarybusinessbceid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_providername")]
		public string ccof_providername
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_providername");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_providername", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_typeoforganization")]
		public virtual ccof_TypeofOrganization? ccof_typeoforganization
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ccof_TypeofOrganization?)(EntityOptionSetEnum.GetEnum(this, "ccof_typeoforganization")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_typeoforganization", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_unreadactionmessages")]
		public System.Nullable<int> ccof_unreadactionmessages
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_unreadactionmessages");
			}
		}
		
		/// <summary>
		/// Last Updated time of rollup field Unread Action Messages.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_unreadactionmessages_date")]
		public System.Nullable<System.DateTime> ccof_unreadactionmessages_date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ccof_unreadactionmessages_date");
			}
		}
		
		/// <summary>
		/// State of rollup field Unread Action Messages.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_unreadactionmessages_state")]
		public System.Nullable<int> ccof_unreadactionmessages_state
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ccof_unreadactionmessages_state");
			}
		}
		
		/// <summary>
		/// Shows who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Shows the external party who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyexternalparty")]
		public Microsoft.Xrm.Sdk.EntityReference createdbyexternalparty
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdbyexternalparty");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> createdon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Shows who created the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Type the credit limit of the account. This is a useful reference when you address invoice and accounting issues with the customer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("creditlimit")]
		public Microsoft.Xrm.Sdk.Money creditlimit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("creditlimit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("creditlimit", value);
			}
		}
		
		/// <summary>
		/// Shows the credit limit converted to the system's default base currency for reporting purposes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("creditlimit_base")]
		public Microsoft.Xrm.Sdk.Money creditlimit_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("creditlimit_base");
			}
		}
		
		/// <summary>
		/// Select whether the credit for the account is on hold. This is a useful reference while addressing the invoice and accounting issues with the customer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("creditonhold")]
		public System.Nullable<bool> creditonhold
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("creditonhold");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("creditonhold", value);
			}
		}
		
		/// <summary>
		/// Select the size category or range of the account for segmentation and reporting purposes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customersizecode")]
		public virtual Account_customersizecode? customersizecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_customersizecode?)(EntityOptionSetEnum.GetEnum(this, "customersizecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("customersizecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Select the category that best describes the relationship between the account and your organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customertypecode")]
		public virtual Account_customertypecode? customertypecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_customertypecode?)(EntityOptionSetEnum.GetEnum(this, "customertypecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("customertypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Choose the default price list associated with the account to make sure the correct product prices for this customer are applied in sales opportunities, quotes, and orders.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultpricelevelid")]
		public Microsoft.Xrm.Sdk.EntityReference defaultpricelevelid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("defaultpricelevelid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("defaultpricelevelid", value);
			}
		}
		
		/// <summary>
		/// Type additional information to describe the account, such as an excerpt from the company's website.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string description
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		/// <summary>
		/// Select whether the account allows bulk email sent through campaigns. If Do Not Allow is selected, the account can be added to marketing lists, but is excluded from email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotbulkemail")]
		public System.Nullable<bool> donotbulkemail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotbulkemail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotbulkemail", value);
			}
		}
		
		/// <summary>
		/// Select whether the account allows bulk postal mail sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the account can be added to marketing lists, but will be excluded from the postal mail.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotbulkpostalmail")]
		public System.Nullable<bool> donotbulkpostalmail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotbulkpostalmail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotbulkpostalmail", value);
			}
		}
		
		/// <summary>
		/// Select whether the account allows direct email sent from Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotemail")]
		public System.Nullable<bool> donotemail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotemail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotemail", value);
			}
		}
		
		/// <summary>
		/// Select whether the account allows faxes. If Do Not Allow is selected, the account will be excluded from fax activities distributed in marketing campaigns.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotfax")]
		public System.Nullable<bool> donotfax
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotfax");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotfax", value);
			}
		}
		
		/// <summary>
		/// Select whether the account allows phone calls. If Do Not Allow is selected, the account will be excluded from phone call activities distributed in marketing campaigns.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotphone")]
		public System.Nullable<bool> donotphone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotphone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotphone", value);
			}
		}
		
		/// <summary>
		/// Select whether the account allows direct mail. If Do Not Allow is selected, the account will be excluded from letter activities distributed in marketing campaigns.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotpostalmail")]
		public System.Nullable<bool> donotpostalmail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotpostalmail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotpostalmail", value);
			}
		}
		
		/// <summary>
		/// Select whether the account accepts marketing materials, such as brochures or catalogs.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotsendmm")]
		public System.Nullable<bool> donotsendmm
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotsendmm");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotsendmm", value);
			}
		}
		
		/// <summary>
		/// Type the primary email address for the account.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress1")]
		public string emailaddress1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("emailaddress1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("emailaddress1", value);
			}
		}
		
		/// <summary>
		/// Type the secondary email address for the account.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress2")]
		public string emailaddress2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("emailaddress2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("emailaddress2", value);
			}
		}
		
		/// <summary>
		/// Type an alternate email address for the account.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress3")]
		public string emailaddress3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("emailaddress3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("emailaddress3", value);
			}
		}
		
		/// <summary>
		/// Shows the default image for the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
		public byte[] entityimage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<byte[]>("entityimage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("entityimage", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
		public System.Nullable<long> entityimage_timestamp
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("entityimage_timestamp");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
		public string entityimage_url
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("entityimage_url");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
		public System.Nullable<System.Guid> entityimageid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("entityimageid");
			}
		}
		
		/// <summary>
		/// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> exchangerate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Type the fax number for the account.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fax")]
		public string fax
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("fax");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("fax", value);
			}
		}
		
		/// <summary>
		/// Information about whether to allow following email activity like opens, attachment views and link clicks for emails sent to the account.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("followemail")]
		public System.Nullable<bool> followemail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("followemail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("followemail", value);
			}
		}
		
		/// <summary>
		/// Type the URL for the account's FTP site to enable users to access data and share documents.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ftpsiteurl")]
		public string ftpsiteurl
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ftpsiteurl");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ftpsiteurl", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the data import or data migration that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> importsequencenumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Select the account's primary industry for use in marketing segmentation and demographic analysis.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("industrycode")]
		public virtual Account_industrycode? industrycode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_industrycode?)(EntityOptionSetEnum.GetEnum(this, "industrycode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("industrycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Contains the date and time stamp of the last on hold time.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastonholdtime")]
		public System.Nullable<System.DateTime> lastonholdtime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastonholdtime");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("lastonholdtime", value);
			}
		}
		
		/// <summary>
		/// Shows the date when the account was last included in a marketing campaign or quick campaign.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastusedincampaign")]
		public System.Nullable<System.DateTime> lastusedincampaign
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastusedincampaign");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("lastusedincampaign", value);
			}
		}
		
		/// <summary>
		/// Type the market capitalization of the account to identify the company's equity, used as an indicator in financial performance analysis.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("marketcap")]
		public Microsoft.Xrm.Sdk.Money marketcap
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("marketcap");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("marketcap", value);
			}
		}
		
		/// <summary>
		/// Shows the market capitalization converted to the system's default base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("marketcap_base")]
		public Microsoft.Xrm.Sdk.Money marketcap_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("marketcap_base");
			}
		}
		
		/// <summary>
		/// Whether is only for marketing
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("marketingonly")]
		public System.Nullable<bool> marketingonly
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("marketingonly");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("marketingonly", value);
			}
		}
		
		/// <summary>
		/// Shows the master account that the account was merged with.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("masterid")]
		public Microsoft.Xrm.Sdk.EntityReference masterid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("masterid");
			}
		}
		
		/// <summary>
		/// Shows whether the account has been merged with another account.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("merged")]
		public System.Nullable<bool> merged
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("merged");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Shows the external party who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyexternalparty")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedbyexternalparty
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedbyexternalparty");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> modifiedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Shows who created the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for Account associated with Account.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msa_managingpartnerid")]
		public Microsoft.Xrm.Sdk.EntityReference msa_managingpartnerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msa_managingpartnerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msa_managingpartnerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_accountkpiid")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_accountkpiid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_accountkpiid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_accountkpiid", value);
			}
		}
		
		/// <summary>
		/// Reference to an other account to be used for billing (only to be used if billing account differs)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_billingaccount")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_billingaccount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_billingaccount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_billingaccount", value);
			}
		}
		
		/// <summary>
		/// Describes whether account is opted out or not
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_gdproptout")]
		public System.Nullable<bool> msdyn_gdproptout
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_gdproptout");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_gdproptout", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_preferredresource")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_preferredresource
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_preferredresource");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_preferredresource", value);
			}
		}
		
		/// <summary>
		/// Indicates the primary time zone that the client works on.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_primarytimezone")]
		public System.Nullable<int> msdyn_primarytimezone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_primarytimezone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_primarytimezone", value);
			}
		}
		
		/// <summary>
		/// Sales Acceleration Insights ID
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_salesaccelerationinsightid")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_salesaccelerationinsightid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_salesaccelerationinsightid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_salesaccelerationinsightid", value);
			}
		}
		
		/// <summary>
		/// Default Sales Tax Code
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_salestaxcode")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_salestaxcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_salestaxcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_salestaxcode", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for Segment associated with account.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_segmentid")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_segmentid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_segmentid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_segmentid", value);
			}
		}
		
		/// <summary>
		/// The Service Territory this account belongs to. This is used to optimize scheduling and routing
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_serviceterritory")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_serviceterritory
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_serviceterritory");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_serviceterritory", value);
			}
		}
		
		/// <summary>
		/// Select whether the account is tax exempt.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_taxexempt")]
		public System.Nullable<bool> msdyn_taxexempt
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_taxexempt");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_taxexempt", value);
			}
		}
		
		/// <summary>
		/// Shows the government tax exempt number.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_taxexemptnumber")]
		public string msdyn_taxexemptnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_taxexemptnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_taxexemptnumber", value);
			}
		}
		
		/// <summary>
		/// Enter the travel charge to include on work orders. This value will be multiplied by the travel charge type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_travelcharge")]
		public Microsoft.Xrm.Sdk.Money msdyn_travelcharge
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("msdyn_travelcharge");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_travelcharge", value);
			}
		}
		
		/// <summary>
		/// Value of the Travel Charge in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_travelcharge_base")]
		public Microsoft.Xrm.Sdk.Money msdyn_travelcharge_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("msdyn_travelcharge_base");
			}
		}
		
		/// <summary>
		/// Specify how travel is charged for this account.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_travelchargetype")]
		public virtual msdyn_TravelChargeType? msdyn_travelchargetype
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((msdyn_TravelChargeType?)(EntityOptionSetEnum.GetEnum(this, "msdyn_travelchargetype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_travelchargetype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_workhourtemplate")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_workhourtemplate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_workhourtemplate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_workhourtemplate", value);
			}
		}
		
		/// <summary>
		/// Shows the default instructions to show on new work orders.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_workorderinstructions")]
		public string msdyn_workorderinstructions
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_workorderinstructions");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_workorderinstructions", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msft_datastate")]
		public virtual msft_DataState? msft_datastate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((msft_DataState?)(EntityOptionSetEnum.GetEnum(this, "msft_datastate")));
			}
		}
		
		/// <summary>
		/// Type the company or business name.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Type the number of employees that work at the account for use in marketing segmentation and demographic analysis.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("numberofemployees")]
		public System.Nullable<int> numberofemployees
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("numberofemployees");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("numberofemployees", value);
			}
		}
		
		/// <summary>
		/// ACCB provider ID
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_accb_providerid")]
		public string ofm_accb_providerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_accb_providerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_accb_providerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_business_number")]
		public string ofm_business_number
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_business_number");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_business_number", value);
			}
		}
		
		/// <summary>
		/// Business Type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_business_type")]
		public virtual ecc_business_type? ofm_business_type
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecc_business_type?)(EntityOptionSetEnum.GetEnum(this, "ofm_business_type")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_business_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_doing_business_as")]
		public string ofm_doing_business_as
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_doing_business_as");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_doing_business_as", value);
			}
		}
		
		/// <summary>
		/// Good Standing Indicator and Message
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_good_standing_indicator")]
		public string ofm_good_standing_indicator
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_good_standing_indicator");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_good_standing_indicator", value);
			}
		}
		
		/// <summary>
		/// Good Standing Status
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_good_standing_status")]
		public virtual ecc_ynempty? ofm_good_standing_status
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_good_standing_status")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_good_standing_status", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Validated On
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_good_standing_validated_on")]
		public System.Nullable<System.DateTime> ofm_good_standing_validated_on
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_good_standing_validated_on");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_good_standing_validated_on", value);
			}
		}
		
		/// <summary>
		/// Indigenous Led
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_indigenous_led")]
		public System.Nullable<bool> ofm_indigenous_led
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ofm_indigenous_led");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_indigenous_led", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_is_mailing_address_different")]
		public System.Nullable<bool> ofm_is_mailing_address_different
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ofm_is_mailing_address_different");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_is_mailing_address_different", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_organization_legal_name")]
		public string ofm_organization_legal_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_organization_legal_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_organization_legal_name", value);
			}
		}
		
		/// <summary>
		/// Ownership
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ownership")]
		public virtual ecc_Ownership? ofm_ownership
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecc_Ownership?)(EntityOptionSetEnum.GetEnum(this, "ofm_ownership")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_ownership", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Unique identifier for Contact associated with Organization-Facility.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_primarycontact")]
		public Microsoft.Xrm.Sdk.EntityReference ofm_primarycontact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_primarycontact");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_primarycontact", value);
			}
		}
		
		/// <summary>
		/// Provider Type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_provider_type")]
		public virtual ecc_provider_type? ofm_provider_type
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecc_provider_type?)(EntityOptionSetEnum.GetEnum(this, "ofm_provider_type")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_provider_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// TDAD Funding Agreement Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_tdad_funding_agreement_number")]
		public string ofm_tdad_funding_agreement_number
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_tdad_funding_agreement_number");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_tdad_funding_agreement_number", value);
			}
		}
		
		/// <summary>
		/// Shows how long, in minutes, that the record was on hold.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onholdtime")]
		public System.Nullable<int> onholdtime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("onholdtime");
			}
		}
		
		/// <summary>
		/// Number of open opportunities against an account and its child accounts.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opendeals")]
		public System.Nullable<int> opendeals
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("opendeals");
			}
		}
		
		/// <summary>
		/// Last Updated time of rollup field Open Deals.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opendeals_date")]
		public System.Nullable<System.DateTime> opendeals_date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("opendeals_date");
			}
		}
		
		/// <summary>
		/// State of rollup field Open Deals.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opendeals_state")]
		public System.Nullable<int> opendeals_state
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("opendeals_state");
			}
		}
		
		/// <summary>
		/// Sum of open revenue against an account and its child accounts.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("openrevenue")]
		public Microsoft.Xrm.Sdk.Money openrevenue
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("openrevenue");
			}
		}
		
		/// <summary>
		/// Value of the Open Revenue in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("openrevenue_base")]
		public Microsoft.Xrm.Sdk.Money openrevenue_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("openrevenue_base");
			}
		}
		
		/// <summary>
		/// Last Updated time of rollup field Open Revenue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("openrevenue_date")]
		public System.Nullable<System.DateTime> openrevenue_date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("openrevenue_date");
			}
		}
		
		/// <summary>
		/// State of rollup field Open Revenue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("openrevenue_state")]
		public System.Nullable<int> openrevenue_state
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("openrevenue_state");
			}
		}
		
		/// <summary>
		/// Shows the lead that the account was created from if the account was created by converting a lead in Microsoft Dynamics 365. This is used to relate the account to data on the originating lead for use in reporting and analytics.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingleadid")]
		public Microsoft.Xrm.Sdk.EntityReference originatingleadid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("originatingleadid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("originatingleadid", value);
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> overriddencreatedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference ownerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Select the account's ownership structure, such as public or private.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownershipcode")]
		public virtual Account_ownershipcode? ownershipcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_ownershipcode?)(EntityOptionSetEnum.GetEnum(this, "ownershipcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownershipcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Shows the business unit that the record owner belongs to.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier of the team who owns the account.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference owningteam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who owns the account.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference owninguser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Choose the parent account associated with this account to show parent and child businesses in reporting and analytics.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentaccountid")]
		public Microsoft.Xrm.Sdk.EntityReference parentaccountid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentaccountid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("parentaccountid", value);
			}
		}
		
		/// <summary>
		/// For system use only. Legacy Microsoft Dynamics CRM 3.0 workflow data.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("participatesinworkflow")]
		public System.Nullable<bool> participatesinworkflow
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("participatesinworkflow");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("participatesinworkflow", value);
			}
		}
		
		/// <summary>
		/// Select the payment terms to indicate when the customer needs to pay the total amount.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("paymenttermscode")]
		public virtual Account_paymenttermscode? paymenttermscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_paymenttermscode?)(EntityOptionSetEnum.GetEnum(this, "paymenttermscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("paymenttermscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Select the preferred day of the week for service appointments.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredappointmentdaycode")]
		public virtual Account_preferredappointmentdaycode? preferredappointmentdaycode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_preferredappointmentdaycode?)(EntityOptionSetEnum.GetEnum(this, "preferredappointmentdaycode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("preferredappointmentdaycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Select the preferred time of day for service appointments.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredappointmenttimecode")]
		public virtual Account_preferredappointmenttimecode? preferredappointmenttimecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_preferredappointmenttimecode?)(EntityOptionSetEnum.GetEnum(this, "preferredappointmenttimecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("preferredappointmenttimecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Select the preferred method of contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredcontactmethodcode")]
		public virtual Account_preferredcontactmethodcode? preferredcontactmethodcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_preferredcontactmethodcode?)(EntityOptionSetEnum.GetEnum(this, "preferredcontactmethodcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("preferredcontactmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Choose the account's preferred service facility or equipment to make sure services are scheduled correctly for the customer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredequipmentid")]
		public Microsoft.Xrm.Sdk.EntityReference preferredequipmentid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("preferredequipmentid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("preferredequipmentid", value);
			}
		}
		
		/// <summary>
		/// Choose the account's preferred service for reference when you schedule service activities.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredserviceid")]
		public Microsoft.Xrm.Sdk.EntityReference preferredserviceid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("preferredserviceid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("preferredserviceid", value);
			}
		}
		
		/// <summary>
		/// Choose the preferred service representative for reference when you schedule service activities for the account.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredsystemuserid")]
		public Microsoft.Xrm.Sdk.EntityReference preferredsystemuserid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("preferredsystemuserid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("preferredsystemuserid", value);
			}
		}
		
		/// <summary>
		/// Choose the primary contact for the account to provide quick access to contact details.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarycontactid")]
		public Microsoft.Xrm.Sdk.EntityReference primarycontactid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("primarycontactid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("primarycontactid", value);
			}
		}
		
		/// <summary>
		/// Primary Satori ID for Account
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarysatoriid")]
		public string primarysatoriid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("primarysatoriid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("primarysatoriid", value);
			}
		}
		
		/// <summary>
		/// Primary Twitter ID for Account
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarytwitterid")]
		public string primarytwitterid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("primarytwitterid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("primarytwitterid", value);
			}
		}
		
		/// <summary>
		/// Shows the ID of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> processid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("processid", value);
			}
		}
		
		/// <summary>
		/// Type the annual revenue for the account, used as an indicator in financial performance analysis.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("revenue")]
		public Microsoft.Xrm.Sdk.Money revenue
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("revenue");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("revenue", value);
			}
		}
		
		/// <summary>
		/// Shows the annual revenue converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("revenue_base")]
		public Microsoft.Xrm.Sdk.Money revenue_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("revenue_base");
			}
		}
		
		/// <summary>
		/// Type the number of shares available to the public for the account. This number is used as an indicator in financial performance analysis.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sharesoutstanding")]
		public System.Nullable<int> sharesoutstanding
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("sharesoutstanding");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("sharesoutstanding", value);
			}
		}
		
		/// <summary>
		/// Select a shipping method for deliveries sent to the account's address to designate the preferred carrier or other delivery option.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("shippingmethodcode")]
		public virtual Account_shippingmethodcode? shippingmethodcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_shippingmethodcode?)(EntityOptionSetEnum.GetEnum(this, "shippingmethodcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Type the Standard Industrial Classification (SIC) code that indicates the account's primary industry of business, for use in marketing segmentation and demographic analysis.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sic")]
		public string sic
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("sic");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("sic", value);
			}
		}
		
		/// <summary>
		/// Choose the service level agreement (SLA) that you want to apply to the Account record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
		public Microsoft.Xrm.Sdk.EntityReference slaid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slaid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("slaid", value);
			}
		}
		
		/// <summary>
		/// Last SLA that was applied to this case. This field is for internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
		public Microsoft.Xrm.Sdk.EntityReference slainvokedid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slainvokedid");
			}
		}
		
		/// <summary>
		/// Shows the ID of the stage.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> stageid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("stageid", value);
			}
		}
		
		/// <summary>
		/// Shows whether the account is active or inactive. Inactive accounts are read-only and can't be edited unless they are reactivated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual account_statecode? statecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((account_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Select the account's status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual Account_StatusCode? statuscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Type the stock exchange at which the account is listed to track their stock and financial performance of the company.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stockexchange")]
		public string stockexchange
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("stockexchange");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("stockexchange", value);
			}
		}
		
		/// <summary>
		/// Number of users or conversations followed the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamsfollowed")]
		public System.Nullable<int> teamsfollowed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("teamsfollowed");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("teamsfollowed", value);
			}
		}
		
		/// <summary>
		/// Type the main phone number for this account.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("telephone1")]
		public string telephone1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("telephone1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("telephone1", value);
			}
		}
		
		/// <summary>
		/// Type a second phone number for this account.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("telephone2")]
		public string telephone2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("telephone2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("telephone2", value);
			}
		}
		
		/// <summary>
		/// Type a third phone number for this account.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("telephone3")]
		public string telephone3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("telephone3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("telephone3", value);
			}
		}
		
		/// <summary>
		/// Select a region or territory for the account for use in segmentation and analysis.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("territorycode")]
		public virtual Account_territorycode? territorycode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_territorycode?)(EntityOptionSetEnum.GetEnum(this, "territorycode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("territorycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Choose the sales region or territory for the account to make sure the account is assigned to the correct representative and for use in segmentation and analysis.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("territoryid")]
		public Microsoft.Xrm.Sdk.EntityReference territoryid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("territoryid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("territoryid", value);
			}
		}
		
		/// <summary>
		/// Type the stock exchange symbol for the account to track financial performance of the company. You can click the code entered in this field to access the latest trading information from MSN Money.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("tickersymbol")]
		public string tickersymbol
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("tickersymbol");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("tickersymbol", value);
			}
		}
		
		/// <summary>
		/// Total time spent for emails (read and write) and meetings by me in relation to account record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timespentbymeonemailandmeetings")]
		public string timespentbymeonemailandmeetings
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("timespentbymeonemailandmeetings");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> timezoneruleversionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Choose the local currency for the record to make sure budgets are reported in the correct currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string traversedpath
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("traversedpath", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> utcconversiontimezonecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version number of the account.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> versionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// Type the account's website URL to get quick details about the company profile.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("websiteurl")]
		public string websiteurl
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("websiteurl");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("websiteurl", value);
			}
		}
		
		/// <summary>
		/// Type the phonetic spelling of the company name, if specified in Japanese, to make sure the name is pronounced correctly in phone calls and other communications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yominame")]
		public string yominame
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("yominame");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("yominame", value);
			}
		}
		
		/// <summary>
		/// 1:N Account_Email_EmailSender
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Account_Email_EmailSender")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Email> Account_Email_EmailSender
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.Email>("Account_Email_EmailSender", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.Email>("Account_Email_EmailSender", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Account_Email_SendersAccount
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Account_Email_SendersAccount")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Email> Account_Email_SendersAccount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.Email>("Account_Email_SendersAccount", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.Email>("Account_Email_SendersAccount", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Account_Emails
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Account_Emails")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Email> Account_Emails
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.Email>("Account_Emails", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.Email>("Account_Emails", null, value);
			}
		}
		
		/// <summary>
		/// 1:N account_master_account
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_master_account", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Account> Referencedaccount_master_account
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.Account>("account_master_account", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.Account>("account_master_account", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N account_parent_account
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_parent_account", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Account> Referencedaccount_parent_account
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.Account>("account_parent_account", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.Account>("account_parent_account", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N contact_customer_accounts
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_customer_accounts")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Contact> contact_customer_accounts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.Contact>("contact_customer_accounts", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.Contact>("contact_customer_accounts", null, value);
			}
		}
		
		/// <summary>
		/// 1:N msa_account_managingpartner
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msa_account_managingpartner", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Account> Referencedmsa_account_managingpartner
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.Account>("msa_account_managingpartner", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.Account>("msa_account_managingpartner", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N msa_contact_managingpartner
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msa_contact_managingpartner")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Contact> msa_contact_managingpartner
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.Contact>("msa_contact_managingpartner", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.Contact>("msa_contact_managingpartner", null, value);
			}
		}
		
		/// <summary>
		/// 1:N msdyn_account_account_BillingAccount
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_account_account_BillingAccount", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Account> Referencedmsdyn_account_account_BillingAccount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.Account>("msdyn_account_account_BillingAccount", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.Account>("msdyn_account_account_BillingAccount", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N ofm_business_bceid_facility
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_business_bceid_facility")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_bceid_facility> ofm_business_bceid_facility
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_bceid_facility>("ofm_business_bceid_facility", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_bceid_facility>("ofm_business_bceid_facility", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ofm_document_account
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_document_account")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_document> ofm_document_account
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_document>("ofm_document_account", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_document>("ofm_document_account", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ofm_facility_application
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_facility_application")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_application> ofm_facility_application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_application>("ofm_facility_application", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_application>("ofm_facility_application", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ofm_facility_licence
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_facility_licence")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_licence> ofm_facility_licence
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_licence>("ofm_facility_licence", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_licence>("ofm_facility_licence", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ofm_facility_request_facility
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_facility_request_facility")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_facility_request> ofm_facility_request_facility
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_facility_request>("ofm_facility_request_facility", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_facility_request>("ofm_facility_request_facility", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ofm_funding_facility_account
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_funding_facility_account")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_funding> ofm_funding_facility_account
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_funding>("ofm_funding_facility_account", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_funding>("ofm_funding_facility_account", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ofm_organization_application
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_organization_application")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_application> ofm_organization_application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_application>("ofm_organization_application", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_application>("ofm_organization_application", null, value);
			}
		}
		
		/// <summary>
		/// N:1 account_master_account
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("masterid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_master_account", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public ECC.Core.DataContext.Account Referencingaccount_master_account
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Account>("account_master_account", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
		}
		
		/// <summary>
		/// N:1 account_parent_account
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentaccountid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_parent_account", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public ECC.Core.DataContext.Account Referencingaccount_parent_account
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Account>("account_parent_account", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.Account>("account_parent_account", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// N:1 account_primary_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarycontactid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_primary_contact")]
		public ECC.Core.DataContext.Contact account_primary_contact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("account_primary_contact", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.Contact>("account_primary_contact", null, value);
			}
		}
		
		/// <summary>
		/// N:1 msa_account_managingpartner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msa_managingpartnerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msa_account_managingpartner", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public ECC.Core.DataContext.Account Referencingmsa_account_managingpartner
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Account>("msa_account_managingpartner", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.Account>("msa_account_managingpartner", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// N:1 msdyn_account_account_BillingAccount
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_billingaccount")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_account_account_BillingAccount", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public ECC.Core.DataContext.Account Referencingmsdyn_account_account_BillingAccount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Account>("msdyn_account_account_BillingAccount", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.Account>("msdyn_account_account_BillingAccount", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// N:1 ofm_contact_account
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_primarycontact")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_contact_account")]
		public ECC.Core.DataContext.Contact ofm_contact_account
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_contact_account", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_contact_account", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_accounts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_accounts")]
		public ECC.Core.DataContext.Team team_accounts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_accounts", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Account(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["accountid"] = base.Id;
                        break;
                    case "accountid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
	
	/// <summary>
	/// A provider contact record linked to a BCeID. This record is used to provide MyCCS portal access. This table is used by both OFM and CCOF applications 
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("contact")]
	public partial class Contact : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the contact entity
		/// </summary>
		public static partial class Fields
		{
			public const string account_primary_contact = "account_primary_contact";
			public const string accountid = "accountid";
			public const string accountrolecode = "accountrolecode";
			public const string address1_addressid = "address1_addressid";
			public const string address1_addresstypecode = "address1_addresstypecode";
			public const string address1_city = "address1_city";
			public const string address1_composite = "address1_composite";
			public const string address1_country = "address1_country";
			public const string address1_county = "address1_county";
			public const string address1_fax = "address1_fax";
			public const string address1_freighttermscode = "address1_freighttermscode";
			public const string address1_latitude = "address1_latitude";
			public const string address1_line1 = "address1_line1";
			public const string address1_line2 = "address1_line2";
			public const string address1_line3 = "address1_line3";
			public const string address1_longitude = "address1_longitude";
			public const string address1_name = "address1_name";
			public const string address1_postalcode = "address1_postalcode";
			public const string address1_postofficebox = "address1_postofficebox";
			public const string address1_primarycontactname = "address1_primarycontactname";
			public const string address1_shippingmethodcode = "address1_shippingmethodcode";
			public const string address1_stateorprovince = "address1_stateorprovince";
			public const string address1_telephone1 = "address1_telephone1";
			public const string address1_telephone2 = "address1_telephone2";
			public const string address1_telephone3 = "address1_telephone3";
			public const string address1_upszone = "address1_upszone";
			public const string address1_utcoffset = "address1_utcoffset";
			public const string address2_addressid = "address2_addressid";
			public const string address2_addresstypecode = "address2_addresstypecode";
			public const string address2_city = "address2_city";
			public const string address2_composite = "address2_composite";
			public const string address2_country = "address2_country";
			public const string address2_county = "address2_county";
			public const string address2_fax = "address2_fax";
			public const string address2_freighttermscode = "address2_freighttermscode";
			public const string address2_latitude = "address2_latitude";
			public const string address2_line1 = "address2_line1";
			public const string address2_line2 = "address2_line2";
			public const string address2_line3 = "address2_line3";
			public const string address2_longitude = "address2_longitude";
			public const string address2_name = "address2_name";
			public const string address2_postalcode = "address2_postalcode";
			public const string address2_postofficebox = "address2_postofficebox";
			public const string address2_primarycontactname = "address2_primarycontactname";
			public const string address2_shippingmethodcode = "address2_shippingmethodcode";
			public const string address2_stateorprovince = "address2_stateorprovince";
			public const string address2_telephone1 = "address2_telephone1";
			public const string address2_telephone2 = "address2_telephone2";
			public const string address2_telephone3 = "address2_telephone3";
			public const string address2_upszone = "address2_upszone";
			public const string address2_utcoffset = "address2_utcoffset";
			public const string address3_addressid = "address3_addressid";
			public const string address3_addresstypecode = "address3_addresstypecode";
			public const string address3_city = "address3_city";
			public const string address3_composite = "address3_composite";
			public const string address3_country = "address3_country";
			public const string address3_county = "address3_county";
			public const string address3_fax = "address3_fax";
			public const string address3_freighttermscode = "address3_freighttermscode";
			public const string address3_latitude = "address3_latitude";
			public const string address3_line1 = "address3_line1";
			public const string address3_line2 = "address3_line2";
			public const string address3_line3 = "address3_line3";
			public const string address3_longitude = "address3_longitude";
			public const string address3_name = "address3_name";
			public const string address3_postalcode = "address3_postalcode";
			public const string address3_postofficebox = "address3_postofficebox";
			public const string address3_primarycontactname = "address3_primarycontactname";
			public const string address3_shippingmethodcode = "address3_shippingmethodcode";
			public const string address3_stateorprovince = "address3_stateorprovince";
			public const string address3_telephone1 = "address3_telephone1";
			public const string address3_telephone2 = "address3_telephone2";
			public const string address3_telephone3 = "address3_telephone3";
			public const string address3_upszone = "address3_upszone";
			public const string address3_utcoffset = "address3_utcoffset";
			public const string adx_confirmremovepassword = "adx_confirmremovepassword";
			public const string adx_createdbyipaddress = "adx_createdbyipaddress";
			public const string adx_createdbyusername = "adx_createdbyusername";
			public const string adx_identity_accessfailedcount = "adx_identity_accessfailedcount";
			public const string adx_identity_emailaddress1confirmed = "adx_identity_emailaddress1confirmed";
			public const string adx_identity_lastsuccessfullogin = "adx_identity_lastsuccessfullogin";
			public const string adx_identity_locallogindisabled = "adx_identity_locallogindisabled";
			public const string adx_identity_lockoutenabled = "adx_identity_lockoutenabled";
			public const string adx_identity_lockoutenddate = "adx_identity_lockoutenddate";
			public const string adx_identity_logonenabled = "adx_identity_logonenabled";
			public const string adx_identity_mobilephoneconfirmed = "adx_identity_mobilephoneconfirmed";
			public const string adx_identity_newpassword = "adx_identity_newpassword";
			public const string adx_identity_passwordhash = "adx_identity_passwordhash";
			public const string adx_identity_securitystamp = "adx_identity_securitystamp";
			public const string adx_identity_twofactorenabled = "adx_identity_twofactorenabled";
			public const string adx_identity_username = "adx_identity_username";
			public const string adx_modifiedbyipaddress = "adx_modifiedbyipaddress";
			public const string adx_modifiedbyusername = "adx_modifiedbyusername";
			public const string adx_organizationname = "adx_organizationname";
			public const string adx_preferredlcid = "adx_preferredlcid";
			public const string adx_profilealert = "adx_profilealert";
			public const string adx_profilealertdate = "adx_profilealertdate";
			public const string adx_profilealertinstructions = "adx_profilealertinstructions";
			public const string adx_profileisanonymous = "adx_profileisanonymous";
			public const string adx_profilelastactivity = "adx_profilelastactivity";
			public const string adx_profilemodifiedon = "adx_profilemodifiedon";
			public const string adx_publicprofilecopy = "adx_publicprofilecopy";
			public const string adx_timezone = "adx_timezone";
			public const string aging30 = "aging30";
			public const string aging30_base = "aging30_base";
			public const string aging60 = "aging60";
			public const string aging60_base = "aging60_base";
			public const string aging90 = "aging90";
			public const string aging90_base = "aging90_base";
			public const string anniversary = "anniversary";
			public const string annualincome = "annualincome";
			public const string annualincome_base = "annualincome_base";
			public const string assistantname = "assistantname";
			public const string assistantphone = "assistantphone";
			public const string birthdate = "birthdate";
			public const string business2 = "business2";
			public const string businesscard = "businesscard";
			public const string businesscardattributes = "businesscardattributes";
			public const string callback = "callback";
			public const string ccof_role = "ccof_role";
			public const string ccof_userid = "ccof_userid";
			public const string ccof_username = "ccof_username";
			public const string childrensnames = "childrensnames";
			public const string company = "company";
			public const string contact_customer_accounts = "contact_customer_accounts";
			public const string Referencingcontact_customer_contacts = "contact_customer_contacts";
			public const string Contact_Email_EmailSender = "Contact_Email_EmailSender";
			public const string Contact_Emails = "Contact_Emails";
			public const string Referencingcontact_master_contact = "contact_master_contact";
			public const string Referencingcontact_parent_contact = "contact_parent_contact";
			public const string contactid = "contactid";
			public const string Id = "contactid";
			public const string createdby = "createdby";
			public const string createdbyexternalparty = "createdbyexternalparty";
			public const string createdbyexternalpartyName = "createdbyexternalpartyname";
			public const string createdbyName = "createdbyname";
			public const string createdon = "createdon";
			public const string createdonbehalfby = "createdonbehalfby";
			public const string createdonbehalfbyName = "createdonbehalfbyname";
			public const string creditlimit = "creditlimit";
			public const string creditlimit_base = "creditlimit_base";
			public const string creditonhold = "creditonhold";
			public const string customersizecode = "customersizecode";
			public const string customertypecode = "customertypecode";
			public const string defaultpricelevelid = "defaultpricelevelid";
			public const string defaultpricelevelidName = "defaultpricelevelidname";
			public const string department = "department";
			public const string description = "description";
			public const string donotbulkemail = "donotbulkemail";
			public const string donotbulkpostalmail = "donotbulkpostalmail";
			public const string donotemail = "donotemail";
			public const string donotfax = "donotfax";
			public const string donotphone = "donotphone";
			public const string donotpostalmail = "donotpostalmail";
			public const string donotsendmm = "donotsendmm";
			public const string educationcode = "educationcode";
			public const string emailaddress1 = "emailaddress1";
			public const string emailaddress2 = "emailaddress2";
			public const string emailaddress3 = "emailaddress3";
			public const string employeeid = "employeeid";
			public const string entityimage = "entityimage";
			public const string entityimage_timestamp = "entityimage_timestamp";
			public const string entityimage_url = "entityimage_url";
			public const string entityimageid = "entityimageid";
			public const string entityimageidName = "entityimageidname";
			public const string exchangerate = "exchangerate";
			public const string externaluseridentifier = "externaluseridentifier";
			public const string familystatuscode = "familystatuscode";
			public const string fax = "fax";
			public const string firstname = "firstname";
			public const string followemail = "followemail";
			public const string ftpsiteurl = "ftpsiteurl";
			public const string fullname = "fullname";
			public const string gendercode = "gendercode";
			public const string governmentid = "governmentid";
			public const string haschildrencode = "haschildrencode";
			public const string home2 = "home2";
			public const string importsequencenumber = "importsequencenumber";
			public const string isbackofficecustomer = "isbackofficecustomer";
			public const string jobtitle = "jobtitle";
			public const string lastname = "lastname";
			public const string lastonholdtime = "lastonholdtime";
			public const string lastusedincampaign = "lastusedincampaign";
			public const string leadsourcecode = "leadsourcecode";
			public const string managername = "managername";
			public const string managerphone = "managerphone";
			public const string marketingonly = "marketingonly";
			public const string masterid = "masterid";
			public const string masteridName = "masteridname";
			public const string merged = "merged";
			public const string middlename = "middlename";
			public const string mobilephone = "mobilephone";
			public const string modifiedby = "modifiedby";
			public const string modifiedbyexternalparty = "modifiedbyexternalparty";
			public const string modifiedbyexternalpartyName = "modifiedbyexternalpartyname";
			public const string modifiedbyName = "modifiedbyname";
			public const string modifiedon = "modifiedon";
			public const string modifiedonbehalfby = "modifiedonbehalfby";
			public const string modifiedonbehalfbyName = "modifiedonbehalfbyname";
			public const string msa_contact_managingpartner = "msa_contact_managingpartner";
			public const string msa_managingpartnerid = "msa_managingpartnerid";
			public const string msa_managingpartneridName = "msa_managingpartneridname";
			public const string msdyn_contactkpiid = "msdyn_contactkpiid";
			public const string msdyn_contactkpiidName = "msdyn_contactkpiidname";
			public const string msdyn_decisioninfluencetag = "msdyn_decisioninfluencetag";
			public const string msdyn_disablewebtracking = "msdyn_disablewebtracking";
			public const string msdyn_gdproptout = "msdyn_gdproptout";
			public const string msdyn_isassistantinorgchart = "msdyn_isassistantinorgchart";
			public const string msdyn_isminor = "msdyn_isminor";
			public const string msdyn_isminorwithparentalconsent = "msdyn_isminorwithparentalconsent";
			public const string msdyn_orgchangestatus = "msdyn_orgchangestatus";
			public const string msdyn_portaltermsagreementdate = "msdyn_portaltermsagreementdate";
			public const string msdyn_primarytimezone = "msdyn_primarytimezone";
			public const string msdyn_segmentid = "msdyn_segmentid";
			public const string msdyn_segmentidName = "msdyn_segmentidname";
			public const string msft_datastate = "msft_datastate";
			public const string mspp_userpreferredlcid = "mspp_userpreferredlcid";
			public const string nickname = "nickname";
			public const string numberofchildren = "numberofchildren";
			public const string ofm_assistance_request_contact = "ofm_assistance_request_contact";
			public const string ofm_contact_account = "ofm_contact_account";
			public const string ofm_contact_applications = "ofm_contact_applications";
			public const string ofm_facility_business_bceid = "ofm_facility_business_bceid";
			public const string ofm_first_name = "ofm_first_name";
			public const string ofm_last_name = "ofm_last_name";
			public const string ofm_portal_role = "ofm_portal_role";
			public const string ofm_request_contact = "ofm_request_contact";
			public const string ofm_secondary_contact_application = "ofm_secondary_contact_application";
			public const string ofm_social_insurance_number = "ofm_social_insurance_number";
			public const string ofm_social_insurance_number_for_mask = "ofm_social_insurance_number_for_mask";
			public const string ofm_supplier_issue = "ofm_supplier_issue";
			public const string ofm_supplier_number = "ofm_supplier_number";
			public const string ofm_supplier_site_number = "ofm_supplier_site_number";
			public const string onholdtime = "onholdtime";
			public const string originatingleadid = "originatingleadid";
			public const string originatingleadidName = "originatingleadidname";
			public const string overriddencreatedon = "overriddencreatedon";
			public const string ownerid = "ownerid";
			public const string owneridName = "owneridname";
			public const string owningbusinessunit = "owningbusinessunit";
			public const string owningbusinessunitName = "owningbusinessunitname";
			public const string owningteam = "owningteam";
			public const string owningteamName = "owningteamname";
			public const string owninguser = "owninguser";
			public const string owninguserName = "owningusername";
			public const string pager = "pager";
			public const string parent_contactid = "parent_contactid";
			public const string parent_contactidName = "parent_contactidname";
			public const string parentcontactid = "parentcontactid";
			public const string parentcustomerid = "parentcustomerid";
			public const string parentcustomeridName = "parentcustomeridname";
			public const string participatesinworkflow = "participatesinworkflow";
			public const string paymenttermscode = "paymenttermscode";
			public const string preferredappointmentdaycode = "preferredappointmentdaycode";
			public const string preferredappointmenttimecode = "preferredappointmenttimecode";
			public const string preferredcontactmethodcode = "preferredcontactmethodcode";
			public const string preferredequipmentid = "preferredequipmentid";
			public const string preferredequipmentidName = "preferredequipmentidname";
			public const string preferredserviceid = "preferredserviceid";
			public const string preferredserviceidName = "preferredserviceidname";
			public const string preferredsystemuserid = "preferredsystemuserid";
			public const string preferredsystemuseridName = "preferredsystemuseridname";
			public const string processid = "processid";
			public const string Referencedcontact_customer_contacts = "Referencedcontact_customer_contacts";
			public const string Referencedcontact_master_contact = "Referencedcontact_master_contact";
			public const string Referencedcontact_parent_contact = "Referencedcontact_parent_contact";
			public const string salutation = "salutation";
			public const string shippingmethodcode = "shippingmethodcode";
			public const string slaid = "slaid";
			public const string slaidName = "slaidname";
			public const string slainvokedid = "slainvokedid";
			public const string slainvokedidName = "slainvokedidname";
			public const string spousesname = "spousesname";
			public const string stageid = "stageid";
			public const string stageidName = "stageidname";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string subscriptionid = "subscriptionid";
			public const string suffix = "suffix";
			public const string team_contacts = "team_contacts";
			public const string teamsfollowed = "teamsfollowed";
			public const string telephone1 = "telephone1";
			public const string telephone2 = "telephone2";
			public const string telephone3 = "telephone3";
			public const string territorycode = "territorycode";
			public const string timespentbymeonemailandmeetings = "timespentbymeonemailandmeetings";
			public const string timezoneruleversionnumber = "timezoneruleversionnumber";
			public const string transactioncurrencyid = "transactioncurrencyid";
			public const string transactioncurrencyidName = "transactioncurrencyidname";
			public const string traversedpath = "traversedpath";
			public const string utcconversiontimezonecode = "utcconversiontimezonecode";
			public const string versionnumber = "versionnumber";
			public const string websiteurl = "websiteurl";
			public const string yomifirstname = "yomifirstname";
			public const string yomifullname = "yomifullname";
			public const string yomilastname = "yomilastname";
			public const string yomimiddlename = "yomimiddlename";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public Contact(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public Contact(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public Contact(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		public const string AlternateKeys = "ccof_userid|ccof_username";
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Contact() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "contactid";
		
		public const string PrimaryNameAttribute = "fullname";
		
		public const string EntitySchemaName = "Contact";
		
		public const string EntityLogicalName = "contact";
		
		public const string EntityLogicalCollectionName = "contacts";
		
		public const string EntitySetName = "contacts";
		
		public const int EntityTypeCode = 2;
		
		/// <summary>
		/// Unique identifier of the account with which the contact is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountid")]
		public Microsoft.Xrm.Sdk.EntityReference accountid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("accountid");
			}
		}
		
		/// <summary>
		/// Select the contact's role within the company or sales process, such as decision maker, employee, or influencer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountrolecode")]
		public virtual Contact_accountrolecode? accountrolecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_accountrolecode?)(EntityOptionSetEnum.GetEnum(this, "accountrolecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("accountrolecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Unique identifier for address 1.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_addressid")]
		public System.Nullable<System.Guid> address1_addressid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("address1_addressid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_addressid", value);
			}
		}
		
		/// <summary>
		/// Select the primary address type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_addresstypecode")]
		public virtual Contact_address1_addresstypecode? address1_addresstypecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_address1_addresstypecode?)(EntityOptionSetEnum.GetEnum(this, "address1_addresstypecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_addresstypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Type the city for the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_city")]
		public string address1_city
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_city");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_city", value);
			}
		}
		
		/// <summary>
		/// Shows the complete primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_composite")]
		public string address1_composite
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_composite");
			}
		}
		
		/// <summary>
		/// Type the country or region for the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_country")]
		public string address1_country
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_country");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_country", value);
			}
		}
		
		/// <summary>
		/// Type the county for the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_county")]
		public string address1_county
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_county");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_county", value);
			}
		}
		
		/// <summary>
		/// Type the fax number associated with the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_fax")]
		public string address1_fax
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_fax");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_fax", value);
			}
		}
		
		/// <summary>
		/// Select the freight terms for the primary address to make sure shipping orders are processed correctly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_freighttermscode")]
		public virtual Contact_address1_freighttermscode? address1_freighttermscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_address1_freighttermscode?)(EntityOptionSetEnum.GetEnum(this, "address1_freighttermscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_freighttermscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Type the latitude value for the primary address for use in mapping and other applications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_latitude")]
		public System.Nullable<double> address1_latitude
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("address1_latitude");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_latitude", value);
			}
		}
		
		/// <summary>
		/// Type the first line of the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_line1")]
		public string address1_line1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_line1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_line1", value);
			}
		}
		
		/// <summary>
		/// Type the second line of the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_line2")]
		public string address1_line2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_line2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_line2", value);
			}
		}
		
		/// <summary>
		/// Type the third line of the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_line3")]
		public string address1_line3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_line3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_line3", value);
			}
		}
		
		/// <summary>
		/// Type the longitude value for the primary address for use in mapping and other applications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_longitude")]
		public System.Nullable<double> address1_longitude
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("address1_longitude");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_longitude", value);
			}
		}
		
		/// <summary>
		/// Type a descriptive name for the primary address, such as Corporate Headquarters.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_name")]
		public string address1_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_name", value);
			}
		}
		
		/// <summary>
		/// Type the ZIP Code or postal code for the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_postalcode")]
		public string address1_postalcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_postalcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_postalcode", value);
			}
		}
		
		/// <summary>
		/// Type the post office box number of the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_postofficebox")]
		public string address1_postofficebox
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_postofficebox");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_postofficebox", value);
			}
		}
		
		/// <summary>
		/// Type the name of the main contact at the account's primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_primarycontactname")]
		public string address1_primarycontactname
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_primarycontactname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_primarycontactname", value);
			}
		}
		
		/// <summary>
		/// Select a shipping method for deliveries sent to this address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_shippingmethodcode")]
		public virtual Contact_address1_shippingmethodcode? address1_shippingmethodcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_address1_shippingmethodcode?)(EntityOptionSetEnum.GetEnum(this, "address1_shippingmethodcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Type the state or province of the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_stateorprovince")]
		public string address1_stateorprovince
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_stateorprovince");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_stateorprovince", value);
			}
		}
		
		/// <summary>
		/// Type the main phone number associated with the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_telephone1")]
		public string address1_telephone1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_telephone1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_telephone1", value);
			}
		}
		
		/// <summary>
		/// Type a second phone number associated with the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_telephone2")]
		public string address1_telephone2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_telephone2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_telephone2", value);
			}
		}
		
		/// <summary>
		/// Type a third phone number associated with the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_telephone3")]
		public string address1_telephone3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_telephone3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_telephone3", value);
			}
		}
		
		/// <summary>
		/// Type the UPS zone of the primary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_upszone")]
		public string address1_upszone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_upszone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_upszone", value);
			}
		}
		
		/// <summary>
		/// Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_utcoffset")]
		public System.Nullable<int> address1_utcoffset
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("address1_utcoffset");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_utcoffset", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for address 2.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_addressid")]
		public System.Nullable<System.Guid> address2_addressid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("address2_addressid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_addressid", value);
			}
		}
		
		/// <summary>
		/// Select the secondary address type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_addresstypecode")]
		public virtual Contact_address2_addresstypecode? address2_addresstypecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_address2_addresstypecode?)(EntityOptionSetEnum.GetEnum(this, "address2_addresstypecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_addresstypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Type the city for the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_city")]
		public string address2_city
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_city");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_city", value);
			}
		}
		
		/// <summary>
		/// Shows the complete secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_composite")]
		public string address2_composite
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_composite");
			}
		}
		
		/// <summary>
		/// Type the country or region for the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_country")]
		public string address2_country
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_country");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_country", value);
			}
		}
		
		/// <summary>
		/// Type the county for the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_county")]
		public string address2_county
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_county");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_county", value);
			}
		}
		
		/// <summary>
		/// Type the fax number associated with the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_fax")]
		public string address2_fax
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_fax");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_fax", value);
			}
		}
		
		/// <summary>
		/// Select the freight terms for the secondary address to make sure shipping orders are processed correctly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_freighttermscode")]
		public virtual Contact_address2_freighttermscode? address2_freighttermscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_address2_freighttermscode?)(EntityOptionSetEnum.GetEnum(this, "address2_freighttermscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_freighttermscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Type the latitude value for the secondary address for use in mapping and other applications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_latitude")]
		public System.Nullable<double> address2_latitude
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("address2_latitude");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_latitude", value);
			}
		}
		
		/// <summary>
		/// Type the first line of the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_line1")]
		public string address2_line1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_line1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_line1", value);
			}
		}
		
		/// <summary>
		/// Type the second line of the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_line2")]
		public string address2_line2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_line2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_line2", value);
			}
		}
		
		/// <summary>
		/// Type the third line of the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_line3")]
		public string address2_line3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_line3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_line3", value);
			}
		}
		
		/// <summary>
		/// Type the longitude value for the secondary address for use in mapping and other applications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_longitude")]
		public System.Nullable<double> address2_longitude
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("address2_longitude");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_longitude", value);
			}
		}
		
		/// <summary>
		/// Type a descriptive name for the secondary address, such as Corporate Headquarters.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_name")]
		public string address2_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_name", value);
			}
		}
		
		/// <summary>
		/// Type the ZIP Code or postal code for the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_postalcode")]
		public string address2_postalcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_postalcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_postalcode", value);
			}
		}
		
		/// <summary>
		/// Type the post office box number of the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_postofficebox")]
		public string address2_postofficebox
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_postofficebox");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_postofficebox", value);
			}
		}
		
		/// <summary>
		/// Type the name of the main contact at the account's secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_primarycontactname")]
		public string address2_primarycontactname
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_primarycontactname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_primarycontactname", value);
			}
		}
		
		/// <summary>
		/// Select a shipping method for deliveries sent to this address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_shippingmethodcode")]
		public virtual Contact_address2_shippingmethodcode? address2_shippingmethodcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_address2_shippingmethodcode?)(EntityOptionSetEnum.GetEnum(this, "address2_shippingmethodcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Type the state or province of the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_stateorprovince")]
		public string address2_stateorprovince
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_stateorprovince");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_stateorprovince", value);
			}
		}
		
		/// <summary>
		/// Type the main phone number associated with the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_telephone1")]
		public string address2_telephone1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_telephone1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_telephone1", value);
			}
		}
		
		/// <summary>
		/// Type a second phone number associated with the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_telephone2")]
		public string address2_telephone2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_telephone2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_telephone2", value);
			}
		}
		
		/// <summary>
		/// Type a third phone number associated with the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_telephone3")]
		public string address2_telephone3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_telephone3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_telephone3", value);
			}
		}
		
		/// <summary>
		/// Type the UPS zone of the secondary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_upszone")]
		public string address2_upszone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_upszone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_upszone", value);
			}
		}
		
		/// <summary>
		/// Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_utcoffset")]
		public System.Nullable<int> address2_utcoffset
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("address2_utcoffset");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_utcoffset", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for address 3.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_addressid")]
		public System.Nullable<System.Guid> address3_addressid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("address3_addressid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_addressid", value);
			}
		}
		
		/// <summary>
		/// Select the third address type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_addresstypecode")]
		public virtual Contact_address3_addresstypecode? address3_addresstypecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_address3_addresstypecode?)(EntityOptionSetEnum.GetEnum(this, "address3_addresstypecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_addresstypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Type the city for the 3rd address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_city")]
		public string address3_city
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_city");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_city", value);
			}
		}
		
		/// <summary>
		/// Shows the complete third address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_composite")]
		public string address3_composite
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_composite");
			}
		}
		
		/// <summary>
		/// the country or region for the 3rd address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_country")]
		public string address3_country
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_country");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_country", value);
			}
		}
		
		/// <summary>
		/// Type the county for the third address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_county")]
		public string address3_county
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_county");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_county", value);
			}
		}
		
		/// <summary>
		/// Type the fax number associated with the third address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_fax")]
		public string address3_fax
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_fax");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_fax", value);
			}
		}
		
		/// <summary>
		/// Select the freight terms for the third address to make sure shipping orders are processed correctly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_freighttermscode")]
		public virtual Contact_address3_freighttermscode? address3_freighttermscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_address3_freighttermscode?)(EntityOptionSetEnum.GetEnum(this, "address3_freighttermscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_freighttermscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Type the latitude value for the third address for use in mapping and other applications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_latitude")]
		public System.Nullable<double> address3_latitude
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("address3_latitude");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_latitude", value);
			}
		}
		
		/// <summary>
		/// the first line of the 3rd address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_line1")]
		public string address3_line1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_line1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_line1", value);
			}
		}
		
		/// <summary>
		/// the second line of the 3rd address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_line2")]
		public string address3_line2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_line2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_line2", value);
			}
		}
		
		/// <summary>
		/// the third line of the 3rd address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_line3")]
		public string address3_line3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_line3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_line3", value);
			}
		}
		
		/// <summary>
		/// Type the longitude value for the third address for use in mapping and other applications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_longitude")]
		public System.Nullable<double> address3_longitude
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("address3_longitude");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_longitude", value);
			}
		}
		
		/// <summary>
		/// Type a descriptive name for the third address, such as Corporate Headquarters.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_name")]
		public string address3_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_name", value);
			}
		}
		
		/// <summary>
		/// the ZIP Code or postal code for the 3rd address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_postalcode")]
		public string address3_postalcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_postalcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_postalcode", value);
			}
		}
		
		/// <summary>
		/// the post office box number of the 3rd address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_postofficebox")]
		public string address3_postofficebox
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_postofficebox");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_postofficebox", value);
			}
		}
		
		/// <summary>
		/// Type the name of the main contact at the account's third address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_primarycontactname")]
		public string address3_primarycontactname
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_primarycontactname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_primarycontactname", value);
			}
		}
		
		/// <summary>
		/// Select a shipping method for deliveries sent to this address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_shippingmethodcode")]
		public virtual Contact_address3_shippingmethodcode? address3_shippingmethodcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_address3_shippingmethodcode?)(EntityOptionSetEnum.GetEnum(this, "address3_shippingmethodcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// the state or province of the third address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_stateorprovince")]
		public string address3_stateorprovince
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_stateorprovince");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_stateorprovince", value);
			}
		}
		
		/// <summary>
		/// Type the main phone number associated with the third address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_telephone1")]
		public string address3_telephone1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_telephone1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_telephone1", value);
			}
		}
		
		/// <summary>
		/// Type a second phone number associated with the third address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_telephone2")]
		public string address3_telephone2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_telephone2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_telephone2", value);
			}
		}
		
		/// <summary>
		/// Type a third phone number associated with the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_telephone3")]
		public string address3_telephone3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_telephone3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_telephone3", value);
			}
		}
		
		/// <summary>
		/// Type the UPS zone of the third address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_upszone")]
		public string address3_upszone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_upszone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_upszone", value);
			}
		}
		
		/// <summary>
		/// Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_utcoffset")]
		public System.Nullable<int> address3_utcoffset
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("address3_utcoffset");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_utcoffset", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_confirmremovepassword")]
		public System.Nullable<bool> adx_confirmremovepassword
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("adx_confirmremovepassword");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_confirmremovepassword", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_createdbyipaddress")]
		public string adx_createdbyipaddress
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_createdbyipaddress");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_createdbyipaddress", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_createdbyusername")]
		public string adx_createdbyusername
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_createdbyusername");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_createdbyusername", value);
			}
		}
		
		/// <summary>
		/// Shows the current count of failed password attempts for the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_accessfailedcount")]
		public System.Nullable<int> adx_identity_accessfailedcount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("adx_identity_accessfailedcount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_accessfailedcount", value);
			}
		}
		
		/// <summary>
		/// Determines if the email is confirmed by the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_emailaddress1confirmed")]
		public System.Nullable<bool> adx_identity_emailaddress1confirmed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("adx_identity_emailaddress1confirmed");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_emailaddress1confirmed", value);
			}
		}
		
		/// <summary>
		/// Indicates the last date and time the user successfully signed in to a portal.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_lastsuccessfullogin")]
		public System.Nullable<System.DateTime> adx_identity_lastsuccessfullogin
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("adx_identity_lastsuccessfullogin");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_lastsuccessfullogin", value);
			}
		}
		
		/// <summary>
		/// Indicates that the contact can no longer sign in to the portal using the local account.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_locallogindisabled")]
		public System.Nullable<bool> adx_identity_locallogindisabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("adx_identity_locallogindisabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_locallogindisabled", value);
			}
		}
		
		/// <summary>
		/// Determines if this contact will track failed access attempts and become locked after too many failed attempts. To prevent the contact from becoming locked, you can disable this setting.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_lockoutenabled")]
		public System.Nullable<bool> adx_identity_lockoutenabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("adx_identity_lockoutenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_lockoutenabled", value);
			}
		}
		
		/// <summary>
		/// Shows the moment in time when the locked contact becomes unlocked again.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_lockoutenddate")]
		public System.Nullable<System.DateTime> adx_identity_lockoutenddate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("adx_identity_lockoutenddate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_lockoutenddate", value);
			}
		}
		
		/// <summary>
		/// Determines if web authentication is enabled for the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_logonenabled")]
		public System.Nullable<bool> adx_identity_logonenabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("adx_identity_logonenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_logonenabled", value);
			}
		}
		
		/// <summary>
		/// Determines if the phone number is confirmed by the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_mobilephoneconfirmed")]
		public System.Nullable<bool> adx_identity_mobilephoneconfirmed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("adx_identity_mobilephoneconfirmed");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_mobilephoneconfirmed", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_newpassword")]
		public string adx_identity_newpassword
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_identity_newpassword");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_newpassword", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_passwordhash")]
		public string adx_identity_passwordhash
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_identity_passwordhash");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_passwordhash", value);
			}
		}
		
		/// <summary>
		/// A token used to manage the web authentication session.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_securitystamp")]
		public string adx_identity_securitystamp
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_identity_securitystamp");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_securitystamp", value);
			}
		}
		
		/// <summary>
		/// Determines if two-factor authentication is enabled for the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_twofactorenabled")]
		public System.Nullable<bool> adx_identity_twofactorenabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("adx_identity_twofactorenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_twofactorenabled", value);
			}
		}
		
		/// <summary>
		/// Shows the user identity for local web authentication.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_username")]
		public string adx_identity_username
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_identity_username");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_username", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_modifiedbyipaddress")]
		public string adx_modifiedbyipaddress
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_modifiedbyipaddress");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_modifiedbyipaddress", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_modifiedbyusername")]
		public string adx_modifiedbyusername
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_modifiedbyusername");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_modifiedbyusername", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_organizationname")]
		public string adx_organizationname
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_organizationname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_organizationname", value);
			}
		}
		
		/// <summary>
		/// User’s preferred portal LCID
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_preferredlcid")]
		public System.Nullable<int> adx_preferredlcid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("adx_preferredlcid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_preferredlcid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profilealert")]
		public System.Nullable<bool> adx_profilealert
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("adx_profilealert");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_profilealert", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profilealertdate")]
		public System.Nullable<System.DateTime> adx_profilealertdate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("adx_profilealertdate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_profilealertdate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profilealertinstructions")]
		public string adx_profilealertinstructions
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_profilealertinstructions");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_profilealertinstructions", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profileisanonymous")]
		public System.Nullable<bool> adx_profileisanonymous
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("adx_profileisanonymous");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_profileisanonymous", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profilelastactivity")]
		public System.Nullable<System.DateTime> adx_profilelastactivity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("adx_profilelastactivity");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_profilelastactivity", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profilemodifiedon")]
		public System.Nullable<System.DateTime> adx_profilemodifiedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("adx_profilemodifiedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_profilemodifiedon", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_publicprofilecopy")]
		public string adx_publicprofilecopy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_publicprofilecopy");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_publicprofilecopy", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_timezone")]
		public System.Nullable<int> adx_timezone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("adx_timezone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_timezone", value);
			}
		}
		
		/// <summary>
		/// For system use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging30")]
		public Microsoft.Xrm.Sdk.Money aging30
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging30");
			}
		}
		
		/// <summary>
		/// Shows the Aging 30 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging30_base")]
		public Microsoft.Xrm.Sdk.Money aging30_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging30_base");
			}
		}
		
		/// <summary>
		/// For system use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging60")]
		public Microsoft.Xrm.Sdk.Money aging60
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging60");
			}
		}
		
		/// <summary>
		/// Shows the Aging 60 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging60_base")]
		public Microsoft.Xrm.Sdk.Money aging60_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging60_base");
			}
		}
		
		/// <summary>
		/// For system use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging90")]
		public Microsoft.Xrm.Sdk.Money aging90
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging90");
			}
		}
		
		/// <summary>
		/// Shows the Aging 90 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging90_base")]
		public Microsoft.Xrm.Sdk.Money aging90_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging90_base");
			}
		}
		
		/// <summary>
		/// Enter the date of the contact's wedding or service anniversary for use in customer gift programs or other communications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("anniversary")]
		public System.Nullable<System.DateTime> anniversary
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("anniversary");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("anniversary", value);
			}
		}
		
		/// <summary>
		/// Type the contact's annual income for use in profiling and financial analysis.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("annualincome")]
		public Microsoft.Xrm.Sdk.Money annualincome
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("annualincome");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("annualincome", value);
			}
		}
		
		/// <summary>
		/// Shows the Annual Income field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("annualincome_base")]
		public Microsoft.Xrm.Sdk.Money annualincome_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("annualincome_base");
			}
		}
		
		/// <summary>
		/// Type the name of the contact's assistant.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("assistantname")]
		public string assistantname
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("assistantname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("assistantname", value);
			}
		}
		
		/// <summary>
		/// Type the phone number for the contact's assistant.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("assistantphone")]
		public string assistantphone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("assistantphone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("assistantphone", value);
			}
		}
		
		/// <summary>
		/// Enter the contact's birthday for use in customer gift programs or other communications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("birthdate")]
		public System.Nullable<System.DateTime> birthdate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("birthdate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("birthdate", value);
			}
		}
		
		/// <summary>
		/// Type a second business phone number for this contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("business2")]
		public string business2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("business2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("business2", value);
			}
		}
		
		/// <summary>
		/// Stores Image of the Business Card
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businesscard")]
		public string businesscard
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("businesscard");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("businesscard", value);
			}
		}
		
		/// <summary>
		/// Stores Business Card Control Properties.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businesscardattributes")]
		public string businesscardattributes
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("businesscardattributes");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("businesscardattributes", value);
			}
		}
		
		/// <summary>
		/// Type a callback phone number for this contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("callback")]
		public string callback
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("callback");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("callback", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_role")]
		public virtual ccof_ProviderRole? ccof_role
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ccof_ProviderRole?)(EntityOptionSetEnum.GetEnum(this, "ccof_role")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_role", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Keycloak BCeID Guid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_userid")]
		public string ccof_userid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_userid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_userid", value);
			}
		}
		
		/// <summary>
		/// BCeID User Name
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_username")]
		public string ccof_username
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_username");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_username", value);
			}
		}
		
		/// <summary>
		/// Type the names of the contact's children for reference in communications and client programs.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("childrensnames")]
		public string childrensnames
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("childrensnames");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("childrensnames", value);
			}
		}
		
		/// <summary>
		/// Type the company phone of the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("company")]
		public string company
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("company");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("company", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactid")]
		public System.Nullable<System.Guid> contactid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("contactid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("contactid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.contactid = value;
			}
		}
		
		/// <summary>
		/// Shows who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Shows the external party who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyexternalparty")]
		public Microsoft.Xrm.Sdk.EntityReference createdbyexternalparty
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdbyexternalparty");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> createdon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Shows who created the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Type the credit limit of the contact for reference when you address invoice and accounting issues with the customer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("creditlimit")]
		public Microsoft.Xrm.Sdk.Money creditlimit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("creditlimit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("creditlimit", value);
			}
		}
		
		/// <summary>
		/// Shows the Credit Limit field converted to the system's default base currency for reporting purposes. The calculations use the exchange rate specified in the Currencies area.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("creditlimit_base")]
		public Microsoft.Xrm.Sdk.Money creditlimit_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("creditlimit_base");
			}
		}
		
		/// <summary>
		/// Select whether the contact is on a credit hold, for reference when addressing invoice and accounting issues.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("creditonhold")]
		public System.Nullable<bool> creditonhold
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("creditonhold");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("creditonhold", value);
			}
		}
		
		/// <summary>
		/// Select the size of the contact's company for segmentation and reporting purposes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customersizecode")]
		public virtual Contact_customersizecode? customersizecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_customersizecode?)(EntityOptionSetEnum.GetEnum(this, "customersizecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("customersizecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Select the category that best describes the relationship between the contact and your organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customertypecode")]
		public virtual Contact_customertypecode? customertypecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_customertypecode?)(EntityOptionSetEnum.GetEnum(this, "customertypecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("customertypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Choose the default price list associated with the contact to make sure the correct product prices for this customer are applied in sales opportunities, quotes, and orders.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultpricelevelid")]
		public Microsoft.Xrm.Sdk.EntityReference defaultpricelevelid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("defaultpricelevelid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("defaultpricelevelid", value);
			}
		}
		
		/// <summary>
		/// Type the department or business unit where the contact works in the parent company or business.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("department")]
		public string department
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("department");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("department", value);
			}
		}
		
		/// <summary>
		/// Type additional information to describe the contact, such as an excerpt from the company's website.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string description
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		/// <summary>
		/// Select whether the contact accepts bulk email sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the contact can be added to marketing lists, but will be excluded from the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotbulkemail")]
		public System.Nullable<bool> donotbulkemail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotbulkemail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotbulkemail", value);
			}
		}
		
		/// <summary>
		/// Select whether the contact accepts bulk postal mail sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the contact can be added to marketing lists, but will be excluded from the letters.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotbulkpostalmail")]
		public System.Nullable<bool> donotbulkpostalmail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotbulkpostalmail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotbulkpostalmail", value);
			}
		}
		
		/// <summary>
		/// Select whether the contact allows direct email sent from Microsoft Dynamics 365. If Do Not Allow is selected, Microsoft Dynamics 365 will not send the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotemail")]
		public System.Nullable<bool> donotemail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotemail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotemail", value);
			}
		}
		
		/// <summary>
		/// Select whether the contact allows faxes. If Do Not Allow is selected, the contact will be excluded from any fax activities distributed in marketing campaigns.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotfax")]
		public System.Nullable<bool> donotfax
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotfax");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotfax", value);
			}
		}
		
		/// <summary>
		/// Select whether the contact accepts phone calls. If Do Not Allow is selected, the contact will be excluded from any phone call activities distributed in marketing campaigns.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotphone")]
		public System.Nullable<bool> donotphone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotphone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotphone", value);
			}
		}
		
		/// <summary>
		/// Select whether the contact allows direct mail. If Do Not Allow is selected, the contact will be excluded from letter activities distributed in marketing campaigns.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotpostalmail")]
		public System.Nullable<bool> donotpostalmail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotpostalmail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotpostalmail", value);
			}
		}
		
		/// <summary>
		/// Select whether the contact accepts marketing materials, such as brochures or catalogs. Contacts that opt out can be excluded from marketing initiatives.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotsendmm")]
		public System.Nullable<bool> donotsendmm
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotsendmm");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotsendmm", value);
			}
		}
		
		/// <summary>
		/// Select the contact's highest level of education for use in segmentation and analysis.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("educationcode")]
		public virtual Contact_educationcode? educationcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_educationcode?)(EntityOptionSetEnum.GetEnum(this, "educationcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("educationcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Type the primary email address for the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress1")]
		public string emailaddress1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("emailaddress1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("emailaddress1", value);
			}
		}
		
		/// <summary>
		/// Type the secondary email address for the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress2")]
		public string emailaddress2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("emailaddress2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("emailaddress2", value);
			}
		}
		
		/// <summary>
		/// Type an alternate email address for the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress3")]
		public string emailaddress3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("emailaddress3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("emailaddress3", value);
			}
		}
		
		/// <summary>
		/// Type the employee ID or number for the contact for reference in orders, service cases, or other communications with the contact's organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("employeeid")]
		public string employeeid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("employeeid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("employeeid", value);
			}
		}
		
		/// <summary>
		/// Shows the default image for the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
		public byte[] entityimage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<byte[]>("entityimage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("entityimage", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
		public System.Nullable<long> entityimage_timestamp
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("entityimage_timestamp");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
		public string entityimage_url
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("entityimage_url");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
		public System.Nullable<System.Guid> entityimageid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("entityimageid");
			}
		}
		
		/// <summary>
		/// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> exchangerate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Identifier for an external user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("externaluseridentifier")]
		public string externaluseridentifier
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("externaluseridentifier");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("externaluseridentifier", value);
			}
		}
		
		/// <summary>
		/// Select the marital status of the contact for reference in follow-up phone calls and other communications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("familystatuscode")]
		public virtual Contact_familystatuscode? familystatuscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_familystatuscode?)(EntityOptionSetEnum.GetEnum(this, "familystatuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("familystatuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Type the fax number for the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fax")]
		public string fax
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("fax");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("fax", value);
			}
		}
		
		/// <summary>
		/// Type the contact's first name to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("firstname")]
		public string firstname
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("firstname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("firstname", value);
			}
		}
		
		/// <summary>
		/// Information about whether to allow following email activity like opens, attachment views and link clicks for emails sent to the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("followemail")]
		public System.Nullable<bool> followemail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("followemail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("followemail", value);
			}
		}
		
		/// <summary>
		/// Type the URL for the contact's FTP site to enable users to access data and share documents.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ftpsiteurl")]
		public string ftpsiteurl
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ftpsiteurl");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ftpsiteurl", value);
			}
		}
		
		/// <summary>
		/// Combines and shows the contact's first and last names so that the full name can be displayed in views and reports.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fullname")]
		public string fullname
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("fullname");
			}
		}
		
		/// <summary>
		/// Select the contact's gender to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("gendercode")]
		public virtual Contact_gendercode? gendercode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_gendercode?)(EntityOptionSetEnum.GetEnum(this, "gendercode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("gendercode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Type the passport number or other government ID for the contact for use in documents or reports.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("governmentid")]
		public string governmentid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("governmentid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("governmentid", value);
			}
		}
		
		/// <summary>
		/// Select whether the contact has any children for reference in follow-up phone calls and other communications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("haschildrencode")]
		public virtual Contact_haschildrencode? haschildrencode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_haschildrencode?)(EntityOptionSetEnum.GetEnum(this, "haschildrencode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("haschildrencode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Type a second home phone number for this contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("home2")]
		public string home2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("home2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("home2", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the data import or data migration that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> importsequencenumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Select whether the contact exists in a separate accounting or other system, such as Microsoft Dynamics GP or another ERP database, for use in integration processes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbackofficecustomer")]
		public System.Nullable<bool> isbackofficecustomer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isbackofficecustomer");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("isbackofficecustomer", value);
			}
		}
		
		/// <summary>
		/// Type the job title of the contact to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("jobtitle")]
		public string jobtitle
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("jobtitle");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("jobtitle", value);
			}
		}
		
		/// <summary>
		/// Type the contact's last name to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastname")]
		public string lastname
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("lastname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("lastname", value);
			}
		}
		
		/// <summary>
		/// Contains the date and time stamp of the last on hold time.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastonholdtime")]
		public System.Nullable<System.DateTime> lastonholdtime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastonholdtime");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("lastonholdtime", value);
			}
		}
		
		/// <summary>
		/// Shows the date when the contact was last included in a marketing campaign or quick campaign.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastusedincampaign")]
		public System.Nullable<System.DateTime> lastusedincampaign
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastusedincampaign");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("lastusedincampaign", value);
			}
		}
		
		/// <summary>
		/// Select the primary marketing source that directed the contact to your organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("leadsourcecode")]
		public virtual Contact_leadsourcecode? leadsourcecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_leadsourcecode?)(EntityOptionSetEnum.GetEnum(this, "leadsourcecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("leadsourcecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Type the name of the contact's manager for use in escalating issues or other follow-up communications with the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("managername")]
		public string managername
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("managername");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("managername", value);
			}
		}
		
		/// <summary>
		/// Type the phone number for the contact's manager.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("managerphone")]
		public string managerphone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("managerphone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("managerphone", value);
			}
		}
		
		/// <summary>
		/// Whether is only for marketing
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("marketingonly")]
		public System.Nullable<bool> marketingonly
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("marketingonly");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("marketingonly", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the master contact for merge.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("masterid")]
		public Microsoft.Xrm.Sdk.EntityReference masterid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("masterid");
			}
		}
		
		/// <summary>
		/// Shows whether the account has been merged with a master contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("merged")]
		public System.Nullable<bool> merged
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("merged");
			}
		}
		
		/// <summary>
		/// Type the contact's middle name or initial to make sure the contact is addressed correctly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("middlename")]
		public string middlename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("middlename");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("middlename", value);
			}
		}
		
		/// <summary>
		/// Type the mobile phone number for the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mobilephone")]
		public string mobilephone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("mobilephone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("mobilephone", value);
			}
		}
		
		/// <summary>
		/// Shows who last updated the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Shows the external party who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyexternalparty")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedbyexternalparty
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedbyexternalparty");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> modifiedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for Account associated with Contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msa_managingpartnerid")]
		public Microsoft.Xrm.Sdk.EntityReference msa_managingpartnerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msa_managingpartnerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msa_managingpartnerid", value);
			}
		}
		
		/// <summary>
		/// Maps to contact KPI records
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_contactkpiid")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_contactkpiid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_contactkpiid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_contactkpiid", value);
			}
		}
		
		/// <summary>
		/// Indicate buying influence using labels
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_decisioninfluencetag")]
		public virtual Contact_msdyn_decisioninfluencetag? msdyn_decisioninfluencetag
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_msdyn_decisioninfluencetag?)(EntityOptionSetEnum.GetEnum(this, "msdyn_decisioninfluencetag")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_decisioninfluencetag", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Indicates that the contact has opted out of web tracking.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_disablewebtracking")]
		public System.Nullable<bool> msdyn_disablewebtracking
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_disablewebtracking");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_disablewebtracking", value);
			}
		}
		
		/// <summary>
		/// Describes whether contact is opted out or not
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_gdproptout")]
		public System.Nullable<bool> msdyn_gdproptout
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_gdproptout");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_gdproptout", value);
			}
		}
		
		/// <summary>
		/// Describes if the contact is an assistant in org chart
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_isassistantinorgchart")]
		public System.Nullable<bool> msdyn_isassistantinorgchart
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_isassistantinorgchart");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_isassistantinorgchart", value);
			}
		}
		
		/// <summary>
		/// Indicates that the contact is considered a minor in their jurisdiction.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_isminor")]
		public System.Nullable<bool> msdyn_isminor
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_isminor");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_isminor", value);
			}
		}
		
		/// <summary>
		/// Indicates that the contact is considered a minor in their jurisdiction and has parental consent.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_isminorwithparentalconsent")]
		public System.Nullable<bool> msdyn_isminorwithparentalconsent
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_isminorwithparentalconsent");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_isminorwithparentalconsent", value);
			}
		}
		
		/// <summary>
		/// Whether or not the contact belongs to the associated account
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_orgchangestatus")]
		public virtual Contact_msdyn_orgchangestatus? msdyn_orgchangestatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_msdyn_orgchangestatus?)(EntityOptionSetEnum.GetEnum(this, "msdyn_orgchangestatus")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_orgchangestatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Indicates the date and time that the person agreed to the portal terms and conditions.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_portaltermsagreementdate")]
		public System.Nullable<System.DateTime> msdyn_portaltermsagreementdate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("msdyn_portaltermsagreementdate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_portaltermsagreementdate", value);
			}
		}
		
		/// <summary>
		/// Indicates the primary time zone that the contact works on.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_primarytimezone")]
		public System.Nullable<int> msdyn_primarytimezone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_primarytimezone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_primarytimezone", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for Segment associated with contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_segmentid")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_segmentid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_segmentid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_segmentid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msft_datastate")]
		public virtual msft_DataState? msft_datastate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((msft_DataState?)(EntityOptionSetEnum.GetEnum(this, "msft_datastate")));
			}
		}
		
		/// <summary>
		/// User’s preferred portal language
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mspp_userpreferredlcid")]
		public virtual powerpagelanguages? mspp_userpreferredlcid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((powerpagelanguages?)(EntityOptionSetEnum.GetEnum(this, "mspp_userpreferredlcid")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("mspp_userpreferredlcid", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Type the contact's nickname.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("nickname")]
		public string nickname
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("nickname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("nickname", value);
			}
		}
		
		/// <summary>
		/// Type the number of children the contact has for reference in follow-up phone calls and other communications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("numberofchildren")]
		public System.Nullable<int> numberofchildren
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("numberofchildren");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("numberofchildren", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_first_name")]
		public string ofm_first_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_first_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_first_name", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_last_name")]
		public string ofm_last_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_last_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_last_name", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_portal_role")]
		public virtual ofm_portal_role? ofm_portal_role
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_portal_role?)(EntityOptionSetEnum.GetEnum(this, "ofm_portal_role")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_portal_role", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_social_insurance_number")]
		public string ofm_social_insurance_number
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_social_insurance_number");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_social_insurance_number", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_social_insurance_number_for_mask")]
		public string ofm_social_insurance_number_for_mask
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_social_insurance_number_for_mask");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_social_insurance_number_for_mask", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supplier_issue")]
		public virtual Contact_ofm_supplier_issue? ofm_supplier_issue
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_ofm_supplier_issue?)(EntityOptionSetEnum.GetEnum(this, "ofm_supplier_issue")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_supplier_issue", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supplier_number")]
		public string ofm_supplier_number
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_supplier_number");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_supplier_number", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supplier_site_number")]
		public string ofm_supplier_site_number
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_supplier_site_number");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_supplier_site_number", value);
			}
		}
		
		/// <summary>
		/// Shows how long, in minutes, that the record was on hold.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onholdtime")]
		public System.Nullable<int> onholdtime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("onholdtime");
			}
		}
		
		/// <summary>
		/// Shows the lead that the contact was created if the contact was created by converting a lead in Microsoft Dynamics 365. This is used to relate the contact to the data on the originating lead for use in reporting and analytics.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingleadid")]
		public Microsoft.Xrm.Sdk.EntityReference originatingleadid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("originatingleadid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("originatingleadid", value);
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> overriddencreatedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference ownerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the business unit that owns the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier of the team who owns the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference owningteam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who owns the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference owninguser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Type the pager number for the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pager")]
		public string pager
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("pager");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("pager", value);
			}
		}
		
		/// <summary>
		/// For internal use only
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parent_contactid")]
		public Microsoft.Xrm.Sdk.EntityReference parent_contactid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parent_contactid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("parent_contactid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the parent contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcontactid")]
		public Microsoft.Xrm.Sdk.EntityReference parentcontactid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentcontactid");
			}
		}
		
		/// <summary>
		/// Select the parent account or parent contact for the contact to provide a quick link to additional details, such as financial information, activities, and opportunities.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcustomerid")]
		public Microsoft.Xrm.Sdk.EntityReference parentcustomerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentcustomerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("parentcustomerid", value);
			}
		}
		
		/// <summary>
		/// Shows whether the contact participates in workflow rules.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("participatesinworkflow")]
		public System.Nullable<bool> participatesinworkflow
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("participatesinworkflow");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("participatesinworkflow", value);
			}
		}
		
		/// <summary>
		/// Select the payment terms to indicate when the customer needs to pay the total amount.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("paymenttermscode")]
		public virtual Contact_paymenttermscode? paymenttermscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_paymenttermscode?)(EntityOptionSetEnum.GetEnum(this, "paymenttermscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("paymenttermscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Select the preferred day of the week for service appointments.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredappointmentdaycode")]
		public virtual Contact_preferredappointmentdaycode? preferredappointmentdaycode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_preferredappointmentdaycode?)(EntityOptionSetEnum.GetEnum(this, "preferredappointmentdaycode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("preferredappointmentdaycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Select the preferred time of day for service appointments.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredappointmenttimecode")]
		public virtual Contact_preferredappointmenttimecode? preferredappointmenttimecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_preferredappointmenttimecode?)(EntityOptionSetEnum.GetEnum(this, "preferredappointmenttimecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("preferredappointmenttimecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Select the preferred method of contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredcontactmethodcode")]
		public virtual Contact_preferredcontactmethodcode? preferredcontactmethodcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_preferredcontactmethodcode?)(EntityOptionSetEnum.GetEnum(this, "preferredcontactmethodcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("preferredcontactmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Choose the contact's preferred service facility or equipment to make sure services are scheduled correctly for the customer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredequipmentid")]
		public Microsoft.Xrm.Sdk.EntityReference preferredequipmentid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("preferredequipmentid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("preferredequipmentid", value);
			}
		}
		
		/// <summary>
		/// Choose the contact's preferred service to make sure services are scheduled correctly for the customer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredserviceid")]
		public Microsoft.Xrm.Sdk.EntityReference preferredserviceid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("preferredserviceid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("preferredserviceid", value);
			}
		}
		
		/// <summary>
		/// Choose the regular or preferred customer service representative for reference when scheduling service activities for the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredsystemuserid")]
		public Microsoft.Xrm.Sdk.EntityReference preferredsystemuserid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("preferredsystemuserid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("preferredsystemuserid", value);
			}
		}
		
		/// <summary>
		/// Shows the ID of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> processid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("processid", value);
			}
		}
		
		/// <summary>
		/// Type the salutation of the contact to make sure the contact is addressed correctly in sales calls, email messages, and marketing campaigns.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("salutation")]
		public string salutation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("salutation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("salutation", value);
			}
		}
		
		/// <summary>
		/// Select a shipping method for deliveries sent to this address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("shippingmethodcode")]
		public virtual Contact_shippingmethodcode? shippingmethodcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_shippingmethodcode?)(EntityOptionSetEnum.GetEnum(this, "shippingmethodcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Choose the service level agreement (SLA) that you want to apply to the Contact record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
		public Microsoft.Xrm.Sdk.EntityReference slaid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slaid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("slaid", value);
			}
		}
		
		/// <summary>
		/// Last SLA that was applied to this case. This field is for internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
		public Microsoft.Xrm.Sdk.EntityReference slainvokedid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slainvokedid");
			}
		}
		
		/// <summary>
		/// Type the name of the contact's spouse or partner for reference during calls, events, or other communications with the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("spousesname")]
		public string spousesname
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("spousesname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("spousesname", value);
			}
		}
		
		/// <summary>
		/// Shows the ID of the stage.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> stageid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("stageid", value);
			}
		}
		
		/// <summary>
		/// Shows whether the contact is active or inactive. Inactive contacts are read-only and can't be edited unless they are reactivated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual contact_statecode? statecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((contact_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Select the contact's status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual Contact_StatusCode? statuscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subscriptionid")]
		public System.Nullable<System.Guid> subscriptionid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("subscriptionid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("subscriptionid", value);
			}
		}
		
		/// <summary>
		/// Type the suffix used in the contact's name, such as Jr. or Sr. to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("suffix")]
		public string suffix
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("suffix");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("suffix", value);
			}
		}
		
		/// <summary>
		/// Number of users or conversations followed the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamsfollowed")]
		public System.Nullable<int> teamsfollowed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("teamsfollowed");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("teamsfollowed", value);
			}
		}
		
		/// <summary>
		/// Type the main phone number for this contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("telephone1")]
		public string telephone1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("telephone1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("telephone1", value);
			}
		}
		
		/// <summary>
		/// Type a second phone number for this contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("telephone2")]
		public string telephone2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("telephone2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("telephone2", value);
			}
		}
		
		/// <summary>
		/// Type a third phone number for this contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("telephone3")]
		public string telephone3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("telephone3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("telephone3", value);
			}
		}
		
		/// <summary>
		/// Select a region or territory for the contact for use in segmentation and analysis.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("territorycode")]
		public virtual Contact_territorycode? territorycode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_territorycode?)(EntityOptionSetEnum.GetEnum(this, "territorycode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("territorycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Total time spent for emails (read and write) and meetings by me in relation to the contact record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timespentbymeonemailandmeetings")]
		public string timespentbymeonemailandmeetings
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("timespentbymeonemailandmeetings");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> timezoneruleversionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Choose the local currency for the record to make sure budgets are reported in the correct currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string traversedpath
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("traversedpath", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> utcconversiontimezonecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version number of the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> versionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// Type the contact's professional or personal website or blog URL.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("websiteurl")]
		public string websiteurl
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("websiteurl");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("websiteurl", value);
			}
		}
		
		/// <summary>
		/// Type the phonetic spelling of the contact's first name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yomifirstname")]
		public string yomifirstname
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("yomifirstname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("yomifirstname", value);
			}
		}
		
		/// <summary>
		/// Shows the combined Yomi first and last names of the contact so that the full phonetic name can be displayed in views and reports.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yomifullname")]
		public string yomifullname
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("yomifullname");
			}
		}
		
		/// <summary>
		/// Type the phonetic spelling of the contact's last name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yomilastname")]
		public string yomilastname
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("yomilastname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("yomilastname", value);
			}
		}
		
		/// <summary>
		/// Type the phonetic spelling of the contact's middle name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yomimiddlename")]
		public string yomimiddlename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("yomimiddlename");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("yomimiddlename", value);
			}
		}
		
		/// <summary>
		/// 1:N account_primary_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_primary_contact")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Account> account_primary_contact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.Account>("account_primary_contact", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.Account>("account_primary_contact", null, value);
			}
		}
		
		/// <summary>
		/// 1:N contact_customer_contacts
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_customer_contacts", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Contact> Referencedcontact_customer_contacts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.Contact>("contact_customer_contacts", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.Contact>("contact_customer_contacts", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N Contact_Email_EmailSender
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contact_Email_EmailSender")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Email> Contact_Email_EmailSender
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.Email>("Contact_Email_EmailSender", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.Email>("Contact_Email_EmailSender", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Contact_Emails
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contact_Emails")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Email> Contact_Emails
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.Email>("Contact_Emails", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.Email>("Contact_Emails", null, value);
			}
		}
		
		/// <summary>
		/// 1:N contact_master_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_master_contact", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Contact> Referencedcontact_master_contact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.Contact>("contact_master_contact", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.Contact>("contact_master_contact", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N contact_parent_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_parent_contact", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Contact> Referencedcontact_parent_contact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.Contact>("contact_parent_contact", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.Contact>("contact_parent_contact", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N ofm_assistance_request_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_assistance_request_contact")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_assistance_request> ofm_assistance_request_contact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_assistance_request>("ofm_assistance_request_contact", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_assistance_request>("ofm_assistance_request_contact", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ofm_contact_account
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_contact_account")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Account> ofm_contact_account
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.Account>("ofm_contact_account", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.Account>("ofm_contact_account", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ofm_contact_applications
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_contact_applications")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_application> ofm_contact_applications
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_application>("ofm_contact_applications", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_application>("ofm_contact_applications", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ofm_facility_business_bceid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_facility_business_bceid")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_bceid_facility> ofm_facility_business_bceid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_bceid_facility>("ofm_facility_business_bceid", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_bceid_facility>("ofm_facility_business_bceid", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ofm_request_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_request_contact")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_assistance_request> ofm_request_contact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_assistance_request>("ofm_request_contact", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_assistance_request>("ofm_request_contact", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ofm_secondary_contact_application
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_secondary_contact_application")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_application> ofm_secondary_contact_application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_application>("ofm_secondary_contact_application", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_application>("ofm_secondary_contact_application", null, value);
			}
		}
		
		/// <summary>
		/// N:1 contact_customer_accounts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcustomerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_customer_accounts")]
		public ECC.Core.DataContext.Account contact_customer_accounts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Account>("contact_customer_accounts", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.Account>("contact_customer_accounts", null, value);
			}
		}
		
		/// <summary>
		/// N:1 contact_customer_contacts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcustomerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_customer_contacts", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public ECC.Core.DataContext.Contact Referencingcontact_customer_contacts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("contact_customer_contacts", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.Contact>("contact_customer_contacts", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// N:1 contact_master_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("masterid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_master_contact", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public ECC.Core.DataContext.Contact Referencingcontact_master_contact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("contact_master_contact", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
		}
		
		/// <summary>
		/// N:1 contact_parent_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parent_contactid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_parent_contact", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public ECC.Core.DataContext.Contact Referencingcontact_parent_contact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("contact_parent_contact", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.Contact>("contact_parent_contact", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// N:1 msa_contact_managingpartner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msa_managingpartnerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msa_contact_managingpartner")]
		public ECC.Core.DataContext.Account msa_contact_managingpartner
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Account>("msa_contact_managingpartner", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.Account>("msa_contact_managingpartner", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_contacts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_contacts")]
		public ECC.Core.DataContext.Team team_contacts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_contacts", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Contact(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["contactid"] = base.Id;
                        break;
                    case "contactid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
	
	/// <summary>
	/// Activity that is delivered using email protocols.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("email")]
	public partial class Email : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the email entity
		/// </summary>
		public static partial class Fields
		{
			public const string acceptingentityid = "acceptingentityid";
			public const string acceptingentityidName = "acceptingentityidname";
			public const string Account_Email_EmailSender = "Account_Email_EmailSender";
			public const string Account_Email_SendersAccount = "Account_Email_SendersAccount";
			public const string Account_Emails = "Account_Emails";
			public const string activityadditionalparams = "activityadditionalparams";
			public const string activityid = "activityid";
			public const string Id = "activityid";
			public const string activityidName = "activityidname";
			public const string activitytypecode = "activitytypecode";
			public const string actualdurationminutes = "actualdurationminutes";
			public const string actualend = "actualend";
			public const string actualstart = "actualstart";
			public const string attachmentcount = "attachmentcount";
			public const string attachmentopencount = "attachmentopencount";
			public const string baseconversationindexhash = "baseconversationindexhash";
			public const string bcc = "bcc";
			public const string category = "category";
			public const string cc = "cc";
			public const string ccof_change_request = "ccof_change_request";
			public const string ccof_change_requestName = "ccof_change_requestname";
			public const string ccof_emailtype = "ccof_emailtype";
			public const string ccof_program_year = "ccof_program_year";
			public const string ccof_regardingccfri = "ccof_regardingccfri";
			public const string ccof_regardingccfriName = "ccof_regardingccfriname";
			public const string compressed = "compressed";
			public const string Contact_Email_EmailSender = "Contact_Email_EmailSender";
			public const string Contact_Emails = "Contact_Emails";
			public const string conversationindex = "conversationindex";
			public const string conversationtrackingid = "conversationtrackingid";
			public const string correlatedactivityid = "correlatedactivityid";
			public const string correlatedactivityidName = "correlatedactivityidname";
			public const string correlatedsubjectchanged = "correlatedsubjectchanged";
			public const string correlationmethod = "correlationmethod";
			public const string createdby = "createdby";
			public const string createdbyName = "createdbyname";
			public const string createdon = "createdon";
			public const string createdonbehalfby = "createdonbehalfby";
			public const string createdonbehalfbyName = "createdonbehalfbyname";
			public const string delayedemailsendtime = "delayedemailsendtime";
			public const string deliveryattempts = "deliveryattempts";
			public const string deliveryprioritycode = "deliveryprioritycode";
			public const string deliveryreceiptrequested = "deliveryreceiptrequested";
			public const string description = "description";
			public const string descriptionblobid = "descriptionblobid";
			public const string descriptionblobid_name = "descriptionblobid_name";
			public const string descriptionblobidName = "descriptionblobidname";
			public const string directioncode = "directioncode";
			public const string Referencingemail_email_CorrelatedActivityId = "email_email_CorrelatedActivityId";
			public const string Referencingemail_email_parentactivityid = "email_email_parentactivityid";
			public const string emailreminderexpirytime = "emailreminderexpirytime";
			public const string emailreminderstatus = "emailreminderstatus";
			public const string emailremindertext = "emailremindertext";
			public const string emailremindertype = "emailremindertype";
			public const string emailsender = "emailsender";
			public const string emailsenderName = "emailsendername";
			public const string emailtrackingid = "emailtrackingid";
			public const string exchangerate = "exchangerate";
			public const string followemailuserpreference = "followemailuserpreference";
			public const string from = "from";
			public const string importsequencenumber = "importsequencenumber";
			public const string inreplyto = "inreplyto";
			public const string internetmessageheaders = "internetmessageheaders";
			public const string isbilled = "isbilled";
			public const string isemailfollowed = "isemailfollowed";
			public const string isemailreminderset = "isemailreminderset";
			public const string isregularactivity = "isregularactivity";
			public const string isunsafe = "isunsafe";
			public const string isworkflowcreated = "isworkflowcreated";
			public const string lastonholdtime = "lastonholdtime";
			public const string lastopenedtime = "lastopenedtime";
			public const string linksclickedcount = "linksclickedcount";
			public const string messageid = "messageid";
			public const string messageiddupcheck = "messageiddupcheck";
			public const string mimetype = "mimetype";
			public const string modifiedby = "modifiedby";
			public const string modifiedbyName = "modifiedbyname";
			public const string modifiedon = "modifiedon";
			public const string modifiedonbehalfby = "modifiedonbehalfby";
			public const string modifiedonbehalfbyName = "modifiedonbehalfbyname";
			public const string msdyn_copilotengaged = "msdyn_copilotengaged";
			public const string msdyn_recipientlist = "msdyn_recipientlist";
			public const string msft_datastate = "msft_datastate";
			public const string notifications = "notifications";
			public const string ofm_assistance_request_Emails = "ofm_assistance_request_Emails";
			public const string ofm_communication_type = "ofm_communication_type";
			public const string ofm_communication_typeName = "ofm_communication_typename";
			public const string ofm_due_date = "ofm_due_date";
			public const string ofm_email_communication_type = "ofm_email_communication_type";
			public const string ofm_expiry_time = "ofm_expiry_time";
			public const string ofm_is_read = "ofm_is_read";
			public const string ofm_sent_on = "ofm_sent_on";
			public const string onholdtime = "onholdtime";
			public const string opencount = "opencount";
			public const string overriddencreatedon = "overriddencreatedon";
			public const string ownerid = "ownerid";
			public const string owneridName = "owneridname";
			public const string owningbusinessunit = "owningbusinessunit";
			public const string owningbusinessunitName = "owningbusinessunitname";
			public const string owningteam = "owningteam";
			public const string owningteamName = "owningteamname";
			public const string owninguser = "owninguser";
			public const string owninguserName = "owningusername";
			public const string parentactivityid = "parentactivityid";
			public const string parentactivityidName = "parentactivityidname";
			public const string postponeemailprocessinguntil = "postponeemailprocessinguntil";
			public const string prioritycode = "prioritycode";
			public const string processid = "processid";
			public const string readreceiptrequested = "readreceiptrequested";
			public const string receivingmailboxid = "receivingmailboxid";
			public const string receivingmailboxidName = "receivingmailboxidname";
			public const string Referencedemail_email_CorrelatedActivityId = "Referencedemail_email_CorrelatedActivityId";
			public const string Referencedemail_email_parentactivityid = "Referencedemail_email_parentactivityid";
			public const string regardingobjectid = "regardingobjectid";
			public const string regardingobjectidName = "regardingobjectidname";
			public const string related = "related";
			public const string reminderactioncardid = "reminderactioncardid";
			public const string replycount = "replycount";
			public const string reservedforinternaluse = "reservedforinternaluse";
			public const string scheduleddurationminutes = "scheduleddurationminutes";
			public const string scheduledend = "scheduledend";
			public const string scheduledstart = "scheduledstart";
			public const string sender = "sender";
			public const string sendermailboxid = "sendermailboxid";
			public const string sendermailboxidName = "sendermailboxidname";
			public const string sendersaccount = "sendersaccount";
			public const string sendersaccountName = "sendersaccountname";
			public const string senton = "senton";
			public const string serviceid = "serviceid";
			public const string serviceidName = "serviceidname";
			public const string slaid = "slaid";
			public const string slaidName = "slaidname";
			public const string slainvokedid = "slainvokedid";
			public const string slainvokedidName = "slainvokedidname";
			public const string sortdate = "sortdate";
			public const string stageid = "stageid";
			public const string stageidName = "stageidname";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string subcategory = "subcategory";
			public const string subject = "subject";
			public const string submittedby = "submittedby";
			public const string team_email = "team_email";
			public const string templateid = "templateid";
			public const string templateidName = "templateidname";
			public const string timezoneruleversionnumber = "timezoneruleversionnumber";
			public const string to = "to";
			public const string torecipients = "torecipients";
			public const string trackingtoken = "trackingtoken";
			public const string transactioncurrencyid = "transactioncurrencyid";
			public const string transactioncurrencyidName = "transactioncurrencyidname";
			public const string traversedpath = "traversedpath";
			public const string utcconversiontimezonecode = "utcconversiontimezonecode";
			public const string versionnumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public Email(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public Email(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public Email(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Email() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "activityid";
		
		public const string PrimaryNameAttribute = "subject";
		
		public const string EntitySchemaName = "Email";
		
		public const string EntityLogicalName = "email";
		
		public const string EntityLogicalCollectionName = "emails";
		
		public const string EntitySetName = "emails";
		
		public const int EntityTypeCode = 4202;
		
		/// <summary>
		/// The Entity that Accepted the Email
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("acceptingentityid")]
		public Microsoft.Xrm.Sdk.EntityReference acceptingentityid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("acceptingentityid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("acceptingentityid", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityadditionalparams")]
		public string activityadditionalparams
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("activityadditionalparams");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("activityadditionalparams", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the email activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		public System.Nullable<System.Guid> activityid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("activityid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("activityid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.activityid = value;
			}
		}
		
		/// <summary>
		/// Shows the type of activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activitytypecode")]
		public string activitytypecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("activitytypecode");
			}
		}
		
		/// <summary>
		/// Type the number of minutes spent creating and sending the email. The duration is used in reporting.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualdurationminutes")]
		public System.Nullable<int> actualdurationminutes
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("actualdurationminutes");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("actualdurationminutes", value);
			}
		}
		
		/// <summary>
		/// Enter the actual end date and time of the email. By default, it displays the date and time when the activity was completed or canceled, but can be edited to capture the actual time to create and send the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualend")]
		public System.Nullable<System.DateTime> actualend
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("actualend");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("actualend", value);
			}
		}
		
		/// <summary>
		/// Enter the actual start date and time for the email. By default, it displays the date and time when the activity was created, but can be edited to capture the actual time to create and send the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualstart")]
		public System.Nullable<System.DateTime> actualstart
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("actualstart");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("actualstart", value);
			}
		}
		
		/// <summary>
		/// Shows the umber of attachments of the email message.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("attachmentcount")]
		public System.Nullable<int> attachmentcount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("attachmentcount");
			}
		}
		
		/// <summary>
		/// Shows the number of times an email attachment has been viewed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("attachmentopencount")]
		public System.Nullable<int> attachmentopencount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("attachmentopencount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("attachmentopencount", value);
			}
		}
		
		/// <summary>
		/// Hash of base of conversation index.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("baseconversationindexhash")]
		public System.Nullable<int> baseconversationindexhash
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("baseconversationindexhash");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("baseconversationindexhash", value);
			}
		}
		
		/// <summary>
		/// Enter the recipients that are included on the email distribution, but are not displayed to other recipients.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bcc")]
		public System.Collections.Generic.IEnumerable<Microsoft.Xrm.Sdk.Entity> bcc
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("bcc");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Microsoft.Xrm.Sdk.Entity>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				if ((value == null))
				{
					this.SetAttributeValue("bcc", value);
				}
				else
				{
					this.SetAttributeValue("bcc", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
			}
		}
		
		/// <summary>
		/// Type a category to identify the email type, such as lead outreach, customer follow-up, or service alert, to tie the email to a business group or function.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("category")]
		public string category
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("category");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("category", value);
			}
		}
		
		/// <summary>
		/// Enter the recipients that should be copied on the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc")]
		public System.Collections.Generic.IEnumerable<Microsoft.Xrm.Sdk.Entity> cc
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("cc");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Microsoft.Xrm.Sdk.Entity>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				if ((value == null))
				{
					this.SetAttributeValue("cc", value);
				}
				else
				{
					this.SetAttributeValue("cc", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_change_request")]
		public Microsoft.Xrm.Sdk.EntityReference ccof_change_request
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ccof_change_request");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_change_request", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_emailtype")]
		public virtual ccof_ccfriEmailType? ccof_emailtype
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ccof_ccfriEmailType?)(EntityOptionSetEnum.GetEnum(this, "ccof_emailtype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_emailtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Show Fiscal Yeare on Email for CCOF
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_program_year")]
		public string ccof_program_year
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ccof_program_year");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_program_year", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ccof_regardingccfri")]
		public Microsoft.Xrm.Sdk.EntityReference ccof_regardingccfri
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ccof_regardingccfri");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ccof_regardingccfri", value);
			}
		}
		
		/// <summary>
		/// Indicates if the body is compressed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("compressed")]
		public System.Nullable<bool> compressed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("compressed");
			}
		}
		
		/// <summary>
		/// Identifier for all the email responses for this conversation.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("conversationindex")]
		public string conversationindex
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("conversationindex");
			}
		}
		
		/// <summary>
		/// Conversation Tracking Id.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("conversationtrackingid")]
		public System.Nullable<System.Guid> conversationtrackingid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("conversationtrackingid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("conversationtrackingid", value);
			}
		}
		
		/// <summary>
		/// Correlated Activity Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("correlatedactivityid")]
		public Microsoft.Xrm.Sdk.EntityReference correlatedactivityid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("correlatedactivityid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("correlatedactivityid", value);
			}
		}
		
		/// <summary>
		/// Indicates if the subject changed compared to the subject of the correlated email
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("correlatedsubjectchanged")]
		public System.Nullable<bool> correlatedsubjectchanged
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("correlatedsubjectchanged");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("correlatedsubjectchanged", value);
			}
		}
		
		/// <summary>
		/// Shows how an email is correlated to an existing email in Microsoft Dynamics 365. XHeader and CustomCorrelation are not used. For system use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("correlationmethod")]
		public virtual Email_correlationmethod? correlationmethod
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Email_correlationmethod?)(EntityOptionSetEnum.GetEnum(this, "correlationmethod")));
			}
		}
		
		/// <summary>
		/// Shows who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> createdon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Shows who created the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Enter the expected date and time when email will be sent.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("delayedemailsendtime")]
		public System.Nullable<System.DateTime> delayedemailsendtime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("delayedemailsendtime");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("delayedemailsendtime", value);
			}
		}
		
		/// <summary>
		/// Shows the count of the number of attempts made to send the email. The count is used as an indicator of email routing issues.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deliveryattempts")]
		public System.Nullable<int> deliveryattempts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("deliveryattempts");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("deliveryattempts", value);
			}
		}
		
		/// <summary>
		/// Select the priority of delivery of the email to the email server.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deliveryprioritycode")]
		public virtual activitypointer_DeliveryPriorityCode? deliveryprioritycode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((activitypointer_DeliveryPriorityCode?)(EntityOptionSetEnum.GetEnum(this, "deliveryprioritycode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("deliveryprioritycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Select whether the sender should receive confirmation that the email was delivered.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deliveryreceiptrequested")]
		public System.Nullable<bool> deliveryreceiptrequested
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("deliveryreceiptrequested");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("deliveryreceiptrequested", value);
			}
		}
		
		/// <summary>
		/// Type the greeting and message text of the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string description
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		/// <summary>
		/// File that contains description content.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("descriptionblobid")]
		public object descriptionblobid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("descriptionblobid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("descriptionblobid_name")]
		public string descriptionblobid_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("descriptionblobid_name");
			}
		}
		
		/// <summary>
		/// Select the direction of the email as incoming or outbound.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("directioncode")]
		public System.Nullable<bool> directioncode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("directioncode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("directioncode", value);
			}
		}
		
		/// <summary>
		/// Shows the date and time when an email reminder expires.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailreminderexpirytime")]
		public System.Nullable<System.DateTime> emailreminderexpirytime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("emailreminderexpirytime");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("emailreminderexpirytime", value);
			}
		}
		
		/// <summary>
		/// Shows the status of the email reminder.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailreminderstatus")]
		public virtual Email_emailreminderstatus? emailreminderstatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Email_emailreminderstatus?)(EntityOptionSetEnum.GetEnum(this, "emailreminderstatus")));
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailremindertext")]
		public string emailremindertext
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("emailremindertext");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("emailremindertext", value);
			}
		}
		
		/// <summary>
		/// Shows the type of the email reminder.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailremindertype")]
		public virtual Email_emailremindertype? emailremindertype
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Email_emailremindertype?)(EntityOptionSetEnum.GetEnum(this, "emailremindertype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("emailremindertype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Shows the sender of the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailsender")]
		public Microsoft.Xrm.Sdk.EntityReference emailsender
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("emailsender");
			}
		}
		
		/// <summary>
		/// Email Tracking Id.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailtrackingid")]
		public System.Nullable<System.Guid> emailtrackingid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("emailtrackingid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("emailtrackingid", value);
			}
		}
		
		/// <summary>
		/// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> exchangerate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Select whether the email allows following recipient activities sent from Microsoft Dynamics 365.This is user preference state which can be overridden by system evaluated state.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("followemailuserpreference")]
		public System.Nullable<bool> followemailuserpreference
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("followemailuserpreference");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("followemailuserpreference", value);
			}
		}
		
		/// <summary>
		/// Enter the sender of the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("from")]
		public System.Collections.Generic.IEnumerable<Microsoft.Xrm.Sdk.Entity> from
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("from");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Microsoft.Xrm.Sdk.Entity>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				if ((value == null))
				{
					this.SetAttributeValue("from", value);
				}
				else
				{
					this.SetAttributeValue("from", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the data import or data migration that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> importsequencenumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Type the ID of the email message that this email activity is a response to.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("inreplyto")]
		public string inreplyto
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("inreplyto");
			}
		}
		
		/// <summary>
		/// Contains a set of internet headers associated to the email message in json format
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("internetmessageheaders")]
		public string internetmessageheaders
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("internetmessageheaders");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("internetmessageheaders", value);
			}
		}
		
		/// <summary>
		/// Information regarding whether the email activity was billed as part of resolving a case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbilled")]
		public System.Nullable<bool> isbilled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isbilled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("isbilled", value);
			}
		}
		
		/// <summary>
		/// For internal use only. Shows whether this email is followed. This is evaluated state which overrides user selection of follow email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isemailfollowed")]
		public System.Nullable<bool> isemailfollowed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isemailfollowed");
			}
		}
		
		/// <summary>
		/// For internal use only. Shows whether this email Reminder is Set.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isemailreminderset")]
		public System.Nullable<bool> isemailreminderset
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isemailreminderset");
			}
		}
		
		/// <summary>
		/// Information regarding whether the activity is a regular activity type or event type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isregularactivity")]
		public System.Nullable<bool> isregularactivity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isregularactivity");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isunsafe")]
		public System.Nullable<int> isunsafe
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("isunsafe");
			}
		}
		
		/// <summary>
		/// Indication if the email was created by a workflow rule.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isworkflowcreated")]
		public System.Nullable<bool> isworkflowcreated
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isworkflowcreated");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("isworkflowcreated", value);
			}
		}
		
		/// <summary>
		/// Contains the date and time stamp of the last on hold time.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastonholdtime")]
		public System.Nullable<System.DateTime> lastonholdtime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastonholdtime");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("lastonholdtime", value);
			}
		}
		
		/// <summary>
		/// Shows the latest date and time when email was opened.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastopenedtime")]
		public System.Nullable<System.DateTime> lastopenedtime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastopenedtime");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("lastopenedtime", value);
			}
		}
		
		/// <summary>
		/// Shows the number of times a link in an email has been clicked.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("linksclickedcount")]
		public System.Nullable<int> linksclickedcount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("linksclickedcount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("linksclickedcount", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the email message. Used only for email that is received.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("messageid")]
		public string messageid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("messageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("messageid", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("messageiddupcheck")]
		[System.ObsoleteAttribute()]
		public System.Nullable<System.Guid> messageiddupcheck
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("messageiddupcheck");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("messageiddupcheck", value);
			}
		}
		
		/// <summary>
		/// MIME type of the email message data.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mimetype")]
		public string mimetype
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("mimetype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("mimetype", value);
			}
		}
		
		/// <summary>
		/// Shows who last updated the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> modifiedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_copilotengaged")]
		public System.Nullable<bool> msdyn_copilotengaged
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_copilotengaged");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_copilotengaged", value);
			}
		}
		
		/// <summary>
		/// Individual email will be sent to each recipient.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_recipientlist")]
		public string msdyn_recipientlist
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_recipientlist");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_recipientlist", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msft_datastate")]
		public virtual msft_DataState? msft_datastate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((msft_DataState?)(EntityOptionSetEnum.GetEnum(this, "msft_datastate")));
			}
		}
		
		/// <summary>
		/// Select the notification code to identify issues with the email recipients or attachments, such as blocked attachments.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("notifications")]
		public virtual Email_notifications? notifications
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Email_notifications?)(EntityOptionSetEnum.GetEnum(this, "notifications")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("notifications", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_communication_type")]
		public Microsoft.Xrm.Sdk.EntityReference ofm_communication_type
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_communication_type");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_communication_type", value);
			}
		}
		
		/// <summary>
		/// The due date on the email created in OFM
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_due_date")]
		public System.Nullable<System.DateTime> ofm_due_date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_due_date");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_due_date", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_expiry_time")]
		public System.Nullable<System.DateTime> ofm_expiry_time
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_expiry_time");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_expiry_time", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_is_read")]
		public System.Nullable<bool> ofm_is_read
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ofm_is_read");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_is_read", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_sent_on")]
		public System.Nullable<System.DateTime> ofm_sent_on
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_sent_on");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_sent_on", value);
			}
		}
		
		/// <summary>
		/// Shows how long, in minutes, that the record was on hold.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onholdtime")]
		public System.Nullable<int> onholdtime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("onholdtime");
			}
		}
		
		/// <summary>
		/// Shows the number of times an email has been opened.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opencount")]
		public System.Nullable<int> opencount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("opencount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("opencount", value);
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> overriddencreatedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference ownerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the business unit that owns the email activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier of the team who owns the email activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference owningteam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who owns the email activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference owninguser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Select the activity that the email is associated with.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentactivityid")]
		public Microsoft.Xrm.Sdk.EntityReference parentactivityid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentactivityid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("parentactivityid", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("postponeemailprocessinguntil")]
		public System.Nullable<System.DateTime> postponeemailprocessinguntil
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("postponeemailprocessinguntil");
			}
		}
		
		/// <summary>
		/// Select the priority so that preferred customers or critical issues are handled quickly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycode")]
		public virtual Email_prioritycode? prioritycode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Email_prioritycode?)(EntityOptionSetEnum.GetEnum(this, "prioritycode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("prioritycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Shows the ID of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> processid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("processid", value);
			}
		}
		
		/// <summary>
		/// Indicates that a read receipt is requested.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("readreceiptrequested")]
		public System.Nullable<bool> readreceiptrequested
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("readreceiptrequested");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("readreceiptrequested", value);
			}
		}
		
		/// <summary>
		/// The Mailbox that Received the Email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("receivingmailboxid")]
		public Microsoft.Xrm.Sdk.EntityReference receivingmailboxid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("receivingmailboxid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("receivingmailboxid", value);
			}
		}
		
		/// <summary>
		/// Choose the record that the email relates to.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		public Microsoft.Xrm.Sdk.EntityReference regardingobjectid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("regardingobjectid", value);
			}
		}
		
		/// <summary>
		/// Enter the related records for the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("related")]
		public System.Collections.Generic.IEnumerable<Microsoft.Xrm.Sdk.Entity> related
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("related");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Microsoft.Xrm.Sdk.Entity>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				if ((value == null))
				{
					this.SetAttributeValue("related", value);
				}
				else
				{
					this.SetAttributeValue("related", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
			}
		}
		
		/// <summary>
		/// Reminder Action Card Id.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reminderactioncardid")]
		public System.Nullable<System.Guid> reminderactioncardid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("reminderactioncardid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("reminderactioncardid", value);
			}
		}
		
		/// <summary>
		/// Shows the number of replies received for an email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("replycount")]
		public System.Nullable<int> replycount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("replycount");
			}
		}
		
		/// <summary>
		/// For internal use only
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reservedforinternaluse")]
		public string reservedforinternaluse
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("reservedforinternaluse");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("reservedforinternaluse", value);
			}
		}
		
		/// <summary>
		/// Scheduled duration of the email activity, specified in minutes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduleddurationminutes")]
		public System.Nullable<int> scheduleddurationminutes
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("scheduleddurationminutes");
			}
		}
		
		/// <summary>
		/// Enter the expected due date and time for the activity to be completed to provide details about when the email will be sent.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledend")]
		public System.Nullable<System.DateTime> scheduledend
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledend");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("scheduledend", value);
			}
		}
		
		/// <summary>
		/// Enter the expected start date and time for the activity to provide details about the tentative time when the email activity must be initiated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledstart")]
		public System.Nullable<System.DateTime> scheduledstart
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledstart");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("scheduledstart", value);
			}
		}
		
		/// <summary>
		/// Sender of the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sender")]
		public string sender
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("sender");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("sender", value);
			}
		}
		
		/// <summary>
		/// Select the mailbox associated with the sender of the email message.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendermailboxid")]
		public Microsoft.Xrm.Sdk.EntityReference sendermailboxid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("sendermailboxid");
			}
		}
		
		/// <summary>
		/// Shows the parent account of the sender of the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendersaccount")]
		public Microsoft.Xrm.Sdk.EntityReference sendersaccount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("sendersaccount");
			}
		}
		
		/// <summary>
		/// Shows the date and time that the email was sent.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("senton")]
		public System.Nullable<System.DateTime> senton
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("senton");
			}
		}
		
		/// <summary>
		/// Unique identifier for the associated service.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceid")]
		public Microsoft.Xrm.Sdk.EntityReference serviceid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("serviceid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("serviceid", value);
			}
		}
		
		/// <summary>
		/// Choose the service level agreement (SLA) that you want to apply to the email record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
		public Microsoft.Xrm.Sdk.EntityReference slaid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slaid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("slaid", value);
			}
		}
		
		/// <summary>
		/// Last SLA that was applied to this email. This field is for internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
		public Microsoft.Xrm.Sdk.EntityReference slainvokedid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slainvokedid");
			}
		}
		
		/// <summary>
		/// Shows the date and time by which the activities are sorted.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sortdate")]
		public System.Nullable<System.DateTime> sortdate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("sortdate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("sortdate", value);
			}
		}
		
		/// <summary>
		/// Shows the ID of the stage.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> stageid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("stageid", value);
			}
		}
		
		/// <summary>
		/// Shows whether the email is open, completed, or canceled. Completed and canceled email is read-only and can't be edited.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual email_statecode? statecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((email_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Select the email's status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual Email_StatusCode? statuscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Email_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Type a subcategory to identify the email type and relate the activity to a specific product, sales region, business group, or other function.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subcategory")]
		public string subcategory
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("subcategory");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("subcategory", value);
			}
		}
		
		/// <summary>
		/// Type a short description about the objective or primary topic of the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subject")]
		public string subject
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("subject");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("subject", value);
			}
		}
		
		/// <summary>
		/// Shows the Microsoft Office Outlook account for the user who submitted the email to Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("submittedby")]
		public string submittedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("submittedby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("submittedby", value);
			}
		}
		
		/// <summary>
		/// For internal use only. ID for template used in email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("templateid")]
		public Microsoft.Xrm.Sdk.EntityReference templateid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("templateid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("templateid", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> timezoneruleversionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Enter the account, contact, lead, queue, or user recipients for the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("to")]
		public System.Collections.Generic.IEnumerable<Microsoft.Xrm.Sdk.Entity> to
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("to");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Microsoft.Xrm.Sdk.Entity>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				if ((value == null))
				{
					this.SetAttributeValue("to", value);
				}
				else
				{
					this.SetAttributeValue("to", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
			}
		}
		
		/// <summary>
		/// Shows the email addresses corresponding to the recipients.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("torecipients")]
		public string torecipients
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("torecipients");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("torecipients", value);
			}
		}
		
		/// <summary>
		/// Shows the tracking token assigned to the email to make sure responses are automatically tracked in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("trackingtoken")]
		public string trackingtoken
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("trackingtoken");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("trackingtoken", value);
			}
		}
		
		/// <summary>
		/// Choose the local currency for the record to make sure budgets are reported in the correct currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string traversedpath
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("traversedpath", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> utcconversiontimezonecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version number of the email message.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> versionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N email_email_CorrelatedActivityId
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("email_email_CorrelatedActivityId", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Email> Referencedemail_email_CorrelatedActivityId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.Email>("email_email_CorrelatedActivityId", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.Email>("email_email_CorrelatedActivityId", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N email_email_parentactivityid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("email_email_parentactivityid", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Email> Referencedemail_email_parentactivityid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.Email>("email_email_parentactivityid", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.Email>("email_email_parentactivityid", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// N:1 Account_Email_EmailSender
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailsender")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Account_Email_EmailSender")]
		public ECC.Core.DataContext.Account Account_Email_EmailSender
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Account>("Account_Email_EmailSender", null);
			}
		}
		
		/// <summary>
		/// N:1 Account_Email_SendersAccount
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendersaccount")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Account_Email_SendersAccount")]
		public ECC.Core.DataContext.Account Account_Email_SendersAccount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Account>("Account_Email_SendersAccount", null);
			}
		}
		
		/// <summary>
		/// N:1 Account_Emails
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Account_Emails")]
		public ECC.Core.DataContext.Account Account_Emails
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Account>("Account_Emails", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.Account>("Account_Emails", null, value);
			}
		}
		
		/// <summary>
		/// N:1 Contact_Email_EmailSender
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailsender")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contact_Email_EmailSender")]
		public ECC.Core.DataContext.Contact Contact_Email_EmailSender
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("Contact_Email_EmailSender", null);
			}
		}
		
		/// <summary>
		/// N:1 Contact_Emails
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contact_Emails")]
		public ECC.Core.DataContext.Contact Contact_Emails
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("Contact_Emails", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.Contact>("Contact_Emails", null, value);
			}
		}
		
		/// <summary>
		/// N:1 email_email_CorrelatedActivityId
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("correlatedactivityid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("email_email_CorrelatedActivityId", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public ECC.Core.DataContext.Email Referencingemail_email_CorrelatedActivityId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Email>("email_email_CorrelatedActivityId", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.Email>("email_email_CorrelatedActivityId", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// N:1 email_email_parentactivityid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentactivityid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("email_email_parentactivityid", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public ECC.Core.DataContext.Email Referencingemail_email_parentactivityid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Email>("email_email_parentactivityid", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.Email>("email_email_parentactivityid", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// N:1 ofm_assistance_request_Emails
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_assistance_request_Emails")]
		public ECC.Core.DataContext.ofm_assistance_request ofm_assistance_request_Emails
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.ofm_assistance_request>("ofm_assistance_request_Emails", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.ofm_assistance_request>("ofm_assistance_request_Emails", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ofm_email_communication_type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_communication_type")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_email_communication_type")]
		public ECC.Core.DataContext.ofm_communication_type ofm_email_communication_type
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.ofm_communication_type>("ofm_email_communication_type", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.ofm_communication_type>("ofm_email_communication_type", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_email
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_email")]
		public ECC.Core.DataContext.Team team_email
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_email", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Email(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["activityid"] = base.Id;
                        break;
                    case "activityid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
	
	/// <summary>
	/// Supplementary Application Record
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_allowance")]
	public partial class ofm_allowance : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ofm_allowance entity
		/// </summary>
		public static partial class Fields
		{
			public const string createdby = "createdby";
			public const string createdbyName = "createdbyname";
			public const string createdon = "createdon";
			public const string createdonbehalfby = "createdonbehalfby";
			public const string createdonbehalfbyName = "createdonbehalfbyname";
			public const string exchangerate = "exchangerate";
			public const string importsequencenumber = "importsequencenumber";
			public const string modifiedby = "modifiedby";
			public const string modifiedbyName = "modifiedbyname";
			public const string modifiedon = "modifiedon";
			public const string modifiedonbehalfby = "modifiedonbehalfby";
			public const string modifiedonbehalfbyName = "modifiedonbehalfbyname";
			public const string ofm_allowance_number = "ofm_allowance_number";
			public const string ofm_allowance_type = "ofm_allowance_type";
			public const string ofm_allowanceid = "ofm_allowanceid";
			public const string Id = "ofm_allowanceid";
			public const string ofm_application = "ofm_application";
			public const string ofm_application_allowance = "ofm_application_allowance";
			public const string ofm_applicationName = "ofm_applicationname";
			public const string ofm_document_allowance = "ofm_document_allowance";
			public const string ofm_eligible = "ofm_eligible";
			public const string ofm_end_date = "ofm_end_date";
			public const string ofm_funding_amount = "ofm_funding_amount";
			public const string ofm_funding_amount_base = "ofm_funding_amount_base";
			public const string ofm_indigenous_description = "ofm_indigenous_description";
			public const string ofm_indigenous_expenses = "ofm_indigenous_expenses";
			public const string ofm_needs_description = "ofm_needs_description";
			public const string ofm_needs_expenses = "ofm_needs_expenses";
			public const string ofm_needs_number_of_children_scd = "ofm_needs_number_of_children_scd";
			public const string ofm_start_date = "ofm_start_date";
			public const string ofm_submittedon = "ofm_submittedon";
			public const string ofm_supplementary_schedule = "ofm_supplementary_schedule";
			public const string ofm_supplementary_scheduleName = "ofm_supplementary_schedulename";
			public const string ofm_supplementaryschedule_allowance = "ofm_supplementaryschedule_allowance";
			public const string ofm_transport_estimated_monthly_km = "ofm_transport_estimated_monthly_km";
			public const string ofm_transport_lease = "ofm_transport_lease";
			public const string ofm_transport_monthly_lease = "ofm_transport_monthly_lease";
			public const string ofm_transport_monthly_lease_base = "ofm_transport_monthly_lease_base";
			public const string ofm_transport_odometer = "ofm_transport_odometer";
			public const string overriddencreatedon = "overriddencreatedon";
			public const string ownerid = "ownerid";
			public const string owneridName = "owneridname";
			public const string owningbusinessunit = "owningbusinessunit";
			public const string owningbusinessunitName = "owningbusinessunitname";
			public const string owningteam = "owningteam";
			public const string owningteamName = "owningteamname";
			public const string owninguser = "owninguser";
			public const string owninguserName = "owningusername";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string team_ofm_allowance = "team_ofm_allowance";
			public const string timezoneruleversionnumber = "timezoneruleversionnumber";
			public const string transactioncurrencyid = "transactioncurrencyid";
			public const string transactioncurrencyidName = "transactioncurrencyidname";
			public const string utcconversiontimezonecode = "utcconversiontimezonecode";
			public const string versionnumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_allowance(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_allowance(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_allowance(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_allowance() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "ofm_allowanceid";
		
		public const string PrimaryNameAttribute = "ofm_allowance_number";
		
		public const string EntitySchemaName = "ofm_allowance";
		
		public const string EntityLogicalName = "ofm_allowance";
		
		public const string EntityLogicalCollectionName = "ofm_allowances";
		
		public const string EntitySetName = "ofm_allowances";
		
		public const int EntityTypeCode = 11455;
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> createdon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the entity with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> exchangerate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> importsequencenumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> modifiedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		/// <summary>
		/// OFM Allowance Record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_allowance_number")]
		public string ofm_allowance_number
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_allowance_number");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_allowance_number", value);
			}
		}
		
		/// <summary>
		/// Allowance Type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_allowance_type")]
		public virtual ecc_allowance_type? ofm_allowance_type
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecc_allowance_type?)(EntityOptionSetEnum.GetEnum(this, "ofm_allowance_type")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_allowance_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_allowanceid")]
		public System.Nullable<System.Guid> ofm_allowanceid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_allowanceid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_allowanceid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_allowanceid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ofm_allowanceid = value;
			}
		}
		
		/// <summary>
		/// The associated Application on the allowance record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application")]
		public Microsoft.Xrm.Sdk.EntityReference ofm_application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_application");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_application", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_eligible")]
		public System.Nullable<bool> ofm_eligible
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ofm_eligible");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_eligible", value);
			}
		}
		
		/// <summary>
		/// End Date
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_end_date")]
		public System.Nullable<System.DateTime> ofm_end_date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_end_date");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_end_date", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_funding_amount")]
		public Microsoft.Xrm.Sdk.Money ofm_funding_amount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_funding_amount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_funding_amount", value);
			}
		}
		
		/// <summary>
		/// Value of the Funding Amount in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_funding_amount_base")]
		public Microsoft.Xrm.Sdk.Money ofm_funding_amount_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_funding_amount_base");
			}
		}
		
		/// <summary>
		/// Please describe how you intend to use this funding (IP)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_indigenous_description")]
		public string ofm_indigenous_description
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_indigenous_description");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_indigenous_description", value);
			}
		}
		
		/// <summary>
		/// Select the option(s) on how you intend to use this funding (IP)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_indigenous_expenses")]
		public virtual System.Collections.Generic.IEnumerable<ecc_indigenous_programming_expenses> ofm_indigenous_expenses
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<ecc_indigenous_programming_expenses>(this, "ofm_indigenous_expenses");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_indigenous_expenses", EntityOptionSetEnum.GetMultiEnum(this, "ofm_indigenous_expenses", value));
			}
		}
		
		/// <summary>
		/// Please describe how you intend to use this funding (SNs)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_needs_description")]
		public string ofm_needs_description
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_needs_description");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_needs_description", value);
			}
		}
		
		/// <summary>
		/// Select the option(s) on how you intend to use this funding (SN)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_needs_expenses")]
		public virtual System.Collections.Generic.IEnumerable<ecc_support_needs_expenses> ofm_needs_expenses
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<ecc_support_needs_expenses>(this, "ofm_needs_expenses");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_needs_expenses", EntityOptionSetEnum.GetMultiEnum(this, "ofm_needs_expenses", value));
			}
		}
		
		/// <summary>
		/// Number of children for SCD
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_needs_number_of_children_scd")]
		public System.Nullable<int> ofm_needs_number_of_children_scd
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_needs_number_of_children_scd");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_needs_number_of_children_scd", value);
			}
		}
		
		/// <summary>
		/// Start Date
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_start_date")]
		public System.Nullable<System.DateTime> ofm_start_date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_start_date");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_start_date", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_submittedon")]
		public System.Nullable<System.DateTime> ofm_submittedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_submittedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_submittedon", value);
			}
		}
		
		/// <summary>
		/// The associated Supplementary Schedule on the allowance record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supplementary_schedule")]
		public Microsoft.Xrm.Sdk.EntityReference ofm_supplementary_schedule
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_supplementary_schedule");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_supplementary_schedule", value);
			}
		}
		
		/// <summary>
		/// Estimated Monthly KM
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_transport_estimated_monthly_km")]
		public System.Nullable<int> ofm_transport_estimated_monthly_km
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_transport_estimated_monthly_km");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_transport_estimated_monthly_km", value);
			}
		}
		
		/// <summary>
		/// Lease
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_transport_lease")]
		public virtual ecc_ynempty? ofm_transport_lease
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_transport_lease")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_transport_lease", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Monthly Lease
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_transport_monthly_lease")]
		public Microsoft.Xrm.Sdk.Money ofm_transport_monthly_lease
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_transport_monthly_lease");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_transport_monthly_lease", value);
			}
		}
		
		/// <summary>
		/// Value of the Monthly Lease in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_transport_monthly_lease_base")]
		public Microsoft.Xrm.Sdk.Money ofm_transport_monthly_lease_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_transport_monthly_lease_base");
			}
		}
		
		/// <summary>
		/// Odometer
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_transport_odometer")]
		public System.Nullable<int> ofm_transport_odometer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_transport_odometer");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_transport_odometer", value);
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> overriddencreatedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference ownerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference owningteam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference owninguser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Allowance
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual ofm_allowance_statecode? statecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_allowance_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Reason for the status of the Allowance
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ofm_allowance_StatusCode? statuscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_allowance_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> timezoneruleversionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the currency associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> utcconversiontimezonecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> versionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N ofm_document_allowance
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_document_allowance")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_document> ofm_document_allowance
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_document>("ofm_document_allowance", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_document>("ofm_document_allowance", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ofm_application_allowance
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_application_allowance")]
		public ECC.Core.DataContext.ofm_application ofm_application_allowance
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_application_allowance", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_application_allowance", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ofm_supplementaryschedule_allowance
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supplementary_schedule")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_supplementaryschedule_allowance")]
		public ECC.Core.DataContext.ofm_supplementary_schedule ofm_supplementaryschedule_allowance
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.ofm_supplementary_schedule>("ofm_supplementaryschedule_allowance", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.ofm_supplementary_schedule>("ofm_supplementaryschedule_allowance", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_ofm_allowance
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_allowance")]
		public ECC.Core.DataContext.Team team_ofm_allowance
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_allowance", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_allowance(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_allowanceid"] = base.Id;
                        break;
                    case "ofm_allowanceid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
	
	/// <summary>
	/// New and renewal application record
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_application")]
	public partial class ofm_application : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ofm_application entity
		/// </summary>
		public static partial class Fields
		{
			public const string createdby = "createdby";
			public const string createdbyName = "createdbyname";
			public const string createdon = "createdon";
			public const string createdonbehalfby = "createdonbehalfby";
			public const string createdonbehalfbyName = "createdonbehalfbyname";
			public const string exchangerate = "exchangerate";
			public const string importsequencenumber = "importsequencenumber";
			public const string modifiedby = "modifiedby";
			public const string modifiedbyName = "modifiedbyname";
			public const string modifiedon = "modifiedon";
			public const string modifiedonbehalfby = "modifiedonbehalfby";
			public const string modifiedonbehalfbyName = "modifiedonbehalfbyname";
			public const string ofm_Application = "ofm_application";
			public const string ofm_application_allowance = "ofm_application_allowance";
			public const string ofm_application_funding = "ofm_application_funding";
			public const string ofm_application_type = "ofm_application_type";
			public const string ofm_applicationid = "ofm_applicationid";
			public const string Id = "ofm_applicationid";
			public const string ofm_contact = "ofm_contact";
			public const string ofm_contact_applications = "ofm_contact_applications";
			public const string ofm_contactName = "ofm_contactname";
			public const string ofm_costs_applicable_fee = "ofm_costs_applicable_fee";
			public const string ofm_costs_applicable_fee_base = "ofm_costs_applicable_fee_base";
			public const string ofm_costs_facility_type = "ofm_costs_facility_type";
			public const string ofm_costs_furniture_equipment = "ofm_costs_furniture_equipment";
			public const string ofm_costs_furniture_equipment_base = "ofm_costs_furniture_equipment_base";
			public const string ofm_costs_maintenance_repairs = "ofm_costs_maintenance_repairs";
			public const string ofm_costs_maintenance_repairs_base = "ofm_costs_maintenance_repairs_base";
			public const string ofm_costs_mortgage = "ofm_costs_mortgage";
			public const string ofm_costs_mortgage_base = "ofm_costs_mortgage_base";
			public const string ofm_costs_property_insurance = "ofm_costs_property_insurance";
			public const string ofm_costs_property_insurance_base = "ofm_costs_property_insurance_base";
			public const string ofm_costs_property_municipal_tax = "ofm_costs_property_municipal_tax";
			public const string ofm_costs_property_municipal_tax_base = "ofm_costs_property_municipal_tax_base";
			public const string ofm_costs_rent_lease = "ofm_costs_rent_lease";
			public const string ofm_costs_rent_lease_base = "ofm_costs_rent_lease_base";
			public const string ofm_costs_strata_fee = "ofm_costs_strata_fee";
			public const string ofm_costs_strata_fee_base = "ofm_costs_strata_fee_base";
			public const string ofm_costs_supplies = "ofm_costs_supplies";
			public const string ofm_costs_supplies_base = "ofm_costs_supplies_base";
			public const string ofm_costs_upkeep_labour_supplies = "ofm_costs_upkeep_labour_supplies";
			public const string ofm_costs_upkeep_labour_supplies_base = "ofm_costs_upkeep_labour_supplies_base";
			public const string ofm_costs_utilities = "ofm_costs_utilities";
			public const string ofm_costs_utilities_base = "ofm_costs_utilities_base";
			public const string ofm_costs_year_facility_costs = "ofm_costs_year_facility_costs";
			public const string ofm_costs_year_facility_costs_base = "ofm_costs_year_facility_costs_base";
			public const string ofm_costs_yearly_operating_costs = "ofm_costs_yearly_operating_costs";
			public const string ofm_costs_yearly_operating_costs_base = "ofm_costs_yearly_operating_costs_base";
			public const string ofm_document_application = "ofm_document_application";
			public const string ofm_facility = "ofm_facility";
			public const string ofm_facility_application = "ofm_facility_application";
			public const string ofm_facilityName = "ofm_facilityname";
			public const string ofm_funding_number_base = "ofm_funding_number_base";
			public const string ofm_organization = "ofm_organization";
			public const string ofm_organization_application = "ofm_organization_application";
			public const string ofm_organizationName = "ofm_organizationname";
			public const string ofm_provider_type = "ofm_provider_type";
			public const string ofm_request_application = "ofm_request_application";
			public const string ofm_secondary_contact = "ofm_secondary_contact";
			public const string ofm_secondary_contact_application = "ofm_secondary_contact_application";
			public const string ofm_secondary_contactName = "ofm_secondary_contactname";
			public const string ofm_staff_ec_educator_assistant_ft = "ofm_staff_ec_educator_assistant_ft";
			public const string ofm_staff_ec_educator_assistant_pt = "ofm_staff_ec_educator_assistant_pt";
			public const string ofm_staff_ec_educator_ft = "ofm_staff_ec_educator_ft";
			public const string ofm_staff_ec_educator_pt = "ofm_staff_ec_educator_pt";
			public const string ofm_staff_infant_ec_educator_ft = "ofm_staff_infant_ec_educator_ft";
			public const string ofm_staff_infant_ec_educator_pt = "ofm_staff_infant_ec_educator_pt";
			public const string ofm_staff_responsible_adult_ft = "ofm_staff_responsible_adult_ft";
			public const string ofm_staff_responsible_adult_pt = "ofm_staff_responsible_adult_pt";
			public const string ofm_summary_declaration_a_status = "ofm_summary_declaration_a_status";
			public const string ofm_summary_declaration_b_status = "ofm_summary_declaration_b_status";
			public const string ofm_summary_ministry_last_updated = "ofm_summary_ministry_last_updated";
			public const string ofm_summary_ownership = "ofm_summary_ownership";
			public const string ofm_summary_provider_last_updated = "ofm_summary_provider_last_updated";
			public const string ofm_summary_signing_authority = "ofm_summary_signing_authority";
			public const string ofm_summary_submittedby = "ofm_summary_submittedby";
			public const string ofm_summary_submittedon = "ofm_summary_submittedon";
			public const string overriddencreatedon = "overriddencreatedon";
			public const string ownerid = "ownerid";
			public const string owneridName = "owneridname";
			public const string owningbusinessunit = "owningbusinessunit";
			public const string owningbusinessunitName = "owningbusinessunitname";
			public const string owningteam = "owningteam";
			public const string owningteamName = "owningteamname";
			public const string owninguser = "owninguser";
			public const string owninguserName = "owningusername";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string team_ofm_application = "team_ofm_application";
			public const string timezoneruleversionnumber = "timezoneruleversionnumber";
			public const string transactioncurrencyid = "transactioncurrencyid";
			public const string transactioncurrencyidName = "transactioncurrencyidname";
			public const string utcconversiontimezonecode = "utcconversiontimezonecode";
			public const string versionnumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_application(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_application(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_application(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_application() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "ofm_applicationid";
		
		public const string PrimaryNameAttribute = "ofm_application";
		
		public const string EntitySchemaName = "ofm_application";
		
		public const string EntityLogicalName = "ofm_application";
		
		public const string EntityLogicalCollectionName = "ofm_applications";
		
		public const string EntitySetName = "ofm_applications";
		
		public const int EntityTypeCode = 11413;
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> createdon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the entity with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> exchangerate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> importsequencenumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> modifiedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		/// <summary>
		/// OFM Application for both new and renewals
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application")]
		public string ofm_Application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_application");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_application", value);
			}
		}
		
		/// <summary>
		/// Application Type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application_type")]
		public virtual ecc_application_type? ofm_application_type
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecc_application_type?)(EntityOptionSetEnum.GetEnum(this, "ofm_application_type")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_application_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_applicationid")]
		public System.Nullable<System.Guid> ofm_applicationid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_applicationid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_applicationid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_applicationid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ofm_applicationid = value;
			}
		}
		
		/// <summary>
		/// The primary contact on the application
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_contact")]
		public Microsoft.Xrm.Sdk.EntityReference ofm_contact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_contact");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_contact", value);
			}
		}
		
		/// <summary>
		/// Fee (If Applicable)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_applicable_fee")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_applicable_fee
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_applicable_fee");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_costs_applicable_fee", value);
			}
		}
		
		/// <summary>
		/// Value of the Fee (if applicable) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_applicable_fee_base")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_applicable_fee_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_applicable_fee_base");
			}
		}
		
		/// <summary>
		/// Facility Type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_facility_type")]
		public virtual ofm_facility_type? ofm_costs_facility_type
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_facility_type?)(EntityOptionSetEnum.GetEnum(this, "ofm_costs_facility_type")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_costs_facility_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Furniture and Equipment
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_furniture_equipment")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_furniture_equipment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_furniture_equipment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_costs_furniture_equipment", value);
			}
		}
		
		/// <summary>
		/// Value of the Furniture and Equipment in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_furniture_equipment_base")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_furniture_equipment_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_furniture_equipment_base");
			}
		}
		
		/// <summary>
		/// Maintenance and repairs
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_maintenance_repairs")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_maintenance_repairs
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_maintenance_repairs");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_costs_maintenance_repairs", value);
			}
		}
		
		/// <summary>
		/// Value of the Maintenance and repairs in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_maintenance_repairs_base")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_maintenance_repairs_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_maintenance_repairs_base");
			}
		}
		
		/// <summary>
		/// Mortgage
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_mortgage")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_mortgage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_mortgage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_costs_mortgage", value);
			}
		}
		
		/// <summary>
		/// Value of the Mortgage in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_mortgage_base")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_mortgage_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_mortgage_base");
			}
		}
		
		/// <summary>
		/// Property Insurance
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_property_insurance")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_property_insurance
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_property_insurance");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_costs_property_insurance", value);
			}
		}
		
		/// <summary>
		/// Value of the Property Insurance in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_property_insurance_base")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_property_insurance_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_property_insurance_base");
			}
		}
		
		/// <summary>
		/// Property/Municipal Tax
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_property_municipal_tax")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_property_municipal_tax
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_property_municipal_tax");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_costs_property_municipal_tax", value);
			}
		}
		
		/// <summary>
		/// Value of the Property/municipal tax in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_property_municipal_tax_base")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_property_municipal_tax_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_property_municipal_tax_base");
			}
		}
		
		/// <summary>
		/// Rent/Lease
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_rent_lease")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_rent_lease
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_rent_lease");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_costs_rent_lease", value);
			}
		}
		
		/// <summary>
		/// Value of the Rent/Lease in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_rent_lease_base")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_rent_lease_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_rent_lease_base");
			}
		}
		
		/// <summary>
		/// Strata Fees
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_strata_fee")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_strata_fee
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_strata_fee");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_costs_strata_fee", value);
			}
		}
		
		/// <summary>
		/// Value of the Strata fees in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_strata_fee_base")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_strata_fee_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_strata_fee_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_supplies")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_supplies
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_supplies");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_costs_supplies", value);
			}
		}
		
		/// <summary>
		/// Value of the Supplies in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_supplies_base")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_supplies_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_supplies_base");
			}
		}
		
		/// <summary>
		/// Upkeep and labour
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_upkeep_labour_supplies")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_upkeep_labour_supplies
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_upkeep_labour_supplies");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_costs_upkeep_labour_supplies", value);
			}
		}
		
		/// <summary>
		/// Value of the Upkeep and labour in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_upkeep_labour_supplies_base")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_upkeep_labour_supplies_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_upkeep_labour_supplies_base");
			}
		}
		
		/// <summary>
		/// Utilities
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_utilities")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_utilities
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_utilities");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_costs_utilities", value);
			}
		}
		
		/// <summary>
		/// Value of the Utilities in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_utilities_base")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_utilities_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_utilities_base");
			}
		}
		
		/// <summary>
		/// Yearly Facility Costs
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_year_facility_costs")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_year_facility_costs
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_year_facility_costs");
			}
		}
		
		/// <summary>
		/// Value of the Year facility costs in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_year_facility_costs_base")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_year_facility_costs_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_year_facility_costs_base");
			}
		}
		
		/// <summary>
		/// Yearly Operating Costs
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_yearly_operating_costs")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_yearly_operating_costs
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_yearly_operating_costs");
			}
		}
		
		/// <summary>
		/// Value of the Yearly operating costs in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_costs_yearly_operating_costs_base")]
		public Microsoft.Xrm.Sdk.Money ofm_costs_yearly_operating_costs_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_costs_yearly_operating_costs_base");
			}
		}
		
		/// <summary>
		/// The associated facility on the application
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
		public Microsoft.Xrm.Sdk.EntityReference ofm_facility
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_facility");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_facility", value);
			}
		}
		
		/// <summary>
		/// The base funding agreement number without the version
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_funding_number_base")]
		public string ofm_funding_number_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_funding_number_base");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_funding_number_base", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for Organization-Facility associated with Application.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_organization")]
		public Microsoft.Xrm.Sdk.EntityReference ofm_organization
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_organization");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_organization", value);
			}
		}
		
		/// <summary>
		/// Provider Type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_provider_type")]
		public virtual ecc_provider_type? ofm_provider_type
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecc_provider_type?)(EntityOptionSetEnum.GetEnum(this, "ofm_provider_type")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_provider_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Unique identifier for Contact associated with Application.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_secondary_contact")]
		public Microsoft.Xrm.Sdk.EntityReference ofm_secondary_contact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_secondary_contact");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_secondary_contact", value);
			}
		}
		
		/// <summary>
		/// Early Childhood Educator Assistant
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_staff_ec_educator_assistant_ft")]
		public System.Nullable<int> ofm_staff_ec_educator_assistant_ft
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_staff_ec_educator_assistant_ft");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_staff_ec_educator_assistant_ft", value);
			}
		}
		
		/// <summary>
		/// Early Childhood Educator Assistant
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_staff_ec_educator_assistant_pt")]
		public System.Nullable<int> ofm_staff_ec_educator_assistant_pt
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_staff_ec_educator_assistant_pt");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_staff_ec_educator_assistant_pt", value);
			}
		}
		
		/// <summary>
		/// Early Childhood Educator
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_staff_ec_educator_ft")]
		public System.Nullable<int> ofm_staff_ec_educator_ft
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_staff_ec_educator_ft");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_staff_ec_educator_ft", value);
			}
		}
		
		/// <summary>
		/// Early Childhood Educator
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_staff_ec_educator_pt")]
		public System.Nullable<int> ofm_staff_ec_educator_pt
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_staff_ec_educator_pt");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_staff_ec_educator_pt", value);
			}
		}
		
		/// <summary>
		/// Infant/Toddler Early Childhood Educator
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_staff_infant_ec_educator_ft")]
		public System.Nullable<int> ofm_staff_infant_ec_educator_ft
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_staff_infant_ec_educator_ft");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_staff_infant_ec_educator_ft", value);
			}
		}
		
		/// <summary>
		/// Infant/Toddler Early Childhood Educator
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_staff_infant_ec_educator_pt")]
		public System.Nullable<int> ofm_staff_infant_ec_educator_pt
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_staff_infant_ec_educator_pt");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_staff_infant_ec_educator_pt", value);
			}
		}
		
		/// <summary>
		/// Responsible Adult
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_staff_responsible_adult_ft")]
		public System.Nullable<int> ofm_staff_responsible_adult_ft
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_staff_responsible_adult_ft");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_staff_responsible_adult_ft", value);
			}
		}
		
		/// <summary>
		/// Responsible Adult
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_staff_responsible_adult_pt")]
		public System.Nullable<int> ofm_staff_responsible_adult_pt
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_staff_responsible_adult_pt");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_staff_responsible_adult_pt", value);
			}
		}
		
		/// <summary>
		/// Declaration A Status
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_summary_declaration_a_status")]
		public virtual ecc_ynempty? ofm_summary_declaration_a_status
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_summary_declaration_a_status")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_summary_declaration_a_status", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Declaration B Status
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_summary_declaration_b_status")]
		public virtual ecc_ynempty? ofm_summary_declaration_b_status
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_summary_declaration_b_status")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_summary_declaration_b_status", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Last updated by ministry
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_summary_ministry_last_updated")]
		public System.Nullable<System.DateTime> ofm_summary_ministry_last_updated
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_summary_ministry_last_updated");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_summary_ministry_last_updated", value);
			}
		}
		
		/// <summary>
		/// Ownership
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_summary_ownership")]
		public virtual ecc_Ownership? ofm_summary_ownership
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecc_Ownership?)(EntityOptionSetEnum.GetEnum(this, "ofm_summary_ownership")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_summary_ownership", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Last updated by provider
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_summary_provider_last_updated")]
		public System.Nullable<System.DateTime> ofm_summary_provider_last_updated
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_summary_provider_last_updated");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_summary_provider_last_updated", value);
			}
		}
		
		/// <summary>
		/// Signing Authority
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_summary_signing_authority")]
		public string ofm_summary_signing_authority
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_summary_signing_authority");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_summary_signing_authority", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_summary_submittedby")]
		public string ofm_summary_submittedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_summary_submittedby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_summary_submittedby", value);
			}
		}
		
		/// <summary>
		/// The date the application was subbmitted
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_summary_submittedon")]
		public System.Nullable<System.DateTime> ofm_summary_submittedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_summary_submittedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_summary_submittedon", value);
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> overriddencreatedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference ownerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference owningteam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference owninguser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Application
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual ofm_application_statecode? statecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_application_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Reason for the status of the Application
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ofm_application_StatusCode? statuscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_application_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> timezoneruleversionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the currency associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> utcconversiontimezonecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> versionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N ofm_application_allowance
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_application_allowance")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_allowance> ofm_application_allowance
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_allowance>("ofm_application_allowance", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_allowance>("ofm_application_allowance", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ofm_application_funding
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_application_funding")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_funding> ofm_application_funding
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_funding>("ofm_application_funding", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_funding>("ofm_application_funding", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ofm_document_application
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_document_application")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_document> ofm_document_application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_document>("ofm_document_application", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_document>("ofm_document_application", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ofm_request_application
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_request_application")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_assistance_request> ofm_request_application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_assistance_request>("ofm_request_application", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_assistance_request>("ofm_request_application", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ofm_contact_applications
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_contact")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_contact_applications")]
		public ECC.Core.DataContext.Contact ofm_contact_applications
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_contact_applications", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_contact_applications", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ofm_facility_application
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_facility_application")]
		public ECC.Core.DataContext.Account ofm_facility_application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Account>("ofm_facility_application", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.Account>("ofm_facility_application", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ofm_organization_application
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_organization")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_organization_application")]
		public ECC.Core.DataContext.Account ofm_organization_application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Account>("ofm_organization_application", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.Account>("ofm_organization_application", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ofm_secondary_contact_application
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_secondary_contact")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_secondary_contact_application")]
		public ECC.Core.DataContext.Contact ofm_secondary_contact_application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_secondary_contact_application", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_secondary_contact_application", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_ofm_application
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_application")]
		public ECC.Core.DataContext.Team team_ofm_application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_application", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_application(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_applicationid"] = base.Id;
                        break;
                    case "ofm_applicationid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_assistance_request")]
	public partial class ofm_assistance_request : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ofm_assistance_request entity
		/// </summary>
		public static partial class Fields
		{
			public const string createdby = "createdby";
			public const string createdbyName = "createdbyname";
			public const string createdon = "createdon";
			public const string createdonbehalfby = "createdonbehalfby";
			public const string createdonbehalfbyName = "createdonbehalfbyname";
			public const string importsequencenumber = "importsequencenumber";
			public const string modifiedby = "modifiedby";
			public const string modifiedbyName = "modifiedbyname";
			public const string modifiedon = "modifiedon";
			public const string modifiedonbehalfby = "modifiedonbehalfby";
			public const string modifiedonbehalfbyName = "modifiedonbehalfbyname";
			public const string ofm_assistance_request_category = "ofm_assistance_request_category";
			public const string ofm_assistance_request_contact = "ofm_assistance_request_contact";
			public const string ofm_assistance_request_Emails = "ofm_assistance_request_Emails";
			public const string ofm_assistance_requestid = "ofm_assistance_requestid";
			public const string Id = "ofm_assistance_requestid";
			public const string ofm_closing_reason = "ofm_closing_reason";
			public const string ofm_contact = "ofm_contact";
			public const string ofm_contact_method = "ofm_contact_method";
			public const string ofm_contactName = "ofm_contactname";
			public const string ofm_conversation_request = "ofm_conversation_request";
			public const string ofm_document_assistance_request = "ofm_document_assistance_request";
			public const string ofm_facility_request_request = "ofm_facility_request_request";
			public const string ofm_internal_comment = "ofm_internal_comment";
			public const string ofm_is_read = "ofm_is_read";
			public const string ofm_last_action_time = "ofm_last_action_time";
			public const string ofm_last_opened_time = "ofm_last_opened_time";
			public const string ofm_name = "ofm_name";
			public const string ofm_regardingid = "ofm_regardingid";
			public const string ofm_regardingidName = "ofm_regardingidname";
			public const string ofm_request_application = "ofm_request_application";
			public const string ofm_request_category = "ofm_request_category";
			public const string ofm_request_categoryName = "ofm_request_categoryname";
			public const string ofm_request_contact = "ofm_request_contact";
			public const string ofm_request_description = "ofm_request_description";
			public const string ofm_subject = "ofm_subject";
			public const string ofm_submission_time = "ofm_submission_time";
			public const string ofm_telephone = "ofm_telephone";
			public const string overriddencreatedon = "overriddencreatedon";
			public const string ownerid = "ownerid";
			public const string owneridName = "owneridname";
			public const string owningbusinessunit = "owningbusinessunit";
			public const string owningbusinessunitName = "owningbusinessunitname";
			public const string owningteam = "owningteam";
			public const string owningteamName = "owningteamname";
			public const string owninguser = "owninguser";
			public const string owninguserName = "owningusername";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string team_ofm_assistance_request = "team_ofm_assistance_request";
			public const string timezoneruleversionnumber = "timezoneruleversionnumber";
			public const string utcconversiontimezonecode = "utcconversiontimezonecode";
			public const string versionnumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_assistance_request(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_assistance_request(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_assistance_request(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_assistance_request() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "ofm_assistance_requestid";
		
		public const string PrimaryNameAttribute = "ofm_name";
		
		public const string EntitySchemaName = "ofm_assistance_request";
		
		public const string EntityLogicalName = "ofm_assistance_request";
		
		public const string EntityLogicalCollectionName = "ofm_assistance_requests";
		
		public const string EntitySetName = "ofm_assistance_requests";
		
		public const int EntityTypeCode = 11366;
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> createdon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> importsequencenumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> modifiedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_assistance_requestid")]
		public System.Nullable<System.Guid> ofm_assistance_requestid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_assistance_requestid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_assistance_requestid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_assistance_requestid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ofm_assistance_requestid = value;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_closing_reason")]
		public string ofm_closing_reason
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_closing_reason");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_closing_reason", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_contact")]
		public Microsoft.Xrm.Sdk.EntityReference ofm_contact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_contact");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_contact", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_contact_method")]
		public virtual ofm_assistance_request_ofm_contact_method? ofm_contact_method
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_assistance_request_ofm_contact_method?)(EntityOptionSetEnum.GetEnum(this, "ofm_contact_method")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_contact_method", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_internal_comment")]
		public string ofm_internal_comment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_internal_comment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_internal_comment", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_is_read")]
		public System.Nullable<bool> ofm_is_read
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ofm_is_read");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_is_read", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_last_action_time")]
		public System.Nullable<System.DateTime> ofm_last_action_time
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_last_action_time");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_last_action_time", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_last_opened_time")]
		public System.Nullable<System.DateTime> ofm_last_opened_time
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_last_opened_time");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_last_opened_time", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
		public string ofm_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_name", value);
			}
		}
		
		/// <summary>
		/// Regarding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
		public Microsoft.Xrm.Sdk.EntityReference ofm_regardingid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_regardingid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_regardingid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_request_category")]
		public Microsoft.Xrm.Sdk.EntityReference ofm_request_category
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_request_category");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_request_category", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_request_description")]
		public string ofm_request_description
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_request_description");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_request_description", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_subject")]
		public string ofm_subject
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_subject");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_subject", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_submission_time")]
		public System.Nullable<System.DateTime> ofm_submission_time
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_submission_time");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_submission_time", value);
			}
		}
		
		/// <summary>
		/// Secondary telephone number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_telephone")]
		public string ofm_telephone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_telephone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_telephone", value);
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> overriddencreatedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference ownerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference owningteam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference owninguser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Assistance Request
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual ofm_assistance_request_statecode? statecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_assistance_request_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Reason for the status of the Assistance Request
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ofm_assistance_request_StatusCode? statuscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_assistance_request_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> timezoneruleversionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> utcconversiontimezonecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> versionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N ofm_assistance_request_Emails
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_assistance_request_Emails")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Email> ofm_assistance_request_Emails
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.Email>("ofm_assistance_request_Emails", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.Email>("ofm_assistance_request_Emails", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ofm_conversation_request
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_conversation_request")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_conversation> ofm_conversation_request
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_conversation>("ofm_conversation_request", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_conversation>("ofm_conversation_request", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ofm_document_assistance_request
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_document_assistance_request")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_document> ofm_document_assistance_request
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_document>("ofm_document_assistance_request", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_document>("ofm_document_assistance_request", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ofm_facility_request_request
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_facility_request_request")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_facility_request> ofm_facility_request_request
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_facility_request>("ofm_facility_request_request", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_facility_request>("ofm_facility_request_request", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ofm_assistance_request_category
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_request_category")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_assistance_request_category")]
		public ECC.Core.DataContext.ofm_request_category ofm_assistance_request_category
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.ofm_request_category>("ofm_assistance_request_category", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.ofm_request_category>("ofm_assistance_request_category", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ofm_assistance_request_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_contact")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_assistance_request_contact")]
		public ECC.Core.DataContext.Contact ofm_assistance_request_contact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_assistance_request_contact", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_assistance_request_contact", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ofm_request_application
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_request_application")]
		public ECC.Core.DataContext.ofm_application ofm_request_application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_request_application", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_request_application", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ofm_request_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_request_contact")]
		public ECC.Core.DataContext.Contact ofm_request_contact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_request_contact", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_request_contact", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_ofm_assistance_request
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_assistance_request")]
		public ECC.Core.DataContext.Team team_ofm_assistance_request
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_assistance_request", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_assistance_request(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_assistance_requestid"] = base.Id;
                        break;
                    case "ofm_assistance_requestid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
	
	/// <summary>
	/// The purpose of this table is to store facility permission records for a contact
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_bceid_facility")]
	public partial class ofm_bceid_facility : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ofm_bceid_facility entity
		/// </summary>
		public static partial class Fields
		{
			public const string createdby = "createdby";
			public const string createdbyName = "createdbyname";
			public const string createdon = "createdon";
			public const string createdonbehalfby = "createdonbehalfby";
			public const string createdonbehalfbyName = "createdonbehalfbyname";
			public const string importsequencenumber = "importsequencenumber";
			public const string modifiedby = "modifiedby";
			public const string modifiedbyName = "modifiedbyname";
			public const string modifiedon = "modifiedon";
			public const string modifiedonbehalfby = "modifiedonbehalfby";
			public const string modifiedonbehalfbyName = "modifiedonbehalfbyname";
			public const string ofm_bceid = "ofm_bceid";
			public const string ofm_bceid_facilityid = "ofm_bceid_facilityid";
			public const string Id = "ofm_bceid_facilityid";
			public const string ofm_bceidName = "ofm_bceidname";
			public const string ofm_business_bceid_facility = "ofm_business_bceid_facility";
			public const string ofm_facility = "ofm_facility";
			public const string ofm_facility_business_bceid = "ofm_facility_business_bceid";
			public const string ofm_facilityName = "ofm_facilityname";
			public const string ofm_is_additional_contact = "ofm_is_additional_contact";
			public const string ofm_is_expense_authority = "ofm_is_expense_authority";
			public const string ofm_name = "ofm_name";
			public const string ofm_portal_access = "ofm_portal_access";
			public const string overriddencreatedon = "overriddencreatedon";
			public const string ownerid = "ownerid";
			public const string owneridName = "owneridname";
			public const string owningbusinessunit = "owningbusinessunit";
			public const string owningbusinessunitName = "owningbusinessunitname";
			public const string owningteam = "owningteam";
			public const string owningteamName = "owningteamname";
			public const string owninguser = "owninguser";
			public const string owninguserName = "owningusername";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string team_ofm_bceid_facility = "team_ofm_bceid_facility";
			public const string timezoneruleversionnumber = "timezoneruleversionnumber";
			public const string utcconversiontimezonecode = "utcconversiontimezonecode";
			public const string versionnumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_bceid_facility(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_bceid_facility(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_bceid_facility(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		public const string AlternateKeys = "ofm_bceid,ofm_facility";
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_bceid_facility() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "ofm_bceid_facilityid";
		
		public const string PrimaryNameAttribute = "ofm_name";
		
		public const string EntitySchemaName = "ofm_bceid_facility";
		
		public const string EntityLogicalName = "ofm_bceid_facility";
		
		public const string EntityLogicalCollectionName = "ofm_bceid_facilities";
		
		public const string EntitySetName = "ofm_bceid_facilities";
		
		public const int EntityTypeCode = 11243;
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> createdon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> importsequencenumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> modifiedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_bceid")]
		public Microsoft.Xrm.Sdk.EntityReference ofm_bceid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_bceid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_bceid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_bceid_facilityid")]
		public System.Nullable<System.Guid> ofm_bceid_facilityid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_bceid_facilityid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_bceid_facilityid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_bceid_facilityid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ofm_bceid_facilityid = value;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
		public Microsoft.Xrm.Sdk.EntityReference ofm_facility
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_facility");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_facility", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_is_additional_contact")]
		public System.Nullable<bool> ofm_is_additional_contact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ofm_is_additional_contact");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_is_additional_contact", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_is_expense_authority")]
		public System.Nullable<bool> ofm_is_expense_authority
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ofm_is_expense_authority");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_is_expense_authority", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
		public string ofm_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_name", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_portal_access")]
		public System.Nullable<bool> ofm_portal_access
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ofm_portal_access");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_portal_access", value);
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> overriddencreatedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference ownerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference owningteam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference owninguser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the BCeID Facility
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual ofm_bceid_facility_statecode? statecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_bceid_facility_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Reason for the status of the BCeID Facility
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ofm_bceid_facility_StatusCode? statuscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_bceid_facility_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> timezoneruleversionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> utcconversiontimezonecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> versionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// N:1 ofm_business_bceid_facility
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_business_bceid_facility")]
		public ECC.Core.DataContext.Account ofm_business_bceid_facility
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Account>("ofm_business_bceid_facility", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.Account>("ofm_business_bceid_facility", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ofm_facility_business_bceid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_bceid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_facility_business_bceid")]
		public ECC.Core.DataContext.Contact ofm_facility_business_bceid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_facility_business_bceid", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.Contact>("ofm_facility_business_bceid", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_ofm_bceid_facility
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_bceid_facility")]
		public ECC.Core.DataContext.Team team_ofm_bceid_facility
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_bceid_facility", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_bceid_facility(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_bceid_facilityid"] = base.Id;
                        break;
                    case "ofm_bceid_facilityid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
	
	/// <summary>
	/// CCLR Ratio
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_cclr_ratio")]
	public partial class ofm_cclr_ratio : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ofm_cclr_ratio entity
		/// </summary>
		public static partial class Fields
		{
			public const string createdby = "createdby";
			public const string createdbyName = "createdbyname";
			public const string createdon = "createdon";
			public const string createdonbehalfby = "createdonbehalfby";
			public const string createdonbehalfbyName = "createdonbehalfbyname";
			public const string importsequencenumber = "importsequencenumber";
			public const string modifiedby = "modifiedby";
			public const string modifiedbyName = "modifiedbyname";
			public const string modifiedon = "modifiedon";
			public const string modifiedonbehalfby = "modifiedonbehalfby";
			public const string modifiedonbehalfbyName = "modifiedonbehalfbyname";
			public const string ofm_caption = "ofm_caption";
			public const string ofm_cclr_ratioid = "ofm_cclr_ratioid";
			public const string Id = "ofm_cclr_ratioid";
			public const string ofm_fte_min_ece = "ofm_fte_min_ece";
			public const string ofm_fte_min_ecea = "ofm_fte_min_ecea";
			public const string ofm_fte_min_ite = "ofm_fte_min_ite";
			public const string ofm_fte_min_ra = "ofm_fte_min_ra";
			public const string ofm_group_size = "ofm_group_size";
			public const string ofm_licence_group = "ofm_licence_group";
			public const string ofm_licence_mapping = "ofm_licence_mapping";
			public const string ofm_order_number = "ofm_order_number";
			public const string ofm_rate_schedule = "ofm_rate_schedule";
			public const string ofm_rate_scheduleName = "ofm_rate_schedulename";
			public const string ofm_rateschedule_cclr = "ofm_rateschedule_cclr";
			public const string ofm_spaces_max = "ofm_spaces_max";
			public const string ofm_spaces_min = "ofm_spaces_min";
			public const string overriddencreatedon = "overriddencreatedon";
			public const string ownerid = "ownerid";
			public const string owneridName = "owneridname";
			public const string owningbusinessunit = "owningbusinessunit";
			public const string owningbusinessunitName = "owningbusinessunitname";
			public const string owningteam = "owningteam";
			public const string owningteamName = "owningteamname";
			public const string owninguser = "owninguser";
			public const string owninguserName = "owningusername";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string team_ofm_cclr_ratio = "team_ofm_cclr_ratio";
			public const string timezoneruleversionnumber = "timezoneruleversionnumber";
			public const string utcconversiontimezonecode = "utcconversiontimezonecode";
			public const string versionnumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_cclr_ratio(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_cclr_ratio(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_cclr_ratio(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_cclr_ratio() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "ofm_cclr_ratioid";
		
		public const string PrimaryNameAttribute = "ofm_caption";
		
		public const string EntitySchemaName = "ofm_cclr_ratio";
		
		public const string EntityLogicalName = "ofm_cclr_ratio";
		
		public const string EntityLogicalCollectionName = "ofm_cclr_ratios";
		
		public const string EntitySetName = "ofm_cclr_ratios";
		
		public const int EntityTypeCode = 11439;
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> createdon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> importsequencenumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> modifiedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Caption
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_caption")]
		public string ofm_caption
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_caption");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_caption", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cclr_ratioid")]
		public System.Nullable<System.Guid> ofm_cclr_ratioid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_cclr_ratioid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_cclr_ratioid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cclr_ratioid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ofm_cclr_ratioid = value;
			}
		}
		
		/// <summary>
		/// ECE
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fte_min_ece")]
		public System.Nullable<int> ofm_fte_min_ece
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_fte_min_ece");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_fte_min_ece", value);
			}
		}
		
		/// <summary>
		/// ECEA
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fte_min_ecea")]
		public System.Nullable<int> ofm_fte_min_ecea
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_fte_min_ecea");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_fte_min_ecea", value);
			}
		}
		
		/// <summary>
		/// ITE
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fte_min_ite")]
		public System.Nullable<int> ofm_fte_min_ite
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_fte_min_ite");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_fte_min_ite", value);
			}
		}
		
		/// <summary>
		/// RA
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fte_min_ra")]
		public System.Nullable<int> ofm_fte_min_ra
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_fte_min_ra");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_fte_min_ra", value);
			}
		}
		
		/// <summary>
		/// Group Size
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_group_size")]
		public virtual ecc_group_size? ofm_group_size
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecc_group_size?)(EntityOptionSetEnum.GetEnum(this, "ofm_group_size")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_group_size", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Licence Group
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_group")]
		public string ofm_licence_group
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_licence_group");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_licence_group", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_mapping")]
		public virtual System.Collections.Generic.IEnumerable<ecc_licence_type> ofm_licence_mapping
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<ecc_licence_type>(this, "ofm_licence_mapping");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_licence_mapping", EntityOptionSetEnum.GetMultiEnum(this, "ofm_licence_mapping", value));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_order_number")]
		public System.Nullable<int> ofm_order_number
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_order_number");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_order_number", value);
			}
		}
		
		/// <summary>
		/// The associated rate schedule
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_rate_schedule")]
		public Microsoft.Xrm.Sdk.EntityReference ofm_rate_schedule
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_rate_schedule");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_rate_schedule", value);
			}
		}
		
		/// <summary>
		/// Max Spaces
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_spaces_max")]
		public System.Nullable<int> ofm_spaces_max
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_spaces_max");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_spaces_max", value);
			}
		}
		
		/// <summary>
		/// Min Spaces
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_spaces_min")]
		public System.Nullable<int> ofm_spaces_min
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_spaces_min");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_spaces_min", value);
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> overriddencreatedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference ownerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference owningteam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference owninguser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the CCLR Ratio
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual ofm_cclr_ratio_statecode? statecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_cclr_ratio_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Reason for the status of the CCLR Ratio
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ofm_cclr_ratio_StatusCode? statuscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_cclr_ratio_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> timezoneruleversionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> utcconversiontimezonecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> versionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// N:1 ofm_rateschedule_cclr
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_rate_schedule")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_rateschedule_cclr")]
		public ECC.Core.DataContext.ofm_rate_schedule ofm_rateschedule_cclr
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.ofm_rate_schedule>("ofm_rateschedule_cclr", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.ofm_rate_schedule>("ofm_rateschedule_cclr", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_ofm_cclr_ratio
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_cclr_ratio")]
		public ECC.Core.DataContext.Team team_ofm_cclr_ratio
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_cclr_ratio", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_cclr_ratio(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_cclr_ratioid"] = base.Id;
                        break;
                    case "ofm_cclr_ratioid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_communication_type")]
	public partial class ofm_communication_type : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ofm_communication_type entity
		/// </summary>
		public static partial class Fields
		{
			public const string createdby = "createdby";
			public const string createdbyName = "createdbyname";
			public const string createdon = "createdon";
			public const string createdonbehalfby = "createdonbehalfby";
			public const string createdonbehalfbyName = "createdonbehalfbyname";
			public const string importsequencenumber = "importsequencenumber";
			public const string modifiedby = "modifiedby";
			public const string modifiedbyName = "modifiedbyname";
			public const string modifiedon = "modifiedon";
			public const string modifiedonbehalfby = "modifiedonbehalfby";
			public const string modifiedonbehalfbyName = "modifiedonbehalfbyname";
			public const string ofm_communication_type_number = "ofm_communication_type_number";
			public const string ofm_communication_typeid = "ofm_communication_typeid";
			public const string Id = "ofm_communication_typeid";
			public const string ofm_email_communication_type = "ofm_email_communication_type";
			public const string ofm_name = "ofm_name";
			public const string overriddencreatedon = "overriddencreatedon";
			public const string ownerid = "ownerid";
			public const string owneridName = "owneridname";
			public const string owningbusinessunit = "owningbusinessunit";
			public const string owningbusinessunitName = "owningbusinessunitname";
			public const string owningteam = "owningteam";
			public const string owningteamName = "owningteamname";
			public const string owninguser = "owninguser";
			public const string owninguserName = "owningusername";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string team_ofm_communication_type = "team_ofm_communication_type";
			public const string timezoneruleversionnumber = "timezoneruleversionnumber";
			public const string utcconversiontimezonecode = "utcconversiontimezonecode";
			public const string versionnumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_communication_type(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_communication_type(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_communication_type(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_communication_type() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "ofm_communication_typeid";
		
		public const string PrimaryNameAttribute = "ofm_name";
		
		public const string EntitySchemaName = "ofm_communication_type";
		
		public const string EntityLogicalName = "ofm_communication_type";
		
		public const string EntityLogicalCollectionName = "ofm_communication_types";
		
		public const string EntitySetName = "ofm_communication_types";
		
		public const int EntityTypeCode = 11395;
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> createdon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> importsequencenumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> modifiedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_communication_type_number")]
		public System.Nullable<int> ofm_communication_type_number
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_communication_type_number");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_communication_type_number", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_communication_typeid")]
		public System.Nullable<System.Guid> ofm_communication_typeid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_communication_typeid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_communication_typeid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_communication_typeid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ofm_communication_typeid = value;
			}
		}
		
		/// <summary>
		/// The name of the custom entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
		public string ofm_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_name", value);
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> overriddencreatedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference ownerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference owningteam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference owninguser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Communication Type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual ofm_communication_type_statecode? statecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_communication_type_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Reason for the status of the Communication Type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ofm_communication_type_StatusCode? statuscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_communication_type_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> timezoneruleversionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> utcconversiontimezonecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> versionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N ofm_email_communication_type
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_email_communication_type")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Email> ofm_email_communication_type
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.Email>("ofm_email_communication_type", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.Email>("ofm_email_communication_type", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_ofm_communication_type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_communication_type")]
		public ECC.Core.DataContext.Team team_ofm_communication_type
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_communication_type", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_communication_type(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_communication_typeid"] = base.Id;
                        break;
                    case "ofm_communication_typeid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
	
	/// <summary>
	/// A message on a conversation thread of an Assistance Request
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_conversation")]
	public partial class ofm_conversation : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ofm_conversation entity
		/// </summary>
		public static partial class Fields
		{
			public const string createdby = "createdby";
			public const string createdbyName = "createdbyname";
			public const string createdon = "createdon";
			public const string createdonbehalfby = "createdonbehalfby";
			public const string createdonbehalfbyName = "createdonbehalfbyname";
			public const string importsequencenumber = "importsequencenumber";
			public const string modifiedby = "modifiedby";
			public const string modifiedbyName = "modifiedbyname";
			public const string modifiedon = "modifiedon";
			public const string modifiedonbehalfby = "modifiedonbehalfby";
			public const string modifiedonbehalfbyName = "modifiedonbehalfbyname";
			public const string ofm_conversation_request = "ofm_conversation_request";
			public const string ofm_conversationid = "ofm_conversationid";
			public const string Id = "ofm_conversationid";
			public const string ofm_message = "ofm_message";
			public const string ofm_name = "ofm_name";
			public const string ofm_request = "ofm_request";
			public const string ofm_requestName = "ofm_requestname";
			public const string ofm_source_system = "ofm_source_system";
			public const string overriddencreatedon = "overriddencreatedon";
			public const string ownerid = "ownerid";
			public const string owneridName = "owneridname";
			public const string owningbusinessunit = "owningbusinessunit";
			public const string owningbusinessunitName = "owningbusinessunitname";
			public const string owningteam = "owningteam";
			public const string owningteamName = "owningteamname";
			public const string owninguser = "owninguser";
			public const string owninguserName = "owningusername";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string team_ofm_conversation = "team_ofm_conversation";
			public const string timezoneruleversionnumber = "timezoneruleversionnumber";
			public const string utcconversiontimezonecode = "utcconversiontimezonecode";
			public const string versionnumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_conversation(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_conversation(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_conversation(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_conversation() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "ofm_conversationid";
		
		public const string PrimaryNameAttribute = "ofm_name";
		
		public const string EntitySchemaName = "ofm_conversation";
		
		public const string EntityLogicalName = "ofm_conversation";
		
		public const string EntityLogicalCollectionName = "ofm_conversations";
		
		public const string EntitySetName = "ofm_conversations";
		
		public const int EntityTypeCode = 11365;
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> createdon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> importsequencenumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> modifiedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_conversationid")]
		public System.Nullable<System.Guid> ofm_conversationid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_conversationid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_conversationid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_conversationid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ofm_conversationid = value;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_message")]
		public string ofm_message
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_message");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_message", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
		public string ofm_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_name", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_request")]
		public Microsoft.Xrm.Sdk.EntityReference ofm_request
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_request");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_request", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_source_system")]
		public System.Nullable<bool> ofm_source_system
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ofm_source_system");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> overriddencreatedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference ownerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference owningteam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference owninguser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Conversation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual ofm_conversation_statecode? statecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_conversation_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Reason for the status of the Conversation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ofm_conversation_StatusCode? statuscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_conversation_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> timezoneruleversionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> utcconversiontimezonecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> versionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// N:1 ofm_conversation_request
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_request")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_conversation_request")]
		public ECC.Core.DataContext.ofm_assistance_request ofm_conversation_request
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.ofm_assistance_request>("ofm_conversation_request", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.ofm_assistance_request>("ofm_conversation_request", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_ofm_conversation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_conversation")]
		public ECC.Core.DataContext.Team team_ofm_conversation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_conversation", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_conversation(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_conversationid"] = base.Id;
                        break;
                    case "ofm_conversationid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_document")]
	public partial class ofm_document : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ofm_document entity
		/// </summary>
		public static partial class Fields
		{
			public const string createdby = "createdby";
			public const string createdbyName = "createdbyname";
			public const string createdon = "createdon";
			public const string createdonbehalfby = "createdonbehalfby";
			public const string createdonbehalfbyName = "createdonbehalfbyname";
			public const string importsequencenumber = "importsequencenumber";
			public const string modifiedby = "modifiedby";
			public const string modifiedbyName = "modifiedbyname";
			public const string modifiedon = "modifiedon";
			public const string modifiedonbehalfby = "modifiedonbehalfby";
			public const string modifiedonbehalfbyName = "modifiedonbehalfbyname";
			public const string ofm_category = "ofm_category";
			public const string ofm_description = "ofm_description";
			public const string ofm_document_account = "ofm_document_account";
			public const string ofm_document_allowance = "ofm_document_allowance";
			public const string ofm_document_application = "ofm_document_application";
			public const string ofm_document_assistance_request = "ofm_document_assistance_request";
			public const string ofm_documentid = "ofm_documentid";
			public const string Id = "ofm_documentid";
			public const string ofm_extension = "ofm_extension";
			public const string ofm_file = "ofm_file";
			public const string ofm_file_name = "ofm_file_name";
			public const string ofm_file_size = "ofm_file_size";
			public const string ofm_fileName = "ofm_filename";
			public const string ofm_internal_comment = "ofm_internal_comment";
			public const string ofm_name = "ofm_name";
			public const string ofm_regardingid = "ofm_regardingid";
			public const string ofm_regardingidName = "ofm_regardingidname";
			public const string ofm_subject = "ofm_subject";
			public const string overriddencreatedon = "overriddencreatedon";
			public const string ownerid = "ownerid";
			public const string owneridName = "owneridname";
			public const string owningbusinessunit = "owningbusinessunit";
			public const string owningbusinessunitName = "owningbusinessunitname";
			public const string owningteam = "owningteam";
			public const string owningteamName = "owningteamname";
			public const string owninguser = "owninguser";
			public const string owninguserName = "owningusername";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string team_ofm_document = "team_ofm_document";
			public const string timezoneruleversionnumber = "timezoneruleversionnumber";
			public const string utcconversiontimezonecode = "utcconversiontimezonecode";
			public const string versionnumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_document(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_document(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_document(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_document() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "ofm_documentid";
		
		public const string PrimaryNameAttribute = "ofm_name";
		
		public const string EntitySchemaName = "ofm_document";
		
		public const string EntityLogicalName = "ofm_document";
		
		public const string EntityLogicalCollectionName = "ofm_documents";
		
		public const string EntitySetName = "ofm_documents";
		
		public const int EntityTypeCode = 11378;
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> createdon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> importsequencenumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> modifiedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_category")]
		public string ofm_category
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_category");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_category", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_description")]
		public string ofm_description
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_description");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_description", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_documentid")]
		public System.Nullable<System.Guid> ofm_documentid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_documentid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_documentid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_documentid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ofm_documentid = value;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_extension")]
		public string ofm_extension
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_extension");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_extension", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_file")]
		public object ofm_file
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("ofm_file");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_file_name")]
		public string ofm_file_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_file_name");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_file_size")]
		public System.Nullable<decimal> ofm_file_size
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_file_size");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_file_size", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_internal_comment")]
		public string ofm_internal_comment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_internal_comment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_internal_comment", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
		public string ofm_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_name", value);
			}
		}
		
		/// <summary>
		/// Regarding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
		public Microsoft.Xrm.Sdk.EntityReference ofm_regardingid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_regardingid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_regardingid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_subject")]
		public string ofm_subject
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_subject");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_subject", value);
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> overriddencreatedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference ownerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference owningteam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference owninguser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Document
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual ofm_document_statecode? statecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_document_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Reason for the status of the Document
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ofm_document_StatusCode? statuscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_document_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> timezoneruleversionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> utcconversiontimezonecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> versionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// N:1 ofm_document_account
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_document_account")]
		public ECC.Core.DataContext.Account ofm_document_account
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Account>("ofm_document_account", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.Account>("ofm_document_account", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ofm_document_allowance
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_document_allowance")]
		public ECC.Core.DataContext.ofm_allowance ofm_document_allowance
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.ofm_allowance>("ofm_document_allowance", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.ofm_allowance>("ofm_document_allowance", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ofm_document_application
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_document_application")]
		public ECC.Core.DataContext.ofm_application ofm_document_application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_document_application", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_document_application", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ofm_document_assistance_request
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_document_assistance_request")]
		public ECC.Core.DataContext.ofm_assistance_request ofm_document_assistance_request
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.ofm_assistance_request>("ofm_document_assistance_request", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.ofm_assistance_request>("ofm_document_assistance_request", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_ofm_document
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_document")]
		public ECC.Core.DataContext.Team team_ofm_document
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_document", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_document(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_documentid"] = base.Id;
                        break;
                    case "ofm_documentid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_facility_request")]
	public partial class ofm_facility_request : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ofm_facility_request entity
		/// </summary>
		public static partial class Fields
		{
			public const string createdby = "createdby";
			public const string createdbyName = "createdbyname";
			public const string createdon = "createdon";
			public const string createdonbehalfby = "createdonbehalfby";
			public const string createdonbehalfbyName = "createdonbehalfbyname";
			public const string importsequencenumber = "importsequencenumber";
			public const string modifiedby = "modifiedby";
			public const string modifiedbyName = "modifiedbyname";
			public const string modifiedon = "modifiedon";
			public const string modifiedonbehalfby = "modifiedonbehalfby";
			public const string modifiedonbehalfbyName = "modifiedonbehalfbyname";
			public const string ofm_facility = "ofm_facility";
			public const string ofm_facility_request_facility = "ofm_facility_request_facility";
			public const string ofm_facility_request_request = "ofm_facility_request_request";
			public const string ofm_facility_requestid = "ofm_facility_requestid";
			public const string Id = "ofm_facility_requestid";
			public const string ofm_facilityName = "ofm_facilityname";
			public const string ofm_name = "ofm_name";
			public const string ofm_request = "ofm_request";
			public const string ofm_requestName = "ofm_requestname";
			public const string overriddencreatedon = "overriddencreatedon";
			public const string ownerid = "ownerid";
			public const string owneridName = "owneridname";
			public const string owningbusinessunit = "owningbusinessunit";
			public const string owningbusinessunitName = "owningbusinessunitname";
			public const string owningteam = "owningteam";
			public const string owningteamName = "owningteamname";
			public const string owninguser = "owninguser";
			public const string owninguserName = "owningusername";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string team_ofm_facility_request = "team_ofm_facility_request";
			public const string timezoneruleversionnumber = "timezoneruleversionnumber";
			public const string utcconversiontimezonecode = "utcconversiontimezonecode";
			public const string versionnumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_facility_request(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_facility_request(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_facility_request(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		public const string AlternateKeys = "ofm_facility,ofm_request";
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_facility_request() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "ofm_facility_requestid";
		
		public const string PrimaryNameAttribute = "ofm_name";
		
		public const string EntitySchemaName = "ofm_facility_request";
		
		public const string EntityLogicalName = "ofm_facility_request";
		
		public const string EntityLogicalCollectionName = "ofm_facility_requests";
		
		public const string EntitySetName = "ofm_facility_requests";
		
		public const int EntityTypeCode = 11369;
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> createdon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> importsequencenumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> modifiedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
		public Microsoft.Xrm.Sdk.EntityReference ofm_facility
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_facility");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_facility", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility_requestid")]
		public System.Nullable<System.Guid> ofm_facility_requestid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_facility_requestid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_facility_requestid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility_requestid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ofm_facility_requestid = value;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
		public string ofm_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_name", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_request")]
		public Microsoft.Xrm.Sdk.EntityReference ofm_request
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_request");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_request", value);
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> overriddencreatedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference ownerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference owningteam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference owninguser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Facility Request
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual ofm_facility_request_statecode? statecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_facility_request_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Reason for the status of the Facility Request
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ofm_facility_request_StatusCode? statuscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_facility_request_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> timezoneruleversionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> utcconversiontimezonecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> versionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// N:1 ofm_facility_request_facility
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_facility_request_facility")]
		public ECC.Core.DataContext.Account ofm_facility_request_facility
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Account>("ofm_facility_request_facility", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.Account>("ofm_facility_request_facility", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ofm_facility_request_request
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_request")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_facility_request_request")]
		public ECC.Core.DataContext.ofm_assistance_request ofm_facility_request_request
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.ofm_assistance_request>("ofm_facility_request_request", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.ofm_assistance_request>("ofm_facility_request_request", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_ofm_facility_request
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_facility_request")]
		public ECC.Core.DataContext.Team team_ofm_facility_request
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_facility_request", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_facility_request(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_facility_requestid"] = base.Id;
                        break;
                    case "ofm_facility_requestid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
	
	/// <summary>
	/// OFM Fiscal Year Record
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_fiscal_year")]
	public partial class ofm_fiscal_year : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ofm_fiscal_year entity
		/// </summary>
		public static partial class Fields
		{
			public const string createdby = "createdby";
			public const string createdbyName = "createdbyname";
			public const string createdon = "createdon";
			public const string createdonbehalfby = "createdonbehalfby";
			public const string createdonbehalfbyName = "createdonbehalfbyname";
			public const string importsequencenumber = "importsequencenumber";
			public const string modifiedby = "modifiedby";
			public const string modifiedbyName = "modifiedbyname";
			public const string modifiedon = "modifiedon";
			public const string modifiedonbehalfby = "modifiedonbehalfby";
			public const string modifiedonbehalfbyName = "modifiedonbehalfbyname";
			public const string ofm_agreement_number_seed = "ofm_agreement_number_seed";
			public const string ofm_caption = "ofm_caption";
			public const string ofm_end_date = "ofm_end_date";
			public const string ofm_fiscal_year_number = "ofm_fiscal_year_number";
			public const string ofm_fiscal_yearid = "ofm_fiscal_yearid";
			public const string Id = "ofm_fiscal_yearid";
			public const string ofm_start_date = "ofm_start_date";
			public const string overriddencreatedon = "overriddencreatedon";
			public const string ownerid = "ownerid";
			public const string owneridName = "owneridname";
			public const string owningbusinessunit = "owningbusinessunit";
			public const string owningbusinessunitName = "owningbusinessunitname";
			public const string owningteam = "owningteam";
			public const string owningteamName = "owningteamname";
			public const string owninguser = "owninguser";
			public const string owninguserName = "owningusername";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string team_ofm_fiscal_year = "team_ofm_fiscal_year";
			public const string timezoneruleversionnumber = "timezoneruleversionnumber";
			public const string utcconversiontimezonecode = "utcconversiontimezonecode";
			public const string versionnumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_fiscal_year(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_fiscal_year(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_fiscal_year(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		public const string AlternateKeys = "ofm_fiscal_year_number";
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_fiscal_year() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "ofm_fiscal_yearid";
		
		public const string PrimaryNameAttribute = "ofm_caption";
		
		public const string EntitySchemaName = "ofm_fiscal_year";
		
		public const string EntityLogicalName = "ofm_fiscal_year";
		
		public const string EntityLogicalCollectionName = "ofm_fiscal_years";
		
		public const string EntitySetName = "ofm_fiscal_years";
		
		public const int EntityTypeCode = 11422;
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> createdon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> importsequencenumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> modifiedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Agreement Number Seed
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_agreement_number_seed")]
		public System.Nullable<int> ofm_agreement_number_seed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_agreement_number_seed");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_agreement_number_seed", value);
			}
		}
		
		/// <summary>
		/// OFM Fiscal Year record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_caption")]
		public string ofm_caption
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_caption");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_caption", value);
			}
		}
		
		/// <summary>
		/// End Date
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_end_date")]
		public System.Nullable<System.DateTime> ofm_end_date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_end_date");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_end_date", value);
			}
		}
		
		/// <summary>
		/// ID
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fiscal_year_number")]
		public System.Nullable<int> ofm_fiscal_year_number
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_fiscal_year_number");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_fiscal_year_number", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fiscal_yearid")]
		public System.Nullable<System.Guid> ofm_fiscal_yearid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_fiscal_yearid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_fiscal_yearid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fiscal_yearid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ofm_fiscal_yearid = value;
			}
		}
		
		/// <summary>
		/// Start Date
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_start_date")]
		public System.Nullable<System.DateTime> ofm_start_date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_start_date");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_start_date", value);
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> overriddencreatedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference ownerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference owningteam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference owninguser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Fiscal Year
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual ofm_fiscal_year_statecode? statecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_fiscal_year_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Reason for the status of the Fiscal Year
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ofm_fiscal_year_StatusCode? statuscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_fiscal_year_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> timezoneruleversionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> utcconversiontimezonecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> versionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// N:1 team_ofm_fiscal_year
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_fiscal_year")]
		public ECC.Core.DataContext.Team team_ofm_fiscal_year
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_fiscal_year", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_fiscal_year(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_fiscal_yearid"] = base.Id;
                        break;
                    case "ofm_fiscal_yearid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
	
	/// <summary>
	/// OFM Funding Record
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_funding")]
	public partial class ofm_funding : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ofm_funding entity
		/// </summary>
		public static partial class Fields
		{
			public const string createdby = "createdby";
			public const string createdbyName = "createdbyname";
			public const string createdon = "createdon";
			public const string createdonbehalfby = "createdonbehalfby";
			public const string createdonbehalfbyName = "createdonbehalfbyname";
			public const string exchangerate = "exchangerate";
			public const string importsequencenumber = "importsequencenumber";
			public const string modifiedby = "modifiedby";
			public const string modifiedbyName = "modifiedbyname";
			public const string modifiedon = "modifiedon";
			public const string modifiedonbehalfby = "modifiedonbehalfby";
			public const string modifiedonbehalfbyName = "modifiedonbehalfbyname";
			public const string ofm_application = "ofm_application";
			public const string ofm_application_funding = "ofm_application_funding";
			public const string ofm_applicationName = "ofm_applicationname";
			public const string ofm_apply_duplicate_caretypes_condition = "ofm_apply_duplicate_caretypes_condition";
			public const string ofm_apply_room_split_condition = "ofm_apply_room_split_condition";
			public const string ofm_end_date = "ofm_end_date";
			public const string ofm_envelope_administrative = "ofm_envelope_administrative";
			public const string ofm_envelope_administrative_base = "ofm_envelope_administrative_base";
			public const string ofm_envelope_administrative_pf = "ofm_envelope_administrative_pf";
			public const string ofm_envelope_administrative_pf_base = "ofm_envelope_administrative_pf_base";
			public const string ofm_envelope_administrative_proj = "ofm_envelope_administrative_proj";
			public const string ofm_envelope_administrative_proj_base = "ofm_envelope_administrative_proj_base";
			public const string ofm_envelope_facility = "ofm_envelope_facility";
			public const string ofm_envelope_facility_base = "ofm_envelope_facility_base";
			public const string ofm_envelope_facility_pf = "ofm_envelope_facility_pf";
			public const string ofm_envelope_facility_pf_base = "ofm_envelope_facility_pf_base";
			public const string ofm_envelope_facility_proj = "ofm_envelope_facility_proj";
			public const string ofm_envelope_facility_proj_base = "ofm_envelope_facility_proj_base";
			public const string ofm_envelope_grand_total = "ofm_envelope_grand_total";
			public const string ofm_envelope_grand_total_base = "ofm_envelope_grand_total_base";
			public const string ofm_envelope_grand_total_pf = "ofm_envelope_grand_total_pf";
			public const string ofm_envelope_grand_total_pf_base = "ofm_envelope_grand_total_pf_base";
			public const string ofm_envelope_grand_total_proj = "ofm_envelope_grand_total_proj";
			public const string ofm_envelope_grand_total_proj_base = "ofm_envelope_grand_total_proj_base";
			public const string ofm_envelope_hr_benefits = "ofm_envelope_hr_benefits";
			public const string ofm_envelope_hr_benefits_base = "ofm_envelope_hr_benefits_base";
			public const string ofm_envelope_hr_benefits_pf = "ofm_envelope_hr_benefits_pf";
			public const string ofm_envelope_hr_benefits_pf_base = "ofm_envelope_hr_benefits_pf_base";
			public const string ofm_envelope_hr_benefits_proj = "ofm_envelope_hr_benefits_proj";
			public const string ofm_envelope_hr_benefits_proj_base = "ofm_envelope_hr_benefits_proj_base";
			public const string ofm_envelope_hr_employerhealthtax = "ofm_envelope_hr_employerhealthtax";
			public const string ofm_envelope_hr_employerhealthtax_base = "ofm_envelope_hr_employerhealthtax_base";
			public const string ofm_envelope_hr_employerhealthtax_pf = "ofm_envelope_hr_employerhealthtax_pf";
			public const string ofm_envelope_hr_employerhealthtax_pf_base = "ofm_envelope_hr_employerhealthtax_pf_base";
			public const string ofm_envelope_hr_employerhealthtax_proj = "ofm_envelope_hr_employerhealthtax_proj";
			public const string ofm_envelope_hr_employerhealthtax_proj_base = "ofm_envelope_hr_employerhealthtax_proj_base";
			public const string ofm_envelope_hr_prodevexpenses = "ofm_envelope_hr_prodevexpenses";
			public const string ofm_envelope_hr_prodevexpenses_base = "ofm_envelope_hr_prodevexpenses_base";
			public const string ofm_envelope_hr_prodevexpenses_pf = "ofm_envelope_hr_prodevexpenses_pf";
			public const string ofm_envelope_hr_prodevexpenses_pf_base = "ofm_envelope_hr_prodevexpenses_pf_base";
			public const string ofm_envelope_hr_prodevexpenses_proj = "ofm_envelope_hr_prodevexpenses_proj";
			public const string ofm_envelope_hr_prodevexpenses_proj_base = "ofm_envelope_hr_prodevexpenses_proj_base";
			public const string ofm_envelope_hr_prodevhours = "ofm_envelope_hr_prodevhours";
			public const string ofm_envelope_hr_prodevhours_base = "ofm_envelope_hr_prodevhours_base";
			public const string ofm_envelope_hr_prodevhours_pf = "ofm_envelope_hr_prodevhours_pf";
			public const string ofm_envelope_hr_prodevhours_pf_base = "ofm_envelope_hr_prodevhours_pf_base";
			public const string ofm_envelope_hr_prodevhours_proj = "ofm_envelope_hr_prodevhours_proj";
			public const string ofm_envelope_hr_prodevhours_proj_base = "ofm_envelope_hr_prodevhours_proj_base";
			public const string ofm_envelope_hr_total = "ofm_envelope_hr_total";
			public const string ofm_envelope_hr_total_base = "ofm_envelope_hr_total_base";
			public const string ofm_envelope_hr_total_pf = "ofm_envelope_hr_total_pf";
			public const string ofm_envelope_hr_total_pf_base = "ofm_envelope_hr_total_pf_base";
			public const string ofm_envelope_hr_total_proj = "ofm_envelope_hr_total_proj";
			public const string ofm_envelope_hr_total_proj_base = "ofm_envelope_hr_total_proj_base";
			public const string ofm_envelope_hr_wages_paidtimeoff = "ofm_envelope_hr_wages_paidtimeoff";
			public const string ofm_envelope_hr_wages_paidtimeoff_base = "ofm_envelope_hr_wages_paidtimeoff_base";
			public const string ofm_envelope_hr_wages_paidtimeoff_pf = "ofm_envelope_hr_wages_paidtimeoff_pf";
			public const string ofm_envelope_hr_wages_paidtimeoff_pf_base = "ofm_envelope_hr_wages_paidtimeoff_pf_base";
			public const string ofm_envelope_hr_wages_paidtimeoff_proj = "ofm_envelope_hr_wages_paidtimeoff_proj";
			public const string ofm_envelope_hr_wages_paidtimeoff_proj_base = "ofm_envelope_hr_wages_paidtimeoff_proj_base";
			public const string ofm_envelope_operational = "ofm_envelope_operational";
			public const string ofm_envelope_operational_base = "ofm_envelope_operational_base";
			public const string ofm_envelope_operational_pf = "ofm_envelope_operational_pf";
			public const string ofm_envelope_operational_pf_base = "ofm_envelope_operational_pf_base";
			public const string ofm_envelope_operational_proj = "ofm_envelope_operational_proj";
			public const string ofm_envelope_operational_proj_base = "ofm_envelope_operational_proj_base";
			public const string ofm_envelope_programming = "ofm_envelope_programming";
			public const string ofm_envelope_programming_base = "ofm_envelope_programming_base";
			public const string ofm_envelope_programming_pf = "ofm_envelope_programming_pf";
			public const string ofm_envelope_programming_pf_base = "ofm_envelope_programming_pf_base";
			public const string ofm_envelope_programming_proj = "ofm_envelope_programming_proj";
			public const string ofm_envelope_programming_proj_base = "ofm_envelope_programming_proj_base";
			public const string ofm_facility = "ofm_facility";
			public const string ofm_facilityName = "ofm_facilityname";
			public const string ofm_funding_envelope = "ofm_funding_envelope";
			public const string ofm_funding_facility_account = "ofm_funding_facility_account";
			public const string ofm_funding_number = "ofm_funding_number";
			public const string ofm_funding_tracker = "ofm_funding_tracker";
			public const string ofm_fundingid = "ofm_fundingid";
			public const string Id = "ofm_fundingid";
			public const string ofm_manual_intervention = "ofm_manual_intervention";
			public const string ofm_rate_schedule = "ofm_rate_schedule";
			public const string ofm_rate_scheduleName = "ofm_rate_schedulename";
			public const string ofm_rateschedule_funding = "ofm_rateschedule_funding";
			public const string ofm_start_date = "ofm_start_date";
			public const string ofm_version_number = "ofm_version_number";
			public const string overriddencreatedon = "overriddencreatedon";
			public const string ownerid = "ownerid";
			public const string owneridName = "owneridname";
			public const string owningbusinessunit = "owningbusinessunit";
			public const string owningbusinessunitName = "owningbusinessunitname";
			public const string owningteam = "owningteam";
			public const string owningteamName = "owningteamname";
			public const string owninguser = "owninguser";
			public const string owninguserName = "owningusername";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string team_ofm_funding = "team_ofm_funding";
			public const string timezoneruleversionnumber = "timezoneruleversionnumber";
			public const string transactioncurrencyid = "transactioncurrencyid";
			public const string transactioncurrencyidName = "transactioncurrencyidname";
			public const string utcconversiontimezonecode = "utcconversiontimezonecode";
			public const string versionnumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_funding(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_funding(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_funding(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_funding() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "ofm_fundingid";
		
		public const string PrimaryNameAttribute = "ofm_funding_number";
		
		public const string EntitySchemaName = "ofm_funding";
		
		public const string EntityLogicalName = "ofm_funding";
		
		public const string EntityLogicalCollectionName = "ofm_fundings";
		
		public const string EntitySetName = "ofm_fundings";
		
		public const int EntityTypeCode = 11425;
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> createdon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the entity with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> exchangerate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> importsequencenumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> modifiedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		/// <summary>
		/// The associated Application on the funding record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application")]
		public Microsoft.Xrm.Sdk.EntityReference ofm_application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_application");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_application", value);
			}
		}
		
		/// <summary>
		/// Boolean Attribute
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_apply_duplicate_caretypes_condition")]
		public System.Nullable<bool> ofm_apply_duplicate_caretypes_condition
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ofm_apply_duplicate_caretypes_condition");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_apply_duplicate_caretypes_condition", value);
			}
		}
		
		/// <summary>
		/// Boolean Attribute
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_apply_room_split_condition")]
		public System.Nullable<bool> ofm_apply_room_split_condition
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ofm_apply_room_split_condition");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_apply_room_split_condition", value);
			}
		}
		
		/// <summary>
		/// Funding End Date
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_end_date")]
		public System.Nullable<System.DateTime> ofm_end_date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_end_date");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_end_date", value);
			}
		}
		
		/// <summary>
		/// Administrative - Annual Province Base Funding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_administrative")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_administrative
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_administrative");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_administrative", value);
			}
		}
		
		/// <summary>
		/// Value of the Administrative in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_administrative_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_administrative_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_administrative_base");
			}
		}
		
		/// <summary>
		/// Administrative - Projected Annual Parent Fees
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_administrative_pf")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_administrative_pf
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_administrative_pf");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_administrative_pf", value);
			}
		}
		
		/// <summary>
		/// Value of the Administrative (PF) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_administrative_pf_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_administrative_pf_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_administrative_pf_base");
			}
		}
		
		/// <summary>
		/// Administrative - Projected Annual Base Funding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_administrative_proj")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_administrative_proj
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_administrative_proj");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_administrative_proj", value);
			}
		}
		
		/// <summary>
		/// Value of the Administrative (Projected) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_administrative_proj_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_administrative_proj_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_administrative_proj_base");
			}
		}
		
		/// <summary>
		/// Facility - Annual Province Base Funding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_facility")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_facility
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_facility");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_facility", value);
			}
		}
		
		/// <summary>
		/// Value of the Facility Funding in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_facility_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_facility_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_facility_base");
			}
		}
		
		/// <summary>
		/// Facility - Projected Annual Parent Fees
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_facility_pf")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_facility_pf
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_facility_pf");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_facility_pf", value);
			}
		}
		
		/// <summary>
		/// Value of the Facility (PF) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_facility_pf_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_facility_pf_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_facility_pf_base");
			}
		}
		
		/// <summary>
		/// Facility - Projected Annual Base Funding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_facility_proj")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_facility_proj
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_facility_proj");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_facility_proj", value);
			}
		}
		
		/// <summary>
		/// Value of the Facility (Projected) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_facility_proj_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_facility_proj_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_facility_proj_base");
			}
		}
		
		/// <summary>
		/// Funding Total - Annual Province Base Funding 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_grand_total")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_grand_total
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_grand_total");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_grand_total", value);
			}
		}
		
		/// <summary>
		/// Value of the Funding Total in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_grand_total_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_grand_total_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_grand_total_base");
			}
		}
		
		/// <summary>
		/// Funding Total - Projected Annual Parent Fees
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_grand_total_pf")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_grand_total_pf
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_grand_total_pf");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_grand_total_pf", value);
			}
		}
		
		/// <summary>
		/// Value of the Funding Total (PF) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_grand_total_pf_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_grand_total_pf_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_grand_total_pf_base");
			}
		}
		
		/// <summary>
		/// Funding Total - Projected Annual Base Funding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_grand_total_proj")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_grand_total_proj
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_grand_total_proj");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_grand_total_proj", value);
			}
		}
		
		/// <summary>
		/// Value of the Funding Total (Projected) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_grand_total_proj_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_grand_total_proj_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_grand_total_proj_base");
			}
		}
		
		/// <summary>
		/// Benefits - Annual Province Base Funding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_benefits")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_benefits
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_benefits");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_hr_benefits", value);
			}
		}
		
		/// <summary>
		/// Value of the Benefits in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_benefits_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_benefits_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_benefits_base");
			}
		}
		
		/// <summary>
		/// Benefits - Projected Annual Parent Fees
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_benefits_pf")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_benefits_pf
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_benefits_pf");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_hr_benefits_pf", value);
			}
		}
		
		/// <summary>
		/// Value of the Benefits (PF) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_benefits_pf_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_benefits_pf_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_benefits_pf_base");
			}
		}
		
		/// <summary>
		/// Benefits - Projected Annual Base Funding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_benefits_proj")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_benefits_proj
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_benefits_proj");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_hr_benefits_proj", value);
			}
		}
		
		/// <summary>
		/// Value of the Benefits (Projected) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_benefits_proj_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_benefits_proj_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_benefits_proj_base");
			}
		}
		
		/// <summary>
		/// Employer Health Tax - Annual Province Parent Fees
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_employerhealthtax")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_employerhealthtax
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_employerhealthtax");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_hr_employerhealthtax", value);
			}
		}
		
		/// <summary>
		/// Value of the Employer Health Tax in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_employerhealthtax_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_employerhealthtax_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_employerhealthtax_base");
			}
		}
		
		/// <summary>
		/// Employer Health Tax - Projected Annual Parent Fees
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_employerhealthtax_pf")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_employerhealthtax_pf
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_employerhealthtax_pf");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_hr_employerhealthtax_pf", value);
			}
		}
		
		/// <summary>
		/// Value of the Employer Health Tax (PF) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_employerhealthtax_pf_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_employerhealthtax_pf_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_employerhealthtax_pf_base");
			}
		}
		
		/// <summary>
		/// Employer Health Tax - Projected Annual Base Funding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_employerhealthtax_proj")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_employerhealthtax_proj
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_employerhealthtax_proj");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_hr_employerhealthtax_proj", value);
			}
		}
		
		/// <summary>
		/// Value of the Employer Health Tax (Projected) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_employerhealthtax_proj_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_employerhealthtax_proj_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_employerhealthtax_proj_base");
			}
		}
		
		/// <summary>
		/// Professional Development Expenses - Annual Province Base Funding 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevexpenses")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevexpenses
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevexpenses");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_hr_prodevexpenses", value);
			}
		}
		
		/// <summary>
		/// Value of the Professional Development Expenses in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevexpenses_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevexpenses_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevexpenses_base");
			}
		}
		
		/// <summary>
		/// Professional Development Expenses - Projected Annual Parent Fees
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevexpenses_pf")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevexpenses_pf
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevexpenses_pf");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_hr_prodevexpenses_pf", value);
			}
		}
		
		/// <summary>
		/// Value of the Professional Development Expenses (PF) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevexpenses_pf_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevexpenses_pf_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevexpenses_pf_base");
			}
		}
		
		/// <summary>
		/// Professional Development Expenses - Projected Annual Base Funding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevexpenses_proj")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevexpenses_proj
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevexpenses_proj");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_hr_prodevexpenses_proj", value);
			}
		}
		
		/// <summary>
		/// Value of the Professional Development Expenses (Projected) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevexpenses_proj_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevexpenses_proj_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevexpenses_proj_base");
			}
		}
		
		/// <summary>
		/// Professional Development Hours - Annual Province Base Funding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevhours")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevhours
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevhours");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_hr_prodevhours", value);
			}
		}
		
		/// <summary>
		/// Value of the Professional Development Hours in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevhours_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevhours_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevhours_base");
			}
		}
		
		/// <summary>
		/// Professional Development Hours - Projected Annual Parent Fees
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevhours_pf")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevhours_pf
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevhours_pf");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_hr_prodevhours_pf", value);
			}
		}
		
		/// <summary>
		/// Value of the Professional Development Hours (PF) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevhours_pf_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevhours_pf_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevhours_pf_base");
			}
		}
		
		/// <summary>
		/// Professional Development Hours - Projected Annual Province Base Funding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevhours_proj")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevhours_proj
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevhours_proj");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_hr_prodevhours_proj", value);
			}
		}
		
		/// <summary>
		/// Value of the Professional Development Hours (Projected) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_prodevhours_proj_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_prodevhours_proj_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_prodevhours_proj_base");
			}
		}
		
		/// <summary>
		/// Instructional Human Resources - Annual Province Base Funding 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_total")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_total
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_total");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_hr_total", value);
			}
		}
		
		/// <summary>
		/// Value of the Instructional Human Resources in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_total_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_total_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_total_base");
			}
		}
		
		/// <summary>
		/// Instructional Human Resources - Projected Annual Parent Fees
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_total_pf")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_total_pf
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_total_pf");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_hr_total_pf", value);
			}
		}
		
		/// <summary>
		/// Value of the Instructional Human Resources (PF) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_total_pf_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_total_pf_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_total_pf_base");
			}
		}
		
		/// <summary>
		/// Instructional Human Resources - Projected Annual Base Funding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_total_proj")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_total_proj
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_total_proj");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_hr_total_proj", value);
			}
		}
		
		/// <summary>
		/// Value of the Instructional Human Resources (Projected) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_total_proj_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_total_proj_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_total_proj_base");
			}
		}
		
		/// <summary>
		/// Wages & Paid Time Off - Annual Province Base Funding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_wages_paidtimeoff")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_wages_paidtimeoff
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_wages_paidtimeoff");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_hr_wages_paidtimeoff", value);
			}
		}
		
		/// <summary>
		/// Value of the Wages & Paid Time Off in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_wages_paidtimeoff_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_wages_paidtimeoff_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_wages_paidtimeoff_base");
			}
		}
		
		/// <summary>
		/// Wages & Paid Time Off - Projected Annual Parent Fees
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_wages_paidtimeoff_pf")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_wages_paidtimeoff_pf
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_wages_paidtimeoff_pf");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_hr_wages_paidtimeoff_pf", value);
			}
		}
		
		/// <summary>
		/// Value of the Wages & Paid Time Off (PF) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_wages_paidtimeoff_pf_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_wages_paidtimeoff_pf_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_wages_paidtimeoff_pf_base");
			}
		}
		
		/// <summary>
		/// Wages & Paid Time Off - Projected Annual Province Base Funding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_wages_paidtimeoff_proj")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_wages_paidtimeoff_proj
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_wages_paidtimeoff_proj");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_hr_wages_paidtimeoff_proj", value);
			}
		}
		
		/// <summary>
		/// Value of the Wages & Paid Time Off (Projected) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_hr_wages_paidtimeoff_proj_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_hr_wages_paidtimeoff_proj_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_hr_wages_paidtimeoff_proj_base");
			}
		}
		
		/// <summary>
		/// Operational - Annual Province Base Funding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_operational")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_operational
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_operational");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_operational", value);
			}
		}
		
		/// <summary>
		/// Value of the Operational in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_operational_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_operational_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_operational_base");
			}
		}
		
		/// <summary>
		/// Operational - Projected Annual Parent Fees
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_operational_pf")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_operational_pf
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_operational_pf");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_operational_pf", value);
			}
		}
		
		/// <summary>
		/// Value of the Operational (PF) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_operational_pf_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_operational_pf_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_operational_pf_base");
			}
		}
		
		/// <summary>
		/// Operational - Projected Annual Base Funding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_operational_proj")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_operational_proj
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_operational_proj");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_operational_proj", value);
			}
		}
		
		/// <summary>
		/// Value of the Operational (Projected) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_operational_proj_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_operational_proj_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_operational_proj_base");
			}
		}
		
		/// <summary>
		/// Programming - Annual Province Base Funding 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_programming")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_programming
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_programming");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_programming", value);
			}
		}
		
		/// <summary>
		/// Value of the Programming in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_programming_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_programming_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_programming_base");
			}
		}
		
		/// <summary>
		/// Programming - Projected Annual Parent Fees
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_programming_pf")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_programming_pf
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_programming_pf");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_programming_pf", value);
			}
		}
		
		/// <summary>
		/// Value of the Programming (PF) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_programming_pf_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_programming_pf_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_programming_pf_base");
			}
		}
		
		/// <summary>
		/// Programming - Projected Annual Base Funding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_programming_proj")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_programming_proj
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_programming_proj");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_envelope_programming_proj", value);
			}
		}
		
		/// <summary>
		/// Value of the Programming (Projected) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_envelope_programming_proj_base")]
		public Microsoft.Xrm.Sdk.Money ofm_envelope_programming_proj_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_envelope_programming_proj_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
		public Microsoft.Xrm.Sdk.EntityReference ofm_facility
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_facility");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_facility", value);
			}
		}
		
		/// <summary>
		/// This is a binding field for the funding envelope custom PCF control
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_funding_envelope")]
		public string ofm_funding_envelope
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_funding_envelope");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_funding_envelope", value);
			}
		}
		
		/// <summary>
		/// The value is auto copied from ofm_funding_agreement_number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_funding_number")]
		public string ofm_funding_number
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_funding_number");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_funding_number", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fundingid")]
		public System.Nullable<System.Guid> ofm_fundingid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_fundingid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_fundingid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_fundingid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ofm_fundingid = value;
			}
		}
		
		/// <summary>
		/// ofm_manual_intervention
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_manual_intervention")]
		public System.Nullable<bool> ofm_manual_intervention
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ofm_manual_intervention");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_manual_intervention", value);
			}
		}
		
		/// <summary>
		/// The associated Rate Schedule
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_rate_schedule")]
		public Microsoft.Xrm.Sdk.EntityReference ofm_rate_schedule
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_rate_schedule");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_rate_schedule", value);
			}
		}
		
		/// <summary>
		/// Funding Start Date
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_start_date")]
		public System.Nullable<System.DateTime> ofm_start_date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_start_date");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_start_date", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_version_number")]
		public System.Nullable<int> ofm_version_number
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_version_number");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_version_number", value);
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> overriddencreatedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference ownerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference owningteam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference owninguser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Funding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual ofm_funding_statecode? statecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_funding_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Reason for the status of the Funding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ofm_funding_StatusCode? statuscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_funding_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> timezoneruleversionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the currency associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> utcconversiontimezonecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> versionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N ofm_funding_tracker
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_funding_tracker")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_progress_tracker> ofm_funding_tracker
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_progress_tracker>("ofm_funding_tracker", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_progress_tracker>("ofm_funding_tracker", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ofm_application_funding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_application")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_application_funding")]
		public ECC.Core.DataContext.ofm_application ofm_application_funding
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_application_funding", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.ofm_application>("ofm_application_funding", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ofm_funding_facility_account
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_funding_facility_account")]
		public ECC.Core.DataContext.Account ofm_funding_facility_account
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Account>("ofm_funding_facility_account", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.Account>("ofm_funding_facility_account", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ofm_rateschedule_funding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_rate_schedule")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_rateschedule_funding")]
		public ECC.Core.DataContext.ofm_rate_schedule ofm_rateschedule_funding
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.ofm_rate_schedule>("ofm_rateschedule_funding", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.ofm_rate_schedule>("ofm_rateschedule_funding", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_ofm_funding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_funding")]
		public ECC.Core.DataContext.Team team_ofm_funding
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_funding", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_funding(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_fundingid"] = base.Id;
                        break;
                    case "ofm_fundingid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
	
	/// <summary>
	/// Funding Rate
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_funding_rate")]
	public partial class ofm_funding_rate : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ofm_funding_rate entity
		/// </summary>
		public static partial class Fields
		{
			public const string createdby = "createdby";
			public const string createdbyName = "createdbyname";
			public const string createdon = "createdon";
			public const string createdonbehalfby = "createdonbehalfby";
			public const string createdonbehalfbyName = "createdonbehalfbyname";
			public const string exchangerate = "exchangerate";
			public const string importsequencenumber = "importsequencenumber";
			public const string modifiedby = "modifiedby";
			public const string modifiedbyName = "modifiedbyname";
			public const string modifiedon = "modifiedon";
			public const string modifiedonbehalfby = "modifiedonbehalfby";
			public const string modifiedonbehalfbyName = "modifiedonbehalfbyname";
			public const string ofm_caption = "ofm_caption";
			public const string ofm_funding_rateid = "ofm_funding_rateid";
			public const string Id = "ofm_funding_rateid";
			public const string ofm_nonhr_funding_envelope = "ofm_nonhr_funding_envelope";
			public const string ofm_ownership = "ofm_ownership";
			public const string ofm_rate = "ofm_rate";
			public const string ofm_rate_base = "ofm_rate_base";
			public const string ofm_rate_schedule = "ofm_rate_schedule";
			public const string ofm_rate_scheduleName = "ofm_rate_schedulename";
			public const string ofm_rateschedule_fundingrate = "ofm_rateschedule_fundingrate";
			public const string ofm_spaces_max = "ofm_spaces_max";
			public const string ofm_spaces_min = "ofm_spaces_min";
			public const string ofm_step = "ofm_step";
			public const string overriddencreatedon = "overriddencreatedon";
			public const string ownerid = "ownerid";
			public const string owneridName = "owneridname";
			public const string owningbusinessunit = "owningbusinessunit";
			public const string owningbusinessunitName = "owningbusinessunitname";
			public const string owningteam = "owningteam";
			public const string owningteamName = "owningteamname";
			public const string owninguser = "owninguser";
			public const string owninguserName = "owningusername";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string team_ofm_funding_rate = "team_ofm_funding_rate";
			public const string timezoneruleversionnumber = "timezoneruleversionnumber";
			public const string transactioncurrencyid = "transactioncurrencyid";
			public const string transactioncurrencyidName = "transactioncurrencyidname";
			public const string utcconversiontimezonecode = "utcconversiontimezonecode";
			public const string versionnumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_funding_rate(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_funding_rate(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_funding_rate(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_funding_rate() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "ofm_funding_rateid";
		
		public const string PrimaryNameAttribute = "ofm_caption";
		
		public const string EntitySchemaName = "ofm_funding_rate";
		
		public const string EntityLogicalName = "ofm_funding_rate";
		
		public const string EntityLogicalCollectionName = "ofm_funding_rates";
		
		public const string EntitySetName = "ofm_funding_rates";
		
		public const int EntityTypeCode = 11437;
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> createdon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the entity with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> exchangerate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> importsequencenumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> modifiedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		/// <summary>
		/// The record ID 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_caption")]
		public string ofm_caption
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_caption");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_caption", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_funding_rateid")]
		public System.Nullable<System.Guid> ofm_funding_rateid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_funding_rateid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_funding_rateid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_funding_rateid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ofm_funding_rateid = value;
			}
		}
		
		/// <summary>
		/// Non-HR Envelope
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_nonhr_funding_envelope")]
		public virtual ecc_funding_envelope? ofm_nonhr_funding_envelope
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecc_funding_envelope?)(EntityOptionSetEnum.GetEnum(this, "ofm_nonhr_funding_envelope")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_nonhr_funding_envelope", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Ownership
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ownership")]
		public virtual ecc_Ownership? ofm_ownership
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecc_Ownership?)(EntityOptionSetEnum.GetEnum(this, "ofm_ownership")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_ownership", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Rate ($/space)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_rate")]
		public Microsoft.Xrm.Sdk.Money ofm_rate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_rate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_rate", value);
			}
		}
		
		/// <summary>
		/// Value of the Rate ($/space) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_rate_base")]
		public Microsoft.Xrm.Sdk.Money ofm_rate_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_rate_base");
			}
		}
		
		/// <summary>
		/// The associated rate schedule
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_rate_schedule")]
		public Microsoft.Xrm.Sdk.EntityReference ofm_rate_schedule
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_rate_schedule");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_rate_schedule", value);
			}
		}
		
		/// <summary>
		/// Max Spaces
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_spaces_max")]
		public System.Nullable<int> ofm_spaces_max
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_spaces_max");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_spaces_max", value);
			}
		}
		
		/// <summary>
		/// Min Spaces
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_spaces_min")]
		public System.Nullable<int> ofm_spaces_min
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_spaces_min");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_spaces_min", value);
			}
		}
		
		/// <summary>
		/// Integer Attribute
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_step")]
		public System.Nullable<int> ofm_step
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_step");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_step", value);
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> overriddencreatedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference ownerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference owningteam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference owninguser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Funding Rate
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual ofm_funding_rate_statecode? statecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_funding_rate_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Reason for the status of the Funding Rate
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ofm_funding_rate_StatusCode? statuscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_funding_rate_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> timezoneruleversionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the currency associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> utcconversiontimezonecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> versionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// N:1 ofm_rateschedule_fundingrate
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_rate_schedule")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_rateschedule_fundingrate")]
		public ECC.Core.DataContext.ofm_rate_schedule ofm_rateschedule_fundingrate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.ofm_rate_schedule>("ofm_rateschedule_fundingrate", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.ofm_rate_schedule>("ofm_rateschedule_fundingrate", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_ofm_funding_rate
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_funding_rate")]
		public ECC.Core.DataContext.Team team_ofm_funding_rate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_funding_rate", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_funding_rate(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_funding_rateid"] = base.Id;
                        break;
                    case "ofm_funding_rateid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
	
	/// <summary>
	/// Facility Licence
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_licence")]
	public partial class ofm_licence : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ofm_licence entity
		/// </summary>
		public static partial class Fields
		{
			public const string createdby = "createdby";
			public const string createdbyName = "createdbyname";
			public const string createdon = "createdon";
			public const string createdonbehalfby = "createdonbehalfby";
			public const string createdonbehalfbyName = "createdonbehalfbyname";
			public const string exchangerate = "exchangerate";
			public const string importsequencenumber = "importsequencenumber";
			public const string modifiedby = "modifiedby";
			public const string modifiedbyName = "modifiedbyname";
			public const string modifiedon = "modifiedon";
			public const string modifiedonbehalfby = "modifiedonbehalfby";
			public const string modifiedonbehalfbyName = "modifiedonbehalfbyname";
			public const string ofm_accb_providerid = "ofm_accb_providerid";
			public const string ofm_ccof_facilityid = "ofm_ccof_facilityid";
			public const string ofm_ccof_organizationid = "ofm_ccof_organizationid";
			public const string ofm_facility = "ofm_facility";
			public const string ofm_facility_licence = "ofm_facility_licence";
			public const string ofm_facilityName = "ofm_facilityname";
			public const string ofm_health_authority = "ofm_health_authority";
			public const string ofm_Licence = "ofm_licence";
			public const string ofm_licence_licencedetail = "ofm_licence_licencedetail";
			public const string ofm_licenceid = "ofm_licenceid";
			public const string Id = "ofm_licenceid";
			public const string ofm_tdad_funding_agreement_number = "ofm_tdad_funding_agreement_number";
			public const string overriddencreatedon = "overriddencreatedon";
			public const string ownerid = "ownerid";
			public const string owneridName = "owneridname";
			public const string owningbusinessunit = "owningbusinessunit";
			public const string owningbusinessunitName = "owningbusinessunitname";
			public const string owningteam = "owningteam";
			public const string owningteamName = "owningteamname";
			public const string owninguser = "owninguser";
			public const string owninguserName = "owningusername";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string team_ofm_licence = "team_ofm_licence";
			public const string timezoneruleversionnumber = "timezoneruleversionnumber";
			public const string transactioncurrencyid = "transactioncurrencyid";
			public const string transactioncurrencyidName = "transactioncurrencyidname";
			public const string utcconversiontimezonecode = "utcconversiontimezonecode";
			public const string versionnumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_licence(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_licence(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_licence(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_licence() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "ofm_licenceid";
		
		public const string PrimaryNameAttribute = "ofm_licence";
		
		public const string EntitySchemaName = "ofm_licence";
		
		public const string EntityLogicalName = "ofm_licence";
		
		public const string EntityLogicalCollectionName = "ofm_licences";
		
		public const string EntitySetName = "ofm_licences";
		
		public const int EntityTypeCode = 11415;
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> createdon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the entity with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> exchangerate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> importsequencenumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> modifiedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_accb_providerid")]
		public string ofm_accb_providerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_accb_providerid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ccof_facilityid")]
		public string ofm_ccof_facilityid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_ccof_facilityid");
			}
		}
		
		/// <summary>
		/// CCOF Organization ID
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ccof_organizationid")]
		public string ofm_ccof_organizationid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_ccof_organizationid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
		public Microsoft.Xrm.Sdk.EntityReference ofm_facility
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_facility");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_facility", value);
			}
		}
		
		/// <summary>
		/// Health Authority
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_health_authority")]
		public virtual ecc_health_authorities? ofm_health_authority
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecc_health_authorities?)(EntityOptionSetEnum.GetEnum(this, "ofm_health_authority")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_health_authority", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Facility Licence Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence")]
		public string ofm_Licence
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_licence");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_licence", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licenceid")]
		public System.Nullable<System.Guid> ofm_licenceid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_licenceid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_licenceid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licenceid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ofm_licenceid = value;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_tdad_funding_agreement_number")]
		public string ofm_tdad_funding_agreement_number
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_tdad_funding_agreement_number");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> overriddencreatedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference ownerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference owningteam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference owninguser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Licence
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual ofm_licence_statecode? statecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_licence_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Reason for the status of the Licence
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ofm_licence_StatusCode? statuscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_licence_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> timezoneruleversionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the currency associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> utcconversiontimezonecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> versionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N ofm_licence_licencedetail
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_licence_licencedetail")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_licence_detail> ofm_licence_licencedetail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_licence_detail>("ofm_licence_licencedetail", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_licence_detail>("ofm_licence_licencedetail", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ofm_facility_licence
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facility")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_facility_licence")]
		public ECC.Core.DataContext.Account ofm_facility_licence
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Account>("ofm_facility_licence", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.Account>("ofm_facility_licence", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_ofm_licence
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_licence")]
		public ECC.Core.DataContext.Team team_ofm_licence
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_licence", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_licence(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_licenceid"] = base.Id;
                        break;
                    case "ofm_licenceid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
	
	/// <summary>
	/// Licence Details
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_licence_detail")]
	public partial class ofm_licence_detail : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ofm_licence_detail entity
		/// </summary>
		public static partial class Fields
		{
			public const string createdby = "createdby";
			public const string createdbyName = "createdbyname";
			public const string createdon = "createdon";
			public const string createdonbehalfby = "createdonbehalfby";
			public const string createdonbehalfbyName = "createdonbehalfbyname";
			public const string importsequencenumber = "importsequencenumber";
			public const string modifiedby = "modifiedby";
			public const string modifiedbyName = "modifiedbyname";
			public const string modifiedon = "modifiedon";
			public const string modifiedonbehalfby = "modifiedonbehalfby";
			public const string modifiedonbehalfbyName = "modifiedonbehalfbyname";
			public const string ofm_care_type = "ofm_care_type";
			public const string ofm_enrolled_spaces = "ofm_enrolled_spaces";
			public const string ofm_licence = "ofm_licence";
			public const string ofm_Licence_Detail = "ofm_licence_detail";
			public const string ofm_licence_detailid = "ofm_licence_detailid";
			public const string Id = "ofm_licence_detailid";
			public const string ofm_licence_licencedetail = "ofm_licence_licencedetail";
			public const string ofm_licence_spaces = "ofm_licence_spaces";
			public const string ofm_licence_type = "ofm_licence_type";
			public const string ofm_licenceName = "ofm_licencename";
			public const string ofm_operation_from_time = "ofm_operation_from_time";
			public const string ofm_operation_hours_from = "ofm_operation_hours_from";
			public const string ofm_operation_hours_to = "ofm_operation_hours_to";
			public const string ofm_operational_spaces = "ofm_operational_spaces";
			public const string ofm_operations_to_time = "ofm_operations_to_time";
			public const string ofm_overnight_care = "ofm_overnight_care";
			public const string ofm_week_days = "ofm_week_days";
			public const string ofm_weeks_in_operation = "ofm_weeks_in_operation";
			public const string overriddencreatedon = "overriddencreatedon";
			public const string ownerid = "ownerid";
			public const string owneridName = "owneridname";
			public const string owningbusinessunit = "owningbusinessunit";
			public const string owningbusinessunitName = "owningbusinessunitname";
			public const string owningteam = "owningteam";
			public const string owningteamName = "owningteamname";
			public const string owninguser = "owninguser";
			public const string owninguserName = "owningusername";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string team_ofm_licence_detail = "team_ofm_licence_detail";
			public const string timezoneruleversionnumber = "timezoneruleversionnumber";
			public const string utcconversiontimezonecode = "utcconversiontimezonecode";
			public const string versionnumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_licence_detail(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_licence_detail(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_licence_detail(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_licence_detail() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "ofm_licence_detailid";
		
		public const string PrimaryNameAttribute = "ofm_licence_detail";
		
		public const string EntitySchemaName = "ofm_licence_detail";
		
		public const string EntityLogicalName = "ofm_licence_detail";
		
		public const string EntityLogicalCollectionName = "ofm_licence_details";
		
		public const string EntitySetName = "ofm_licence_details";
		
		public const int EntityTypeCode = 11416;
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> createdon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> importsequencenumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> modifiedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Care Type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_care_type")]
		public virtual ecc_care_types? ofm_care_type
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecc_care_types?)(EntityOptionSetEnum.GetEnum(this, "ofm_care_type")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_care_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Enrolled Spaces
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_enrolled_spaces")]
		public System.Nullable<int> ofm_enrolled_spaces
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_enrolled_spaces");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_enrolled_spaces", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence")]
		public Microsoft.Xrm.Sdk.EntityReference ofm_licence
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_licence");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_licence", value);
			}
		}
		
		/// <summary>
		/// Licence Details
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_detail")]
		public string ofm_Licence_Detail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_licence_detail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_licence_detail", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_detailid")]
		public System.Nullable<System.Guid> ofm_licence_detailid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_licence_detailid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_licence_detailid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_detailid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ofm_licence_detailid = value;
			}
		}
		
		/// <summary>
		/// Licensed Spaces
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_spaces")]
		public System.Nullable<int> ofm_licence_spaces
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_licence_spaces");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_licence_spaces", value);
			}
		}
		
		/// <summary>
		/// Licence Type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence_type")]
		public virtual ecc_licence_type? ofm_licence_type
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecc_licence_type?)(EntityOptionSetEnum.GetEnum(this, "ofm_licence_type")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_licence_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Operation From Time
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_operation_from_time")]
		public string ofm_operation_from_time
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_operation_from_time");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_operation_from_time", value);
			}
		}
		
		/// <summary>
		/// Hours of Operation From
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_operation_hours_from")]
		public System.Nullable<System.DateTime> ofm_operation_hours_from
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_operation_hours_from");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_operation_hours_from", value);
			}
		}
		
		/// <summary>
		/// Hours of Operation To
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_operation_hours_to")]
		public System.Nullable<System.DateTime> ofm_operation_hours_to
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_operation_hours_to");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_operation_hours_to", value);
			}
		}
		
		/// <summary>
		/// Operational Spaces
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_operational_spaces")]
		public System.Nullable<int> ofm_operational_spaces
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_operational_spaces");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_operational_spaces", value);
			}
		}
		
		/// <summary>
		/// Operations To Time
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_operations_to_time")]
		public string ofm_operations_to_time
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_operations_to_time");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_operations_to_time", value);
			}
		}
		
		/// <summary>
		/// Overnight Care
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_overnight_care")]
		public virtual ecc_ynempty? ofm_overnight_care
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecc_ynempty?)(EntityOptionSetEnum.GetEnum(this, "ofm_overnight_care")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_overnight_care", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Days of Week
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_week_days")]
		public virtual System.Collections.Generic.IEnumerable<ecc_weekday_options> ofm_week_days
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<ecc_weekday_options>(this, "ofm_week_days");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_week_days", EntityOptionSetEnum.GetMultiEnum(this, "ofm_week_days", value));
			}
		}
		
		/// <summary>
		/// Weeks in Operation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_weeks_in_operation")]
		public System.Nullable<int> ofm_weeks_in_operation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_weeks_in_operation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_weeks_in_operation", value);
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> overriddencreatedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference ownerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference owningteam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference owninguser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Licence Details
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual ofm_licence_detail_statecode? statecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_licence_detail_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Reason for the status of the Licence Details
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ofm_licence_detail_StatusCode? statuscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_licence_detail_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> timezoneruleversionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> utcconversiontimezonecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> versionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// N:1 ofm_licence_licencedetail
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licence")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_licence_licencedetail")]
		public ECC.Core.DataContext.ofm_licence ofm_licence_licencedetail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.ofm_licence>("ofm_licence_licencedetail", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.ofm_licence>("ofm_licence_licencedetail", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_ofm_licence_detail
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_licence_detail")]
		public ECC.Core.DataContext.Team team_ofm_licence_detail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_licence_detail", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_licence_detail(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_licence_detailid"] = base.Id;
                        break;
                    case "ofm_licence_detailid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
	
	/// <summary>
	/// Progress Tracker Record
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_progress_tracker")]
	public partial class ofm_progress_tracker : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ofm_progress_tracker entity
		/// </summary>
		public static partial class Fields
		{
			public const string createdby = "createdby";
			public const string createdbyName = "createdbyname";
			public const string createdon = "createdon";
			public const string createdonbehalfby = "createdonbehalfby";
			public const string createdonbehalfbyName = "createdonbehalfbyname";
			public const string importsequencenumber = "importsequencenumber";
			public const string modifiedby = "modifiedby";
			public const string modifiedbyName = "modifiedbyname";
			public const string modifiedon = "modifiedon";
			public const string modifiedonbehalfby = "modifiedonbehalfby";
			public const string modifiedonbehalfbyName = "modifiedonbehalfbyname";
			public const string ofm_category = "ofm_category";
			public const string ofm_funding_tracker = "ofm_funding_tracker";
			public const string ofm_progress_trackerid = "ofm_progress_trackerid";
			public const string Id = "ofm_progress_trackerid";
			public const string ofm_regardingid = "ofm_regardingid";
			public const string ofm_regardingidName = "ofm_regardingidname";
			public const string ofm_title = "ofm_title";
			public const string ofm_tracking_details = "ofm_tracking_details";
			public const string ofm_tracking_number = "ofm_tracking_number";
			public const string overriddencreatedon = "overriddencreatedon";
			public const string ownerid = "ownerid";
			public const string owneridName = "owneridname";
			public const string owningbusinessunit = "owningbusinessunit";
			public const string owningbusinessunitName = "owningbusinessunitname";
			public const string owningteam = "owningteam";
			public const string owningteamName = "owningteamname";
			public const string owninguser = "owninguser";
			public const string owninguserName = "owningusername";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string team_ofm_progress_tracker = "team_ofm_progress_tracker";
			public const string timezoneruleversionnumber = "timezoneruleversionnumber";
			public const string utcconversiontimezonecode = "utcconversiontimezonecode";
			public const string versionnumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_progress_tracker(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_progress_tracker(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_progress_tracker(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_progress_tracker() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "ofm_progress_trackerid";
		
		public const string PrimaryNameAttribute = "ofm_tracking_number";
		
		public const string EntitySchemaName = "ofm_progress_tracker";
		
		public const string EntityLogicalName = "ofm_progress_tracker";
		
		public const string EntityLogicalCollectionName = "ofm_progress_trackers";
		
		public const string EntitySetName = "ofm_progress_trackers";
		
		public const int EntityTypeCode = 11456;
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> createdon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> importsequencenumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> modifiedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Category
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_category")]
		public string ofm_category
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_category");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_category", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_progress_trackerid")]
		public System.Nullable<System.Guid> ofm_progress_trackerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_progress_trackerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_progress_trackerid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_progress_trackerid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ofm_progress_trackerid = value;
			}
		}
		
		/// <summary>
		/// Regarding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
		public Microsoft.Xrm.Sdk.EntityReference ofm_regardingid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ofm_regardingid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_regardingid", value);
			}
		}
		
		/// <summary>
		/// Title
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_title")]
		public string ofm_title
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_title");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_title", value);
			}
		}
		
		/// <summary>
		/// Tracking Details
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_tracking_details")]
		public string ofm_tracking_details
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_tracking_details");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_tracking_details", value);
			}
		}
		
		/// <summary>
		/// OFM Progress Tracker Record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_tracking_number")]
		public string ofm_tracking_number
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_tracking_number");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_tracking_number", value);
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> overriddencreatedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference ownerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference owningteam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference owninguser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Progress Tracker
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual ofm_progress_tracker_statecode? statecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_progress_tracker_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Reason for the status of the Progress Tracker
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ofm_progress_tracker_StatusCode? statuscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_progress_tracker_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> timezoneruleversionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> utcconversiontimezonecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> versionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// N:1 ofm_funding_tracker
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_regardingid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_funding_tracker")]
		public ECC.Core.DataContext.ofm_funding ofm_funding_tracker
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.ofm_funding>("ofm_funding_tracker", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECC.Core.DataContext.ofm_funding>("ofm_funding_tracker", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_ofm_progress_tracker
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_progress_tracker")]
		public ECC.Core.DataContext.Team team_ofm_progress_tracker
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_progress_tracker", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_progress_tracker(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_progress_trackerid"] = base.Id;
                        break;
                    case "ofm_progress_trackerid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
	
	/// <summary>
	/// Rate Schedule Key
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_rate_schedule")]
	public partial class ofm_rate_schedule : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ofm_rate_schedule entity
		/// </summary>
		public static partial class Fields
		{
			public const string createdby = "createdby";
			public const string createdbyName = "createdbyname";
			public const string createdon = "createdon";
			public const string createdonbehalfby = "createdonbehalfby";
			public const string createdonbehalfbyName = "createdonbehalfbyname";
			public const string exchangerate = "exchangerate";
			public const string importsequencenumber = "importsequencenumber";
			public const string modifiedby = "modifiedby";
			public const string modifiedbyName = "modifiedbyname";
			public const string modifiedon = "modifiedon";
			public const string modifiedonbehalfby = "modifiedonbehalfby";
			public const string modifiedonbehalfbyName = "modifiedonbehalfbyname";
			public const string ofm_average_benefit_load = "ofm_average_benefit_load";
			public const string ofm_caps_for_centers = "ofm_caps_for_centers";
			public const string ofm_caps_for_home_based = "ofm_caps_for_home_based";
			public const string ofm_caption = "ofm_caption";
			public const string ofm_cpp = "ofm_cpp";
			public const string ofm_cultural_hours_per_fte = "ofm_cultural_hours_per_fte";
			public const string ofm_days_in_a_week = "ofm_days_in_a_week";
			public const string ofm_eht_maximum_cost_for_profit = "ofm_eht_maximum_cost_for_profit";
			public const string ofm_eht_maximum_cost_for_profit_base = "ofm_eht_maximum_cost_for_profit_base";
			public const string ofm_eht_maximum_cost_not_for_profit = "ofm_eht_maximum_cost_not_for_profit";
			public const string ofm_eht_maximum_cost_not_for_profit_base = "ofm_eht_maximum_cost_not_for_profit_base";
			public const string ofm_eht_minimum_cost_for_profit = "ofm_eht_minimum_cost_for_profit";
			public const string ofm_eht_minimum_cost_for_profit_base = "ofm_eht_minimum_cost_for_profit_base";
			public const string ofm_ei = "ofm_ei";
			public const string ofm_elf_educational_programming_cap_fte_year = "ofm_elf_educational_programming_cap_fte_year";
			public const string ofm_elf_educational_programming_cap_fte_year_base = "ofm_elf_educational_programming_cap_fte_year_base";
			public const string ofm_elf_hours_per_fte = "ofm_elf_hours_per_fte";
			public const string ofm_end_date = "ofm_end_date";
			public const string ofm_extended_benefits = "ofm_extended_benefits";
			public const string ofm_facilities_with_10_to_19_spaces_inclusion = "ofm_facilities_with_10_to_19_spaces_inclusion";
			public const string ofm_facilities_with_10_to_19_spaces_inclusion_base = "ofm_facilities_with_10_to_19_spaces_inclusion_base";
			public const string ofm_facilities_with_10_to_19_spaces_ip = "ofm_facilities_with_10_to_19_spaces_ip";
			public const string ofm_facilities_with_10_to_19_spaces_ip_base = "ofm_facilities_with_10_to_19_spaces_ip_base";
			public const string ofm_facilities_with_20_or_more_spaces_inclusi = "ofm_facilities_with_20_or_more_spaces_inclusi";
			public const string ofm_facilities_with_20_or_more_spaces_inclusi_base = "ofm_facilities_with_20_or_more_spaces_inclusi_base";
			public const string ofm_facilities_with_20_or_more_spaces_ip = "ofm_facilities_with_20_or_more_spaces_ip";
			public const string ofm_facilities_with_20_or_more_spaces_ip_base = "ofm_facilities_with_20_or_more_spaces_ip_base";
			public const string ofm_facilities_with_9_or_less_spaces_inclusio = "ofm_facilities_with_9_or_less_spaces_inclusio";
			public const string ofm_facilities_with_9_or_less_spaces_inclusio_base = "ofm_facilities_with_9_or_less_spaces_inclusio_base";
			public const string ofm_facilities_with_9_or_less_spaces_ip = "ofm_facilities_with_9_or_less_spaces_ip";
			public const string ofm_facilities_with_9_or_less_spaces_ip_base = "ofm_facilities_with_9_or_less_spaces_ip_base";
			public const string ofm_for_profit_eht_over_1_5m = "ofm_for_profit_eht_over_1_5m";
			public const string ofm_for_profit_eht_over_500k = "ofm_for_profit_eht_over_500k";
			public const string ofm_greater_than20_spaces_lease_cap_per_month = "ofm_greater_than20_spaces_lease_cap_per_month";
			public const string ofm_greater_than20_spaces_lease_cap_per_month_base = "ofm_greater_than20_spaces_lease_cap_per_month_base";
			public const string ofm_hours_per_day = "ofm_hours_per_day";
			public const string ofm_inclusion_hours_per_fte = "ofm_inclusion_hours_per_fte";
			public const string ofm_less_than20_spaces_lease_cap_per_month = "ofm_less_than20_spaces_lease_cap_per_month";
			public const string ofm_less_than20_spaces_lease_cap_per_month_base = "ofm_less_than20_spaces_lease_cap_per_month_base";
			public const string ofm_licenced_childcare_cap_per_fte_per_year = "ofm_licenced_childcare_cap_per_fte_per_year";
			public const string ofm_licenced_childcare_cap_per_fte_per_year_base = "ofm_licenced_childcare_cap_per_fte_per_year_base";
			public const string ofm_licensed_childcare_hours_per_fte = "ofm_licensed_childcare_hours_per_fte";
			public const string ofm_no_of_sick_days = "ofm_no_of_sick_days";
			public const string ofm_no_of_stat_holidays = "ofm_no_of_stat_holidays";
			public const string ofm_no_of_vacation_days = "ofm_no_of_vacation_days";
			public const string ofm_not_for_profit_eht_over_1_5m = "ofm_not_for_profit_eht_over_1_5m";
			public const string ofm_parent_fee_per_day_ft = "ofm_parent_fee_per_day_ft";
			public const string ofm_parent_fee_per_day_ft_base = "ofm_parent_fee_per_day_ft_base";
			public const string ofm_parent_fee_per_day_pt = "ofm_parent_fee_per_day_pt";
			public const string ofm_parent_fee_per_day_pt_base = "ofm_parent_fee_per_day_pt_base";
			public const string ofm_parent_fee_per_month_ft = "ofm_parent_fee_per_month_ft";
			public const string ofm_parent_fee_per_month_ft_base = "ofm_parent_fee_per_month_ft_base";
			public const string ofm_parent_fee_per_month_pt = "ofm_parent_fee_per_month_pt";
			public const string ofm_parent_fee_per_month_pt_base = "ofm_parent_fee_per_month_pt_base";
			public const string ofm_pde_cultural_training = "ofm_pde_cultural_training";
			public const string ofm_pde_cultural_training_base = "ofm_pde_cultural_training_base";
			public const string ofm_pde_inclusion_training = "ofm_pde_inclusion_training";
			public const string ofm_pde_inclusion_training_base = "ofm_pde_inclusion_training_base";
			public const string ofm_premium = "ofm_premium";
			public const string ofm_professional_development_hours = "ofm_professional_development_hours";
			public const string ofm_pto_breaks = "ofm_pto_breaks";
			public const string ofm_quality_enhancement_factor = "ofm_quality_enhancement_factor";
			public const string ofm_rate_scheduleid = "ofm_rate_scheduleid";
			public const string Id = "ofm_rate_scheduleid";
			public const string ofm_rateschedule_cclr = "ofm_rateschedule_cclr";
			public const string ofm_rateschedule_funding = "ofm_rateschedule_funding";
			public const string ofm_rateschedule_fundingrate = "ofm_rateschedule_fundingrate";
			public const string ofm_schedule_number = "ofm_schedule_number";
			public const string ofm_sick_hours_per_fte = "ofm_sick_hours_per_fte";
			public const string ofm_standard_dues_per_fte = "ofm_standard_dues_per_fte";
			public const string ofm_standard_dues_per_fte_base = "ofm_standard_dues_per_fte_base";
			public const string ofm_start_date = "ofm_start_date";
			public const string ofm_statutory_breaks = "ofm_statutory_breaks";
			public const string ofm_supervisor_rate = "ofm_supervisor_rate";
			public const string ofm_supervisor_ratio = "ofm_supervisor_ratio";
			public const string ofm_total_fte_hours_per_year = "ofm_total_fte_hours_per_year";
			public const string ofm_transport_reimbursement_per_km = "ofm_transport_reimbursement_per_km";
			public const string ofm_transport_reimbursement_per_km_base = "ofm_transport_reimbursement_per_km_base";
			public const string ofm_vacation_hours_per_fte = "ofm_vacation_hours_per_fte";
			public const string ofm_wage_grid_markup = "ofm_wage_grid_markup";
			public const string ofm_wages_ece_cost = "ofm_wages_ece_cost";
			public const string ofm_wages_ece_cost_base = "ofm_wages_ece_cost_base";
			public const string ofm_wages_ece_supervisor_differential = "ofm_wages_ece_supervisor_differential";
			public const string ofm_wages_ece_supervisor_differential_base = "ofm_wages_ece_supervisor_differential_base";
			public const string ofm_wages_ecea_cost = "ofm_wages_ecea_cost";
			public const string ofm_wages_ecea_cost_base = "ofm_wages_ecea_cost_base";
			public const string ofm_wages_ite_cost = "ofm_wages_ite_cost";
			public const string ofm_wages_ite_cost_base = "ofm_wages_ite_cost_base";
			public const string ofm_wages_ite_sne_supervisor_differential = "ofm_wages_ite_sne_supervisor_differential";
			public const string ofm_wages_ite_sne_supervisor_differential_base = "ofm_wages_ite_sne_supervisor_differential_base";
			public const string ofm_wages_ra_cost = "ofm_wages_ra_cost";
			public const string ofm_wages_ra_cost_base = "ofm_wages_ra_cost_base";
			public const string ofm_wages_ra_supervisor_differential = "ofm_wages_ra_supervisor_differential";
			public const string ofm_wages_ra_supervisor_differential_base = "ofm_wages_ra_supervisor_differential_base";
			public const string ofm_wcb = "ofm_wcb";
			public const string ofm_weeks_in_a_year = "ofm_weeks_in_a_year";
			public const string overriddencreatedon = "overriddencreatedon";
			public const string ownerid = "ownerid";
			public const string owneridName = "owneridname";
			public const string owningbusinessunit = "owningbusinessunit";
			public const string owningbusinessunitName = "owningbusinessunitname";
			public const string owningteam = "owningteam";
			public const string owningteamName = "owningteamname";
			public const string owninguser = "owninguser";
			public const string owninguserName = "owningusername";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string team_ofm_rate_schedule = "team_ofm_rate_schedule";
			public const string timezoneruleversionnumber = "timezoneruleversionnumber";
			public const string transactioncurrencyid = "transactioncurrencyid";
			public const string transactioncurrencyidName = "transactioncurrencyidname";
			public const string utcconversiontimezonecode = "utcconversiontimezonecode";
			public const string versionnumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_rate_schedule(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_rate_schedule(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_rate_schedule(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		public const string AlternateKeys = "ofm_caption";
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_rate_schedule() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "ofm_rate_scheduleid";
		
		public const string PrimaryNameAttribute = "ofm_caption";
		
		public const string EntitySchemaName = "ofm_rate_schedule";
		
		public const string EntityLogicalName = "ofm_rate_schedule";
		
		public const string EntityLogicalCollectionName = "ofm_rate_schedules";
		
		public const string EntitySetName = "ofm_rate_schedules";
		
		public const int EntityTypeCode = 11438;
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> createdon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the entity with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> exchangerate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> importsequencenumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> modifiedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_average_benefit_load")]
		public System.Nullable<decimal> ofm_average_benefit_load
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_average_benefit_load");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_caps_for_centers")]
		public System.Nullable<decimal> ofm_caps_for_centers
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_caps_for_centers");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_caps_for_centers", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_caps_for_home_based")]
		public System.Nullable<decimal> ofm_caps_for_home_based
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_caps_for_home_based");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_caps_for_home_based", value);
			}
		}
		
		/// <summary>
		/// The record identifier
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_caption")]
		public string ofm_caption
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_caption");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_caption", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cpp")]
		public System.Nullable<decimal> ofm_cpp
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_cpp");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_cpp", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_cultural_hours_per_fte")]
		public System.Nullable<decimal> ofm_cultural_hours_per_fte
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_cultural_hours_per_fte");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_cultural_hours_per_fte", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_days_in_a_week")]
		public System.Nullable<int> ofm_days_in_a_week
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_days_in_a_week");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_days_in_a_week", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_eht_maximum_cost_for_profit")]
		public Microsoft.Xrm.Sdk.Money ofm_eht_maximum_cost_for_profit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_eht_maximum_cost_for_profit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_eht_maximum_cost_for_profit", value);
			}
		}
		
		/// <summary>
		/// Value of the EHT Maximum Cost - For Profit in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_eht_maximum_cost_for_profit_base")]
		public Microsoft.Xrm.Sdk.Money ofm_eht_maximum_cost_for_profit_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_eht_maximum_cost_for_profit_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_eht_maximum_cost_not_for_profit")]
		public Microsoft.Xrm.Sdk.Money ofm_eht_maximum_cost_not_for_profit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_eht_maximum_cost_not_for_profit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_eht_maximum_cost_not_for_profit", value);
			}
		}
		
		/// <summary>
		/// Value of the EHT Maximum Cost - Not For Profit in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_eht_maximum_cost_not_for_profit_base")]
		public Microsoft.Xrm.Sdk.Money ofm_eht_maximum_cost_not_for_profit_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_eht_maximum_cost_not_for_profit_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_eht_minimum_cost_for_profit")]
		public Microsoft.Xrm.Sdk.Money ofm_eht_minimum_cost_for_profit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_eht_minimum_cost_for_profit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_eht_minimum_cost_for_profit", value);
			}
		}
		
		/// <summary>
		/// Value of the EHT Minimum Cost - For Profit in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_eht_minimum_cost_for_profit_base")]
		public Microsoft.Xrm.Sdk.Money ofm_eht_minimum_cost_for_profit_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_eht_minimum_cost_for_profit_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_ei")]
		public System.Nullable<decimal> ofm_ei
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_ei");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_ei", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_elf_educational_programming_cap_fte_year")]
		public Microsoft.Xrm.Sdk.Money ofm_elf_educational_programming_cap_fte_year
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_elf_educational_programming_cap_fte_year");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_elf_educational_programming_cap_fte_year", value);
			}
		}
		
		/// <summary>
		/// Value of the ELF Educational Programming cap/ FTE / Year in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_elf_educational_programming_cap_fte_year_base")]
		public Microsoft.Xrm.Sdk.Money ofm_elf_educational_programming_cap_fte_year_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_elf_educational_programming_cap_fte_year_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_elf_hours_per_fte")]
		public System.Nullable<decimal> ofm_elf_hours_per_fte
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_elf_hours_per_fte");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_elf_hours_per_fte", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_end_date")]
		public System.Nullable<System.DateTime> ofm_end_date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_end_date");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_end_date", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_extended_benefits")]
		public System.Nullable<decimal> ofm_extended_benefits
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_extended_benefits");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_extended_benefits", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilities_with_10_to_19_spaces_inclusion")]
		public Microsoft.Xrm.Sdk.Money ofm_facilities_with_10_to_19_spaces_inclusion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_facilities_with_10_to_19_spaces_inclusion");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_facilities_with_10_to_19_spaces_inclusion", value);
			}
		}
		
		/// <summary>
		/// Value of the Facilities with 10 - 19 spaces (Inclusion) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilities_with_10_to_19_spaces_inclusion_base")]
		public Microsoft.Xrm.Sdk.Money ofm_facilities_with_10_to_19_spaces_inclusion_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_facilities_with_10_to_19_spaces_inclusion_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilities_with_10_to_19_spaces_ip")]
		public Microsoft.Xrm.Sdk.Money ofm_facilities_with_10_to_19_spaces_ip
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_facilities_with_10_to_19_spaces_ip");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_facilities_with_10_to_19_spaces_ip", value);
			}
		}
		
		/// <summary>
		/// Value of the Facilities with 10 - 19 spaces (IP) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilities_with_10_to_19_spaces_ip_base")]
		public Microsoft.Xrm.Sdk.Money ofm_facilities_with_10_to_19_spaces_ip_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_facilities_with_10_to_19_spaces_ip_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilities_with_20_or_more_spaces_inclusi")]
		public Microsoft.Xrm.Sdk.Money ofm_facilities_with_20_or_more_spaces_inclusi
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_facilities_with_20_or_more_spaces_inclusi");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_facilities_with_20_or_more_spaces_inclusi", value);
			}
		}
		
		/// <summary>
		/// Value of the Facilities with 20+ spaces (Inclusion) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilities_with_20_or_more_spaces_inclusi_base")]
		public Microsoft.Xrm.Sdk.Money ofm_facilities_with_20_or_more_spaces_inclusi_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_facilities_with_20_or_more_spaces_inclusi_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilities_with_20_or_more_spaces_ip")]
		public Microsoft.Xrm.Sdk.Money ofm_facilities_with_20_or_more_spaces_ip
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_facilities_with_20_or_more_spaces_ip");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_facilities_with_20_or_more_spaces_ip", value);
			}
		}
		
		/// <summary>
		/// Value of the Facilities with 20+ spaces (IP) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilities_with_20_or_more_spaces_ip_base")]
		public Microsoft.Xrm.Sdk.Money ofm_facilities_with_20_or_more_spaces_ip_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_facilities_with_20_or_more_spaces_ip_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilities_with_9_or_less_spaces_inclusio")]
		public Microsoft.Xrm.Sdk.Money ofm_facilities_with_9_or_less_spaces_inclusio
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_facilities_with_9_or_less_spaces_inclusio");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_facilities_with_9_or_less_spaces_inclusio", value);
			}
		}
		
		/// <summary>
		/// Value of the Facilities with 9 or less spaces (Inclusion) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilities_with_9_or_less_spaces_inclusio_base")]
		public Microsoft.Xrm.Sdk.Money ofm_facilities_with_9_or_less_spaces_inclusio_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_facilities_with_9_or_less_spaces_inclusio_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilities_with_9_or_less_spaces_ip")]
		public Microsoft.Xrm.Sdk.Money ofm_facilities_with_9_or_less_spaces_ip
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_facilities_with_9_or_less_spaces_ip");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_facilities_with_9_or_less_spaces_ip", value);
			}
		}
		
		/// <summary>
		/// Value of the Facilities with 9 or less spaces (IP) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_facilities_with_9_or_less_spaces_ip_base")]
		public Microsoft.Xrm.Sdk.Money ofm_facilities_with_9_or_less_spaces_ip_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_facilities_with_9_or_less_spaces_ip_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_for_profit_eht_over_1_5m")]
		public System.Nullable<decimal> ofm_for_profit_eht_over_1_5m
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_for_profit_eht_over_1_5m");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_for_profit_eht_over_1_5m", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_for_profit_eht_over_500k")]
		public System.Nullable<decimal> ofm_for_profit_eht_over_500k
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_for_profit_eht_over_500k");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_for_profit_eht_over_500k", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_greater_than20_spaces_lease_cap_per_month")]
		public Microsoft.Xrm.Sdk.Money ofm_greater_than20_spaces_lease_cap_per_month
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_greater_than20_spaces_lease_cap_per_month");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_greater_than20_spaces_lease_cap_per_month", value);
			}
		}
		
		/// <summary>
		/// Value of the >= 20 spaces lease cap/month in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_greater_than20_spaces_lease_cap_per_month_base")]
		public Microsoft.Xrm.Sdk.Money ofm_greater_than20_spaces_lease_cap_per_month_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_greater_than20_spaces_lease_cap_per_month_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_hours_per_day")]
		public System.Nullable<decimal> ofm_hours_per_day
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_hours_per_day");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_hours_per_day", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_inclusion_hours_per_fte")]
		public System.Nullable<decimal> ofm_inclusion_hours_per_fte
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_inclusion_hours_per_fte");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_inclusion_hours_per_fte", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_less_than20_spaces_lease_cap_per_month")]
		public Microsoft.Xrm.Sdk.Money ofm_less_than20_spaces_lease_cap_per_month
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_less_than20_spaces_lease_cap_per_month");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_less_than20_spaces_lease_cap_per_month", value);
			}
		}
		
		/// <summary>
		/// Value of the < 20 spaces lease cap/month in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_less_than20_spaces_lease_cap_per_month_base")]
		public Microsoft.Xrm.Sdk.Money ofm_less_than20_spaces_lease_cap_per_month_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_less_than20_spaces_lease_cap_per_month_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licenced_childcare_cap_per_fte_per_year")]
		public Microsoft.Xrm.Sdk.Money ofm_licenced_childcare_cap_per_fte_per_year
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_licenced_childcare_cap_per_fte_per_year");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_licenced_childcare_cap_per_fte_per_year", value);
			}
		}
		
		/// <summary>
		/// Value of the Licenced Childcare cap/ FTE / Year in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licenced_childcare_cap_per_fte_per_year_base")]
		public Microsoft.Xrm.Sdk.Money ofm_licenced_childcare_cap_per_fte_per_year_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_licenced_childcare_cap_per_fte_per_year_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_licensed_childcare_hours_per_fte")]
		public System.Nullable<decimal> ofm_licensed_childcare_hours_per_fte
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_licensed_childcare_hours_per_fte");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_no_of_sick_days")]
		public System.Nullable<decimal> ofm_no_of_sick_days
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_no_of_sick_days");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_no_of_sick_days", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_no_of_stat_holidays")]
		public System.Nullable<decimal> ofm_no_of_stat_holidays
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_no_of_stat_holidays");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_no_of_stat_holidays", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_no_of_vacation_days")]
		public System.Nullable<decimal> ofm_no_of_vacation_days
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_no_of_vacation_days");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_no_of_vacation_days", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_not_for_profit_eht_over_1_5m")]
		public System.Nullable<decimal> ofm_not_for_profit_eht_over_1_5m
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_not_for_profit_eht_over_1_5m");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_not_for_profit_eht_over_1_5m", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_parent_fee_per_day_ft")]
		public Microsoft.Xrm.Sdk.Money ofm_parent_fee_per_day_ft
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_parent_fee_per_day_ft");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_parent_fee_per_day_ft", value);
			}
		}
		
		/// <summary>
		/// Value of the Parent Fee Per Day (FT) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_parent_fee_per_day_ft_base")]
		public Microsoft.Xrm.Sdk.Money ofm_parent_fee_per_day_ft_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_parent_fee_per_day_ft_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_parent_fee_per_day_pt")]
		public Microsoft.Xrm.Sdk.Money ofm_parent_fee_per_day_pt
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_parent_fee_per_day_pt");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_parent_fee_per_day_pt", value);
			}
		}
		
		/// <summary>
		/// Value of the Parent Fee Per Day (PT) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_parent_fee_per_day_pt_base")]
		public Microsoft.Xrm.Sdk.Money ofm_parent_fee_per_day_pt_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_parent_fee_per_day_pt_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_parent_fee_per_month_ft")]
		public Microsoft.Xrm.Sdk.Money ofm_parent_fee_per_month_ft
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_parent_fee_per_month_ft");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_parent_fee_per_month_ft", value);
			}
		}
		
		/// <summary>
		/// Value of the Parent Fee Per Month (FT) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_parent_fee_per_month_ft_base")]
		public Microsoft.Xrm.Sdk.Money ofm_parent_fee_per_month_ft_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_parent_fee_per_month_ft_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_parent_fee_per_month_pt")]
		public Microsoft.Xrm.Sdk.Money ofm_parent_fee_per_month_pt
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_parent_fee_per_month_pt");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_parent_fee_per_month_pt", value);
			}
		}
		
		/// <summary>
		/// Value of the Parent Fee Per Month (PT) in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_parent_fee_per_month_pt_base")]
		public Microsoft.Xrm.Sdk.Money ofm_parent_fee_per_month_pt_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_parent_fee_per_month_pt_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pde_cultural_training")]
		public Microsoft.Xrm.Sdk.Money ofm_pde_cultural_training
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_pde_cultural_training");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_pde_cultural_training", value);
			}
		}
		
		/// <summary>
		/// Value of the Professional Development Cultural Training in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pde_cultural_training_base")]
		public Microsoft.Xrm.Sdk.Money ofm_pde_cultural_training_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_pde_cultural_training_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pde_inclusion_training")]
		public Microsoft.Xrm.Sdk.Money ofm_pde_inclusion_training
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_pde_inclusion_training");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_pde_inclusion_training", value);
			}
		}
		
		/// <summary>
		/// Value of the Professional Development Inclusion Training in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pde_inclusion_training_base")]
		public Microsoft.Xrm.Sdk.Money ofm_pde_inclusion_training_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_pde_inclusion_training_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_premium")]
		public System.Nullable<decimal> ofm_premium
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_premium");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_premium", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_professional_development_hours")]
		public System.Nullable<int> ofm_professional_development_hours
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_professional_development_hours");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_professional_development_hours", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_pto_breaks")]
		public System.Nullable<decimal> ofm_pto_breaks
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_pto_breaks");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_pto_breaks", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_quality_enhancement_factor")]
		public System.Nullable<decimal> ofm_quality_enhancement_factor
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_quality_enhancement_factor");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_quality_enhancement_factor", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_rate_scheduleid")]
		public System.Nullable<System.Guid> ofm_rate_scheduleid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_rate_scheduleid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_rate_scheduleid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_rate_scheduleid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ofm_rate_scheduleid = value;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_schedule_number")]
		public System.Nullable<int> ofm_schedule_number
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_schedule_number");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_schedule_number", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_sick_hours_per_fte")]
		public System.Nullable<decimal> ofm_sick_hours_per_fte
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_sick_hours_per_fte");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_standard_dues_per_fte")]
		public Microsoft.Xrm.Sdk.Money ofm_standard_dues_per_fte
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_standard_dues_per_fte");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_standard_dues_per_fte", value);
			}
		}
		
		/// <summary>
		/// Value of the Standard Dues/FTE in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_standard_dues_per_fte_base")]
		public Microsoft.Xrm.Sdk.Money ofm_standard_dues_per_fte_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_standard_dues_per_fte_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_start_date")]
		public System.Nullable<System.DateTime> ofm_start_date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_start_date");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_start_date", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_statutory_breaks")]
		public System.Nullable<decimal> ofm_statutory_breaks
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_statutory_breaks");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supervisor_rate")]
		public string ofm_supervisor_rate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_supervisor_rate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_supervisor_rate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supervisor_ratio")]
		public System.Nullable<int> ofm_supervisor_ratio
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_supervisor_ratio");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_supervisor_ratio", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_total_fte_hours_per_year")]
		public System.Nullable<decimal> ofm_total_fte_hours_per_year
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_total_fte_hours_per_year");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_transport_reimbursement_per_km")]
		public Microsoft.Xrm.Sdk.Money ofm_transport_reimbursement_per_km
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_transport_reimbursement_per_km");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_transport_reimbursement_per_km", value);
			}
		}
		
		/// <summary>
		/// Value of the Transport reimbursement/km in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_transport_reimbursement_per_km_base")]
		public Microsoft.Xrm.Sdk.Money ofm_transport_reimbursement_per_km_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_transport_reimbursement_per_km_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_vacation_hours_per_fte")]
		public System.Nullable<decimal> ofm_vacation_hours_per_fte
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_vacation_hours_per_fte");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wage_grid_markup")]
		public System.Nullable<decimal> ofm_wage_grid_markup
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_wage_grid_markup");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_wage_grid_markup", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wages_ece_cost")]
		public Microsoft.Xrm.Sdk.Money ofm_wages_ece_cost
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_wages_ece_cost");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_wages_ece_cost", value);
			}
		}
		
		/// <summary>
		/// Value of the ECE Cost in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wages_ece_cost_base")]
		public Microsoft.Xrm.Sdk.Money ofm_wages_ece_cost_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_wages_ece_cost_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wages_ece_supervisor_differential")]
		public Microsoft.Xrm.Sdk.Money ofm_wages_ece_supervisor_differential
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_wages_ece_supervisor_differential");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_wages_ece_supervisor_differential", value);
			}
		}
		
		/// <summary>
		/// Value of the ECE Supervisor Differential in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wages_ece_supervisor_differential_base")]
		public Microsoft.Xrm.Sdk.Money ofm_wages_ece_supervisor_differential_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_wages_ece_supervisor_differential_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wages_ecea_cost")]
		public Microsoft.Xrm.Sdk.Money ofm_wages_ecea_cost
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_wages_ecea_cost");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_wages_ecea_cost", value);
			}
		}
		
		/// <summary>
		/// Value of the ECEA Cost in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wages_ecea_cost_base")]
		public Microsoft.Xrm.Sdk.Money ofm_wages_ecea_cost_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_wages_ecea_cost_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wages_ite_cost")]
		public Microsoft.Xrm.Sdk.Money ofm_wages_ite_cost
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_wages_ite_cost");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_wages_ite_cost", value);
			}
		}
		
		/// <summary>
		/// Value of the ITE cost in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wages_ite_cost_base")]
		public Microsoft.Xrm.Sdk.Money ofm_wages_ite_cost_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_wages_ite_cost_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wages_ite_sne_supervisor_differential")]
		public Microsoft.Xrm.Sdk.Money ofm_wages_ite_sne_supervisor_differential
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_wages_ite_sne_supervisor_differential");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_wages_ite_sne_supervisor_differential", value);
			}
		}
		
		/// <summary>
		/// Value of the ITE/SNE Supervisor Differential in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wages_ite_sne_supervisor_differential_base")]
		public Microsoft.Xrm.Sdk.Money ofm_wages_ite_sne_supervisor_differential_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_wages_ite_sne_supervisor_differential_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wages_ra_cost")]
		public Microsoft.Xrm.Sdk.Money ofm_wages_ra_cost
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_wages_ra_cost");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_wages_ra_cost", value);
			}
		}
		
		/// <summary>
		/// Value of the RA Cost in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wages_ra_cost_base")]
		public Microsoft.Xrm.Sdk.Money ofm_wages_ra_cost_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_wages_ra_cost_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wages_ra_supervisor_differential")]
		public Microsoft.Xrm.Sdk.Money ofm_wages_ra_supervisor_differential
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_wages_ra_supervisor_differential");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_wages_ra_supervisor_differential", value);
			}
		}
		
		/// <summary>
		/// Value of the RA Supervisor Differential in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wages_ra_supervisor_differential_base")]
		public Microsoft.Xrm.Sdk.Money ofm_wages_ra_supervisor_differential_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_wages_ra_supervisor_differential_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_wcb")]
		public System.Nullable<decimal> ofm_wcb
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_wcb");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_wcb", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_weeks_in_a_year")]
		public System.Nullable<int> ofm_weeks_in_a_year
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_weeks_in_a_year");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_weeks_in_a_year", value);
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> overriddencreatedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference ownerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference owningteam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference owninguser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Rate Schedule
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual ofm_rate_schedule_statecode? statecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_rate_schedule_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Reason for the status of the Rate Schedule
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ofm_rate_schedule_StatusCode? statuscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_rate_schedule_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> timezoneruleversionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the currency associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> utcconversiontimezonecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> versionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N ofm_rateschedule_cclr
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_rateschedule_cclr")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_cclr_ratio> ofm_rateschedule_cclr
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_cclr_ratio>("ofm_rateschedule_cclr", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_cclr_ratio>("ofm_rateschedule_cclr", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ofm_rateschedule_funding
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_rateschedule_funding")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_funding> ofm_rateschedule_funding
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_funding>("ofm_rateschedule_funding", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_funding>("ofm_rateschedule_funding", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ofm_rateschedule_fundingrate
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_rateschedule_fundingrate")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_funding_rate> ofm_rateschedule_fundingrate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_funding_rate>("ofm_rateschedule_fundingrate", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_funding_rate>("ofm_rateschedule_fundingrate", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_ofm_rate_schedule
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_rate_schedule")]
		public ECC.Core.DataContext.Team team_ofm_rate_schedule
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_rate_schedule", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_rate_schedule(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_rate_scheduleid"] = base.Id;
                        break;
                    case "ofm_rate_scheduleid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_request_category")]
	public partial class ofm_request_category : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ofm_request_category entity
		/// </summary>
		public static partial class Fields
		{
			public const string createdby = "createdby";
			public const string createdbyName = "createdbyname";
			public const string createdon = "createdon";
			public const string createdonbehalfby = "createdonbehalfby";
			public const string createdonbehalfbyName = "createdonbehalfbyname";
			public const string importsequencenumber = "importsequencenumber";
			public const string modifiedby = "modifiedby";
			public const string modifiedbyName = "modifiedbyname";
			public const string modifiedon = "modifiedon";
			public const string modifiedonbehalfby = "modifiedonbehalfby";
			public const string modifiedonbehalfbyName = "modifiedonbehalfbyname";
			public const string ofm_assistance_request_category = "ofm_assistance_request_category";
			public const string ofm_name = "ofm_name";
			public const string ofm_request_category_number = "ofm_request_category_number";
			public const string ofm_request_categoryid = "ofm_request_categoryid";
			public const string Id = "ofm_request_categoryid";
			public const string overriddencreatedon = "overriddencreatedon";
			public const string ownerid = "ownerid";
			public const string owneridName = "owneridname";
			public const string owningbusinessunit = "owningbusinessunit";
			public const string owningbusinessunitName = "owningbusinessunitname";
			public const string owningteam = "owningteam";
			public const string owningteamName = "owningteamname";
			public const string owninguser = "owninguser";
			public const string owninguserName = "owningusername";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string team_ofm_request_category = "team_ofm_request_category";
			public const string timezoneruleversionnumber = "timezoneruleversionnumber";
			public const string utcconversiontimezonecode = "utcconversiontimezonecode";
			public const string versionnumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_request_category(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_request_category(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_request_category(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_request_category() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "ofm_request_categoryid";
		
		public const string PrimaryNameAttribute = "ofm_name";
		
		public const string EntitySchemaName = "ofm_request_category";
		
		public const string EntityLogicalName = "ofm_request_category";
		
		public const string EntityLogicalCollectionName = "ofm_request_categories";
		
		public const string EntitySetName = "ofm_request_categories";
		
		public const int EntityTypeCode = 11367;
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> createdon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> importsequencenumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> modifiedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_name")]
		public string ofm_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_name", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_request_category_number")]
		public System.Nullable<int> ofm_request_category_number
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_request_category_number");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_request_category_number", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_request_categoryid")]
		public System.Nullable<System.Guid> ofm_request_categoryid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_request_categoryid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_request_categoryid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_request_categoryid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ofm_request_categoryid = value;
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> overriddencreatedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference ownerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference owningteam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference owninguser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Request Category
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual ofm_request_category_statecode? statecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_request_category_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Reason for the status of the Request Category
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ofm_request_category_StatusCode? statuscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_request_category_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> timezoneruleversionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> utcconversiontimezonecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> versionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N ofm_assistance_request_category
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_assistance_request_category")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_assistance_request> ofm_assistance_request_category
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_assistance_request>("ofm_assistance_request_category", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_assistance_request>("ofm_assistance_request_category", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_ofm_request_category
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_request_category")]
		public ECC.Core.DataContext.Team team_ofm_request_category
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_request_category", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_request_category(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_request_categoryid"] = base.Id;
                        break;
                    case "ofm_request_categoryid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
	
	/// <summary>
	/// Supplementary Schedule Record Per Calendar Year
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ofm_supplementary_schedule")]
	public partial class ofm_supplementary_schedule : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ofm_supplementary_schedule entity
		/// </summary>
		public static partial class Fields
		{
			public const string createdby = "createdby";
			public const string createdbyName = "createdbyname";
			public const string createdon = "createdon";
			public const string createdonbehalfby = "createdonbehalfby";
			public const string createdonbehalfbyName = "createdonbehalfbyname";
			public const string exchangerate = "exchangerate";
			public const string importsequencenumber = "importsequencenumber";
			public const string modifiedby = "modifiedby";
			public const string modifiedbyName = "modifiedbyname";
			public const string modifiedon = "modifiedon";
			public const string modifiedonbehalfby = "modifiedonbehalfby";
			public const string modifiedonbehalfbyName = "modifiedonbehalfbyname";
			public const string ofm_caption = "ofm_caption";
			public const string ofm_end_date = "ofm_end_date";
			public const string ofm_indigenous_10_to_20_spaces = "ofm_indigenous_10_to_20_spaces";
			public const string ofm_indigenous_10_to_20_spaces_base = "ofm_indigenous_10_to_20_spaces_base";
			public const string ofm_indigenous_ge_21_spaces = "ofm_indigenous_ge_21_spaces";
			public const string ofm_indigenous_ge_21_spaces_base = "ofm_indigenous_ge_21_spaces_base";
			public const string ofm_indigenous_le_9_spaces = "ofm_indigenous_le_9_spaces";
			public const string ofm_indigenous_le_9_spaces_base = "ofm_indigenous_le_9_spaces_base";
			public const string ofm_needs_10_to_20_spaces = "ofm_needs_10_to_20_spaces";
			public const string ofm_needs_10_to_20_spaces_base = "ofm_needs_10_to_20_spaces_base";
			public const string ofm_needs_ge_21_spaces = "ofm_needs_ge_21_spaces";
			public const string ofm_needs_ge_21_spaces_base = "ofm_needs_ge_21_spaces_base";
			public const string ofm_needs_le_9_spaces = "ofm_needs_le_9_spaces";
			public const string ofm_needs_le_9_spaces_base = "ofm_needs_le_9_spaces_base";
			public const string ofm_overnight_care_premium = "ofm_overnight_care_premium";
			public const string ofm_schedule_number = "ofm_schedule_number";
			public const string ofm_sqw_caps_for_centers = "ofm_sqw_caps_for_centers";
			public const string ofm_sqw_caps_for_homebased = "ofm_sqw_caps_for_homebased";
			public const string ofm_start_date = "ofm_start_date";
			public const string ofm_supplementary_scheduleid = "ofm_supplementary_scheduleid";
			public const string Id = "ofm_supplementary_scheduleid";
			public const string ofm_supplementaryschedule_allowance = "ofm_supplementaryschedule_allowance";
			public const string ofm_transport_ge_20_spaces_lease_cap_month = "ofm_transport_ge_20_spaces_lease_cap_month";
			public const string ofm_transport_ge_20_spaces_lease_cap_month_base = "ofm_transport_ge_20_spaces_lease_cap_month_base";
			public const string ofm_transport_less_20_spaces_lease_cap_month = "ofm_transport_less_20_spaces_lease_cap_month";
			public const string ofm_transport_less_20_spaces_lease_cap_month_base = "ofm_transport_less_20_spaces_lease_cap_month_base";
			public const string ofm_transport_reimbursement_rate_per_km = "ofm_transport_reimbursement_rate_per_km";
			public const string ofm_transport_reimbursement_rate_per_km_base = "ofm_transport_reimbursement_rate_per_km_base";
			public const string overriddencreatedon = "overriddencreatedon";
			public const string ownerid = "ownerid";
			public const string owneridName = "owneridname";
			public const string owningbusinessunit = "owningbusinessunit";
			public const string owningbusinessunitName = "owningbusinessunitname";
			public const string owningteam = "owningteam";
			public const string owningteamName = "owningteamname";
			public const string owninguser = "owninguser";
			public const string owninguserName = "owningusername";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string team_ofm_supplementary_schedule = "team_ofm_supplementary_schedule";
			public const string timezoneruleversionnumber = "timezoneruleversionnumber";
			public const string transactioncurrencyid = "transactioncurrencyid";
			public const string transactioncurrencyidName = "transactioncurrencyidname";
			public const string utcconversiontimezonecode = "utcconversiontimezonecode";
			public const string versionnumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_supplementary_schedule(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_supplementary_schedule(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_supplementary_schedule(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_supplementary_schedule() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "ofm_supplementary_scheduleid";
		
		public const string PrimaryNameAttribute = "ofm_caption";
		
		public const string EntitySchemaName = "ofm_supplementary_schedule";
		
		public const string EntityLogicalName = "ofm_supplementary_schedule";
		
		public const string EntityLogicalCollectionName = "ofm_supplementary_schedules";
		
		public const string EntitySetName = "ofm_supplementary_schedules";
		
		public const int EntityTypeCode = 11474;
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> createdon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the entity with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> exchangerate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> importsequencenumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> modifiedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		/// <summary>
		/// OFM Supplementary Schedule Record Identifier
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_caption")]
		public string ofm_caption
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ofm_caption");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_caption", value);
			}
		}
		
		/// <summary>
		/// End Date
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_end_date")]
		public System.Nullable<System.DateTime> ofm_end_date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_end_date");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_end_date", value);
			}
		}
		
		/// <summary>
		/// Facilities with 10 - 20 spaces
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_indigenous_10_to_20_spaces")]
		public Microsoft.Xrm.Sdk.Money ofm_indigenous_10_to_20_spaces
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_indigenous_10_to_20_spaces");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_indigenous_10_to_20_spaces", value);
			}
		}
		
		/// <summary>
		/// Value of the Facilities with 10 - 20 spaces in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_indigenous_10_to_20_spaces_base")]
		public Microsoft.Xrm.Sdk.Money ofm_indigenous_10_to_20_spaces_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_indigenous_10_to_20_spaces_base");
			}
		}
		
		/// <summary>
		/// Facilities with 20+ spaces
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_indigenous_ge_21_spaces")]
		public Microsoft.Xrm.Sdk.Money ofm_indigenous_ge_21_spaces
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_indigenous_ge_21_spaces");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_indigenous_ge_21_spaces", value);
			}
		}
		
		/// <summary>
		/// Value of the Facilities with 20+ spaces in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_indigenous_ge_21_spaces_base")]
		public Microsoft.Xrm.Sdk.Money ofm_indigenous_ge_21_spaces_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_indigenous_ge_21_spaces_base");
			}
		}
		
		/// <summary>
		/// Facilities with 9 or less spaces
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_indigenous_le_9_spaces")]
		public Microsoft.Xrm.Sdk.Money ofm_indigenous_le_9_spaces
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_indigenous_le_9_spaces");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_indigenous_le_9_spaces", value);
			}
		}
		
		/// <summary>
		/// Value of the Facilities with 9 or less spaces in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_indigenous_le_9_spaces_base")]
		public Microsoft.Xrm.Sdk.Money ofm_indigenous_le_9_spaces_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_indigenous_le_9_spaces_base");
			}
		}
		
		/// <summary>
		/// Facilities with 10 - 20 spaces
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_needs_10_to_20_spaces")]
		public Microsoft.Xrm.Sdk.Money ofm_needs_10_to_20_spaces
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_needs_10_to_20_spaces");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_needs_10_to_20_spaces", value);
			}
		}
		
		/// <summary>
		/// Value of the Facilities with 10 - 20 spaces in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_needs_10_to_20_spaces_base")]
		public Microsoft.Xrm.Sdk.Money ofm_needs_10_to_20_spaces_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_needs_10_to_20_spaces_base");
			}
		}
		
		/// <summary>
		/// Facilities with 20+ spaces
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_needs_ge_21_spaces")]
		public Microsoft.Xrm.Sdk.Money ofm_needs_ge_21_spaces
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_needs_ge_21_spaces");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_needs_ge_21_spaces", value);
			}
		}
		
		/// <summary>
		/// Value of the Facilities with 20+ spaces in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_needs_ge_21_spaces_base")]
		public Microsoft.Xrm.Sdk.Money ofm_needs_ge_21_spaces_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_needs_ge_21_spaces_base");
			}
		}
		
		/// <summary>
		/// Facilities with 9 or less spaces
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_needs_le_9_spaces")]
		public Microsoft.Xrm.Sdk.Money ofm_needs_le_9_spaces
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_needs_le_9_spaces");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_needs_le_9_spaces", value);
			}
		}
		
		/// <summary>
		/// Value of the Facilities with 9 or less spaces in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_needs_le_9_spaces_base")]
		public Microsoft.Xrm.Sdk.Money ofm_needs_le_9_spaces_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_needs_le_9_spaces_base");
			}
		}
		
		/// <summary>
		/// Premium
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_overnight_care_premium")]
		public System.Nullable<decimal> ofm_overnight_care_premium
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_overnight_care_premium");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_overnight_care_premium", value);
			}
		}
		
		/// <summary>
		/// Schedule Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_schedule_number")]
		public System.Nullable<int> ofm_schedule_number
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ofm_schedule_number");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_schedule_number", value);
			}
		}
		
		/// <summary>
		/// Caps for Centers
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_sqw_caps_for_centers")]
		public System.Nullable<decimal> ofm_sqw_caps_for_centers
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_sqw_caps_for_centers");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_sqw_caps_for_centers", value);
			}
		}
		
		/// <summary>
		/// Caps for Home-based
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_sqw_caps_for_homebased")]
		public System.Nullable<decimal> ofm_sqw_caps_for_homebased
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("ofm_sqw_caps_for_homebased");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_sqw_caps_for_homebased", value);
			}
		}
		
		/// <summary>
		/// Start Date
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_start_date")]
		public System.Nullable<System.DateTime> ofm_start_date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ofm_start_date");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_start_date", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supplementary_scheduleid")]
		public System.Nullable<System.Guid> ofm_supplementary_scheduleid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ofm_supplementary_scheduleid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_supplementary_scheduleid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_supplementary_scheduleid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ofm_supplementary_scheduleid = value;
			}
		}
		
		/// <summary>
		/// >= 20 spaces lease cap/month
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_transport_ge_20_spaces_lease_cap_month")]
		public Microsoft.Xrm.Sdk.Money ofm_transport_ge_20_spaces_lease_cap_month
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_transport_ge_20_spaces_lease_cap_month");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_transport_ge_20_spaces_lease_cap_month", value);
			}
		}
		
		/// <summary>
		/// Value of the >= 20 spaces lease cap/month in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_transport_ge_20_spaces_lease_cap_month_base")]
		public Microsoft.Xrm.Sdk.Money ofm_transport_ge_20_spaces_lease_cap_month_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_transport_ge_20_spaces_lease_cap_month_base");
			}
		}
		
		/// <summary>
		/// < 20 spaces lease cap/month
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_transport_less_20_spaces_lease_cap_month")]
		public Microsoft.Xrm.Sdk.Money ofm_transport_less_20_spaces_lease_cap_month
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_transport_less_20_spaces_lease_cap_month");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_transport_less_20_spaces_lease_cap_month", value);
			}
		}
		
		/// <summary>
		/// Value of the < 20 spaces lease cap/month in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_transport_less_20_spaces_lease_cap_month_base")]
		public Microsoft.Xrm.Sdk.Money ofm_transport_less_20_spaces_lease_cap_month_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_transport_less_20_spaces_lease_cap_month_base");
			}
		}
		
		/// <summary>
		/// Transport reimbursement/km
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_transport_reimbursement_rate_per_km")]
		public Microsoft.Xrm.Sdk.Money ofm_transport_reimbursement_rate_per_km
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_transport_reimbursement_rate_per_km");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ofm_transport_reimbursement_rate_per_km", value);
			}
		}
		
		/// <summary>
		/// Value of the Transport reimbursement/km in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ofm_transport_reimbursement_rate_per_km_base")]
		public Microsoft.Xrm.Sdk.Money ofm_transport_reimbursement_rate_per_km_base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("ofm_transport_reimbursement_rate_per_km_base");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> overriddencreatedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference ownerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference owningbusinessunit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference owningteam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference owninguser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the Supplementary Schedule
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual ofm_supplementary_schedule_statecode? statecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_supplementary_schedule_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Reason for the status of the Supplementary Schedule
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ofm_supplementary_schedule_StatusCode? statuscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ofm_supplementary_schedule_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> timezoneruleversionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the currency associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> utcconversiontimezonecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> versionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N ofm_supplementaryschedule_allowance
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ofm_supplementaryschedule_allowance")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_allowance> ofm_supplementaryschedule_allowance
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_allowance>("ofm_supplementaryschedule_allowance", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_allowance>("ofm_supplementaryschedule_allowance", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_ofm_supplementary_schedule
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_supplementary_schedule")]
		public ECC.Core.DataContext.Team team_ofm_supplementary_schedule
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECC.Core.DataContext.Team>("team_ofm_supplementary_schedule", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ofm_supplementary_schedule(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ofm_supplementary_scheduleid"] = base.Id;
                        break;
                    case "ofm_supplementary_scheduleid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
	
	/// <summary>
	/// Collection of system users that routinely collaborate. Teams can be used to simplify record sharing and provide team members with common access to organization data when team members belong to different Business Units.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("team")]
	public partial class Team : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the team entity
		/// </summary>
		public static partial class Fields
		{
			public const string administratorid = "administratorid";
			public const string administratoridName = "administratoridname";
			public const string azureactivedirectoryobjectid = "azureactivedirectoryobjectid";
			public const string businessunitid = "businessunitid";
			public const string businessunitidName = "businessunitidname";
			public const string createdby = "createdby";
			public const string createdbyName = "createdbyname";
			public const string createdon = "createdon";
			public const string createdonbehalfby = "createdonbehalfby";
			public const string createdonbehalfbyName = "createdonbehalfbyname";
			public const string delegatedauthorizationid = "delegatedauthorizationid";
			public const string delegatedauthorizationidName = "delegatedauthorizationidname";
			public const string description = "description";
			public const string emailaddress = "emailaddress";
			public const string exchangerate = "exchangerate";
			public const string importsequencenumber = "importsequencenumber";
			public const string isdefault = "isdefault";
			public const string issastokenset = "issastokenset";
			public const string membershiptype = "membershiptype";
			public const string modifiedby = "modifiedby";
			public const string modifiedbyName = "modifiedbyname";
			public const string modifiedon = "modifiedon";
			public const string modifiedonbehalfby = "modifiedonbehalfby";
			public const string modifiedonbehalfbyName = "modifiedonbehalfbyname";
			public const string msft_datastate = "msft_datastate";
			public const string name = "name";
			public const string organizationid = "organizationid";
			public const string organizationidName = "organizationidname";
			public const string overriddencreatedon = "overriddencreatedon";
			public const string processid = "processid";
			public const string queueid = "queueid";
			public const string queueidName = "queueidname";
			public const string regardingobjectid = "regardingobjectid";
			public const string regardingobjectidName = "regardingobjectidname";
			public const string sharelinkqualifier = "sharelinkqualifier";
			public const string stageid = "stageid";
			public const string stageidName = "stageidname";
			public const string systemmanaged = "systemmanaged";
			public const string team_accounts = "team_accounts";
			public const string team_contacts = "team_contacts";
			public const string team_email = "team_email";
			public const string team_ofm_allowance = "team_ofm_allowance";
			public const string team_ofm_application = "team_ofm_application";
			public const string team_ofm_assistance_request = "team_ofm_assistance_request";
			public const string team_ofm_bceid_facility = "team_ofm_bceid_facility";
			public const string team_ofm_cclr_ratio = "team_ofm_cclr_ratio";
			public const string team_ofm_communication_type = "team_ofm_communication_type";
			public const string team_ofm_conversation = "team_ofm_conversation";
			public const string team_ofm_document = "team_ofm_document";
			public const string team_ofm_facility_request = "team_ofm_facility_request";
			public const string team_ofm_fiscal_year = "team_ofm_fiscal_year";
			public const string team_ofm_funding = "team_ofm_funding";
			public const string team_ofm_funding_rate = "team_ofm_funding_rate";
			public const string team_ofm_licence = "team_ofm_licence";
			public const string team_ofm_licence_detail = "team_ofm_licence_detail";
			public const string team_ofm_progress_tracker = "team_ofm_progress_tracker";
			public const string team_ofm_rate_schedule = "team_ofm_rate_schedule";
			public const string team_ofm_request_category = "team_ofm_request_category";
			public const string team_ofm_supplementary_schedule = "team_ofm_supplementary_schedule";
			public const string teamid = "teamid";
			public const string Id = "teamid";
			public const string teamtemplateid = "teamtemplateid";
			public const string teamtemplateidName = "teamtemplateidname";
			public const string teamtype = "teamtype";
			public const string transactioncurrencyid = "transactioncurrencyid";
			public const string transactioncurrencyidName = "transactioncurrencyidname";
			public const string traversedpath = "traversedpath";
			public const string versionnumber = "versionnumber";
			public const string yominame = "yominame";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public Team(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public Team(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public Team(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		public const string AlternateKeys = "azureactivedirectoryobjectid,membershiptype";
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Team() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "teamid";
		
		public const string PrimaryNameAttribute = "name";
		
		public const string EntitySchemaName = "Team";
		
		public const string EntityLogicalName = "team";
		
		public const string EntityLogicalCollectionName = "teams";
		
		public const string EntitySetName = "teams";
		
		public const int EntityTypeCode = 9;
		
		/// <summary>
		/// Unique identifier of the user primary responsible for the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("administratorid")]
		public Microsoft.Xrm.Sdk.EntityReference administratorid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("administratorid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("administratorid", value);
			}
		}
		
		/// <summary>
		/// The object Id for a group.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("azureactivedirectoryobjectid")]
		public System.Nullable<System.Guid> azureactivedirectoryobjectid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("azureactivedirectoryobjectid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("azureactivedirectoryobjectid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the business unit with which the team is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessunitid")]
		public Microsoft.Xrm.Sdk.EntityReference businessunitid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("businessunitid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("businessunitid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the team was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> createdon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		/// <summary>
		/// The delegated authorization context for the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("delegatedauthorizationid")]
		public Microsoft.Xrm.Sdk.EntityReference delegatedauthorizationid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("delegatedauthorizationid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("delegatedauthorizationid", value);
			}
		}
		
		/// <summary>
		/// Description of the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string description
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		/// <summary>
		/// Email address for the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress")]
		public string emailaddress
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("emailaddress");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("emailaddress", value);
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the team with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> exchangerate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Unique identifier of the data import or data migration that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> importsequencenumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Information about whether the team is a default business unit team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdefault")]
		public System.Nullable<bool> isdefault
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isdefault");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("issastokenset")]
		public System.Nullable<bool> issastokenset
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("issastokenset");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("membershiptype")]
		public virtual Team_membershiptype? membershiptype
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Team_membershiptype?)(EntityOptionSetEnum.GetEnum(this, "membershiptype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("membershiptype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who last modified the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the team was last modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> modifiedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who last modified the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msft_datastate")]
		public virtual msft_DataState? msft_datastate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((msft_DataState?)(EntityOptionSetEnum.GetEnum(this, "msft_datastate")));
			}
		}
		
		/// <summary>
		/// Name of the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the organization associated with the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public System.Nullable<System.Guid> organizationid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("organizationid");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> overriddencreatedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Shows the ID of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> processid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("processid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the default queue for the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("queueid")]
		public Microsoft.Xrm.Sdk.EntityReference queueid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("queueid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("queueid", value);
			}
		}
		
		/// <summary>
		/// Choose the record that the team relates to.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		public Microsoft.Xrm.Sdk.EntityReference regardingobjectid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("regardingobjectid", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sharelinkqualifier")]
		public string sharelinkqualifier
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("sharelinkqualifier");
			}
		}
		
		/// <summary>
		/// Shows the ID of the stage.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> stageid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("stageid", value);
			}
		}
		
		/// <summary>
		/// Select whether the team will be managed by the system.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("systemmanaged")]
		public System.Nullable<bool> systemmanaged
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("systemmanaged");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamid")]
		public System.Nullable<System.Guid> teamid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("teamid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("teamid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.teamid = value;
			}
		}
		
		/// <summary>
		/// Shows the team template that is associated with the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamtemplateid")]
		public Microsoft.Xrm.Sdk.EntityReference teamtemplateid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("teamtemplateid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("teamtemplateid", value);
			}
		}
		
		/// <summary>
		/// Select the team type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamtype")]
		public virtual Team_teamtype? teamtype
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Team_teamtype?)(EntityOptionSetEnum.GetEnum(this, "teamtype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("teamtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Unique identifier of the currency associated with the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string traversedpath
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("traversedpath", value);
			}
		}
		
		/// <summary>
		/// Version number of the team.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> versionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// Pronunciation of the full name of the team, written in phonetic hiragana or katakana characters.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yominame")]
		public string yominame
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("yominame");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("yominame", value);
			}
		}
		
		/// <summary>
		/// 1:N team_accounts
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_accounts")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Account> team_accounts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.Account>("team_accounts", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.Account>("team_accounts", null, value);
			}
		}
		
		/// <summary>
		/// 1:N team_contacts
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_contacts")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Contact> team_contacts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.Contact>("team_contacts", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.Contact>("team_contacts", null, value);
			}
		}
		
		/// <summary>
		/// 1:N team_email
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_email")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.Email> team_email
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.Email>("team_email", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.Email>("team_email", null, value);
			}
		}
		
		/// <summary>
		/// 1:N team_ofm_allowance
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_allowance")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_allowance> team_ofm_allowance
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_allowance>("team_ofm_allowance", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_allowance>("team_ofm_allowance", null, value);
			}
		}
		
		/// <summary>
		/// 1:N team_ofm_application
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_application")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_application> team_ofm_application
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_application>("team_ofm_application", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_application>("team_ofm_application", null, value);
			}
		}
		
		/// <summary>
		/// 1:N team_ofm_assistance_request
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_assistance_request")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_assistance_request> team_ofm_assistance_request
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_assistance_request>("team_ofm_assistance_request", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_assistance_request>("team_ofm_assistance_request", null, value);
			}
		}
		
		/// <summary>
		/// 1:N team_ofm_bceid_facility
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_bceid_facility")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_bceid_facility> team_ofm_bceid_facility
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_bceid_facility>("team_ofm_bceid_facility", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_bceid_facility>("team_ofm_bceid_facility", null, value);
			}
		}
		
		/// <summary>
		/// 1:N team_ofm_cclr_ratio
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_cclr_ratio")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_cclr_ratio> team_ofm_cclr_ratio
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_cclr_ratio>("team_ofm_cclr_ratio", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_cclr_ratio>("team_ofm_cclr_ratio", null, value);
			}
		}
		
		/// <summary>
		/// 1:N team_ofm_communication_type
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_communication_type")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_communication_type> team_ofm_communication_type
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_communication_type>("team_ofm_communication_type", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_communication_type>("team_ofm_communication_type", null, value);
			}
		}
		
		/// <summary>
		/// 1:N team_ofm_conversation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_conversation")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_conversation> team_ofm_conversation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_conversation>("team_ofm_conversation", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_conversation>("team_ofm_conversation", null, value);
			}
		}
		
		/// <summary>
		/// 1:N team_ofm_document
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_document")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_document> team_ofm_document
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_document>("team_ofm_document", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_document>("team_ofm_document", null, value);
			}
		}
		
		/// <summary>
		/// 1:N team_ofm_facility_request
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_facility_request")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_facility_request> team_ofm_facility_request
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_facility_request>("team_ofm_facility_request", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_facility_request>("team_ofm_facility_request", null, value);
			}
		}
		
		/// <summary>
		/// 1:N team_ofm_fiscal_year
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_fiscal_year")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_fiscal_year> team_ofm_fiscal_year
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_fiscal_year>("team_ofm_fiscal_year", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_fiscal_year>("team_ofm_fiscal_year", null, value);
			}
		}
		
		/// <summary>
		/// 1:N team_ofm_funding
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_funding")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_funding> team_ofm_funding
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_funding>("team_ofm_funding", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_funding>("team_ofm_funding", null, value);
			}
		}
		
		/// <summary>
		/// 1:N team_ofm_funding_rate
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_funding_rate")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_funding_rate> team_ofm_funding_rate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_funding_rate>("team_ofm_funding_rate", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_funding_rate>("team_ofm_funding_rate", null, value);
			}
		}
		
		/// <summary>
		/// 1:N team_ofm_licence
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_licence")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_licence> team_ofm_licence
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_licence>("team_ofm_licence", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_licence>("team_ofm_licence", null, value);
			}
		}
		
		/// <summary>
		/// 1:N team_ofm_licence_detail
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_licence_detail")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_licence_detail> team_ofm_licence_detail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_licence_detail>("team_ofm_licence_detail", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_licence_detail>("team_ofm_licence_detail", null, value);
			}
		}
		
		/// <summary>
		/// 1:N team_ofm_progress_tracker
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_progress_tracker")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_progress_tracker> team_ofm_progress_tracker
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_progress_tracker>("team_ofm_progress_tracker", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_progress_tracker>("team_ofm_progress_tracker", null, value);
			}
		}
		
		/// <summary>
		/// 1:N team_ofm_rate_schedule
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_rate_schedule")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_rate_schedule> team_ofm_rate_schedule
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_rate_schedule>("team_ofm_rate_schedule", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_rate_schedule>("team_ofm_rate_schedule", null, value);
			}
		}
		
		/// <summary>
		/// 1:N team_ofm_request_category
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_request_category")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_request_category> team_ofm_request_category
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_request_category>("team_ofm_request_category", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_request_category>("team_ofm_request_category", null, value);
			}
		}
		
		/// <summary>
		/// 1:N team_ofm_supplementary_schedule
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ofm_supplementary_schedule")]
		public System.Collections.Generic.IEnumerable<ECC.Core.DataContext.ofm_supplementary_schedule> team_ofm_supplementary_schedule
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECC.Core.DataContext.ofm_supplementary_schedule>("team_ofm_supplementary_schedule", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECC.Core.DataContext.ofm_supplementary_schedule>("team_ofm_supplementary_schedule", null, value);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Team(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["teamid"] = base.Id;
                        break;
                    case "teamid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
	
	/// <summary>
	/// Time zone definition, including name and time zone code.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("timezonedefinition")]
	public partial class TimeZoneDefinition : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the timezonedefinition entity
		/// </summary>
		public static partial class Fields
		{
			public const string bias = "bias";
			public const string createdby = "createdby";
			public const string createdbyName = "createdbyname";
			public const string createdon = "createdon";
			public const string createdonbehalfby = "createdonbehalfby";
			public const string createdonbehalfbyName = "createdonbehalfbyname";
			public const string daylightname = "daylightname";
			public const string modifiedby = "modifiedby";
			public const string modifiedbyName = "modifiedbyname";
			public const string modifiedon = "modifiedon";
			public const string modifiedonbehalfby = "modifiedonbehalfby";
			public const string modifiedonbehalfbyName = "modifiedonbehalfbyname";
			public const string organizationid = "organizationid";
			public const string retiredorder = "retiredorder";
			public const string standardname = "standardname";
			public const string timezonecode = "timezonecode";
			public const string timezonedefinitionid = "timezonedefinitionid";
			public const string Id = "timezonedefinitionid";
			public const string userinterfacename = "userinterfacename";
			public const string versionnumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public TimeZoneDefinition(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public TimeZoneDefinition(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public TimeZoneDefinition(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public TimeZoneDefinition() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "timezonedefinitionid";
		
		public const string PrimaryNameAttribute = "userinterfacename";
		
		public const string EntitySchemaName = "TimeZoneDefinition";
		
		public const string EntityLogicalName = "timezonedefinition";
		
		public const string EntityLogicalCollectionName = "timezonedefinitions";
		
		public const string EntitySetName = "timezonedefinitions";
		
		public const int EntityTypeCode = 4810;
		
		/// <summary>
		/// Base time bias of the time zone.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bias")]
		public System.Nullable<int> bias
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("bias");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("bias", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the time zone record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the time zone record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> createdon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the timezonedefinition.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Time zone name for the daylight time.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("daylightname")]
		public string daylightname
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("daylightname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("daylightname", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who last modified the time zone record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the time zone record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> modifiedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who last modified the timezonedefinition.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the organization associated with the time zone definition.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference organizationid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		/// <summary>
		/// Order an entry for a time zone definition is retired. 0 for the latest entry.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("retiredorder")]
		public System.Nullable<int> retiredorder
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("retiredorder");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("retiredorder", value);
			}
		}
		
		/// <summary>
		/// Time zone name for the standard time.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("standardname")]
		public string standardname
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("standardname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("standardname", value);
			}
		}
		
		/// <summary>
		/// Time zone identification code.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonecode")]
		public System.Nullable<int> timezonecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezonecode", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the time zone record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonedefinitionid")]
		public System.Nullable<System.Guid> timezonedefinitionid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("timezonedefinitionid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezonedefinitionid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonedefinitionid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.timezonedefinitionid = value;
			}
		}
		
		/// <summary>
		/// Display name for the time zone in the Microsoft Windows registry.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("userinterfacename")]
		public string userinterfacename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("userinterfacename");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("userinterfacename", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> versionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public TimeZoneDefinition(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["timezonedefinitionid"] = base.Id;
                        break;
                    case "timezonedefinitionid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
	
	/// <summary>
	/// User's preferred settings.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("usersettings")]
	public partial class UserSettings : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the usersettings entity
		/// </summary>
		public static partial class Fields
		{
			public const string addressbooksyncinterval = "addressbooksyncinterval";
			public const string advancedfindstartupmode = "advancedfindstartupmode";
			public const string allowemailcredentials = "allowemailcredentials";
			public const string amdesignator = "amdesignator";
			public const string autocaptureuserstatus = "autocaptureuserstatus";
			public const string autocreatecontactonpromote = "autocreatecontactonpromote";
			public const string businessunitid = "businessunitid";
			public const string businessunitidName = "businessunitidname";
			public const string calendartype = "calendartype";
			public const string createdby = "createdby";
			public const string createdbyName = "createdbyname";
			public const string createdon = "createdon";
			public const string createdonbehalfby = "createdonbehalfby";
			public const string createdonbehalfbyName = "createdonbehalfbyname";
			public const string currencydecimalprecision = "currencydecimalprecision";
			public const string currencyformatcode = "currencyformatcode";
			public const string currencysymbol = "currencysymbol";
			public const string d365autoinstallattemptstatus = "d365autoinstallattemptstatus";
			public const string datavalidationmodeforexporttoexcel = "datavalidationmodeforexporttoexcel";
			public const string dateformatcode = "dateformatcode";
			public const string dateformatstring = "dateformatstring";
			public const string dateseparator = "dateseparator";
			public const string decimalsymbol = "decimalsymbol";
			public const string defaultcalendarview = "defaultcalendarview";
			public const string defaultcountrycode = "defaultcountrycode";
			public const string defaultdashboardid = "defaultdashboardid";
			public const string defaultsearchexperience = "defaultsearchexperience";
			public const string emailpassword = "emailpassword";
			public const string emailusername = "emailusername";
			public const string entityformmode = "entityformmode";
			public const string fullnameconventioncode = "fullnameconventioncode";
			public const string getstartedpanecontentenabled = "getstartedpanecontentenabled";
			public const string helplanguageid = "helplanguageid";
			public const string homepagearea = "homepagearea";
			public const string homepagelayout = "homepagelayout";
			public const string homepagesubarea = "homepagesubarea";
			public const string ignoreunsolicitedemail = "ignoreunsolicitedemail";
			public const string incomingemailfilteringmethod = "incomingemailfilteringmethod";
			public const string isappsforcrmalertdismissed = "isappsforcrmalertdismissed";
			public const string isautodatacaptureenabled = "isautodatacaptureenabled";
			public const string isdefaultcountrycodecheckenabled = "isdefaultcountrycodecheckenabled";
			public const string isduplicatedetectionenabledwhengoingonline = "isduplicatedetectionenabledwhengoingonline";
			public const string isemailconversationviewenabled = "isemailconversationviewenabled";
			public const string isguidedhelpenabled = "isguidedhelpenabled";
			public const string isresourcebookingexchangesyncenabled = "isresourcebookingexchangesyncenabled";
			public const string issendasallowed = "issendasallowed";
			public const string lastalertsviewedtime = "lastalertsviewedtime";
			public const string lastmodifiedtimeforviewpersonalizationsettings = "lastmodifiedtimeforviewpersonalizationsettings";
			public const string localeid = "localeid";
			public const string longdateformatcode = "longdateformatcode";
			public const string modifiedby = "modifiedby";
			public const string modifiedbyName = "modifiedbyname";
			public const string modifiedon = "modifiedon";
			public const string modifiedonbehalfby = "modifiedonbehalfby";
			public const string modifiedonbehalfbyName = "modifiedonbehalfbyname";
			public const string negativecurrencyformatcode = "negativecurrencyformatcode";
			public const string negativeformatcode = "negativeformatcode";
			public const string nexttrackingnumber = "nexttrackingnumber";
			public const string numbergroupformat = "numbergroupformat";
			public const string numberseparator = "numberseparator";
			public const string offlinesyncinterval = "offlinesyncinterval";
			public const string outlooksyncinterval = "outlooksyncinterval";
			public const string paginglimit = "paginglimit";
			public const string personalizationsettings = "personalizationsettings";
			public const string pmdesignator = "pmdesignator";
			public const string preferredsolution = "preferredsolution";
			public const string preferredsolutionName = "preferredsolutionname";
			public const string pricingdecimalprecision = "pricingdecimalprecision";
			public const string releasechannel = "releasechannel";
			public const string reportscripterrors = "reportscripterrors";
			public const string resourcebookingexchangesyncversion = "resourcebookingexchangesyncversion";
			public const string selectedglobalfilterid = "selectedglobalfilterid";
			public const string showweeknumber = "showweeknumber";
			public const string splitviewstate = "splitviewstate";
			public const string synccontactcompany = "synccontactcompany";
			public const string systemuserid = "systemuserid";
			public const string Id = "systemuserid";
			public const string systemuseridName = "systemuseridname";
			public const string tablescopeddvsearchfeatureteachingbubbleviews = "tablescopeddvsearchfeatureteachingbubbleviews";
			public const string tablescopeddvsearchquickfindteachingbubbleviews = "tablescopeddvsearchquickfindteachingbubbleviews";
			public const string timeformatcode = "timeformatcode";
			public const string timeformatstring = "timeformatstring";
			public const string timeseparator = "timeseparator";
			public const string timezonebias = "timezonebias";
			public const string timezonecode = "timezonecode";
			public const string timezonedaylightbias = "timezonedaylightbias";
			public const string timezonedaylightday = "timezonedaylightday";
			public const string timezonedaylightdayofweek = "timezonedaylightdayofweek";
			public const string timezonedaylighthour = "timezonedaylighthour";
			public const string timezonedaylightminute = "timezonedaylightminute";
			public const string timezonedaylightmonth = "timezonedaylightmonth";
			public const string timezonedaylightsecond = "timezonedaylightsecond";
			public const string timezonedaylightyear = "timezonedaylightyear";
			public const string timezonestandardbias = "timezonestandardbias";
			public const string timezonestandardday = "timezonestandardday";
			public const string timezonestandarddayofweek = "timezonestandarddayofweek";
			public const string timezonestandardhour = "timezonestandardhour";
			public const string timezonestandardminute = "timezonestandardminute";
			public const string timezonestandardmonth = "timezonestandardmonth";
			public const string timezonestandardsecond = "timezonestandardsecond";
			public const string timezonestandardyear = "timezonestandardyear";
			public const string trackingtokenid = "trackingtokenid";
			public const string transactioncurrencyid = "transactioncurrencyid";
			public const string transactioncurrencyidName = "transactioncurrencyidname";
			public const string trytogglesets = "trytogglesets";
			public const string trytogglestatus = "trytogglestatus";
			public const string uilanguageid = "uilanguageid";
			public const string usecrmformforappointment = "usecrmformforappointment";
			public const string usecrmformforcontact = "usecrmformforcontact";
			public const string usecrmformforemail = "usecrmformforemail";
			public const string usecrmformfortask = "usecrmformfortask";
			public const string useimagestrips = "useimagestrips";
			public const string userprofile = "userprofile";
			public const string versionnumber = "versionnumber";
			public const string visualizationpanelayout = "visualizationpanelayout";
			public const string workdaystarttime = "workdaystarttime";
			public const string workdaystoptime = "workdaystoptime";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public UserSettings(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public UserSettings(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public UserSettings(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public UserSettings() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "systemuserid";
		
		public const string EntitySchemaName = "UserSettings";
		
		public const string EntityLogicalName = "usersettings";
		
		public const string EntityLogicalCollectionName = "usersettingses";
		
		public const string EntitySetName = "usersettingscollection";
		
		public const int EntityTypeCode = 150;
		
		/// <summary>
		/// Normal polling frequency used for address book synchronization in Microsoft Office Outlook.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("addressbooksyncinterval")]
		public System.Nullable<int> addressbooksyncinterval
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("addressbooksyncinterval");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("addressbooksyncinterval", value);
			}
		}
		
		/// <summary>
		/// Default mode, such as simple or detailed, for advanced find.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("advancedfindstartupmode")]
		public System.Nullable<int> advancedfindstartupmode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("advancedfindstartupmode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("advancedfindstartupmode", value);
			}
		}
		
		/// <summary>
		/// This attribute is no longer used. The data is now in the Mailbox.AllowEmailConnectorToUseCredentials attribute.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowemailcredentials")]
		[System.ObsoleteAttribute()]
		public System.Nullable<bool> allowemailcredentials
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("allowemailcredentials");
			}
		}
		
		/// <summary>
		/// AM designator to use in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("amdesignator")]
		public string amdesignator
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("amdesignator");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("amdesignator", value);
			}
		}
		
		/// <summary>
		/// Set user status for ADC Suggestions
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("autocaptureuserstatus")]
		public System.Nullable<int> autocaptureuserstatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("autocaptureuserstatus");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("autocaptureuserstatus", value);
			}
		}
		
		/// <summary>
		/// Auto-create contact on client promote
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("autocreatecontactonpromote")]
		public System.Nullable<int> autocreatecontactonpromote
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("autocreatecontactonpromote");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("autocreatecontactonpromote", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the business unit with which the user is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessunitid")]
		public System.Nullable<System.Guid> businessunitid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("businessunitid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("businessunitid", value);
			}
		}
		
		/// <summary>
		/// Calendar type for the system. Set to Gregorian US by default.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("calendartype")]
		public System.Nullable<int> calendartype
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("calendartype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("calendartype", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the user settings.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the user settings object was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> createdon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the usersettings.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Number of decimal places that can be used for currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currencydecimalprecision")]
		[System.ObsoleteAttribute()]
		public System.Nullable<int> currencydecimalprecision
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("currencydecimalprecision");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("currencydecimalprecision", value);
			}
		}
		
		/// <summary>
		/// Information about how currency symbols are placed in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currencyformatcode")]
		public System.Nullable<int> currencyformatcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("currencyformatcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("currencyformatcode", value);
			}
		}
		
		/// <summary>
		/// Symbol used for currency in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currencysymbol")]
		public string currencysymbol
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("currencysymbol");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("currencysymbol", value);
			}
		}
		
		/// <summary>
		/// Determines the status of auto install of Dynamics 365 to Teams attempt has been completed
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("d365autoinstallattemptstatus")]
		public virtual UserSettings_d365autoinstallattemptstatus? d365autoinstallattemptstatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((UserSettings_d365autoinstallattemptstatus?)(EntityOptionSetEnum.GetEnum(this, "d365autoinstallattemptstatus")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("d365autoinstallattemptstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Information that specifies the level of data validation in excel worksheets exported in a format suitable for import.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("datavalidationmodeforexporttoexcel")]
		public virtual UserSettings_datavalidationmodeforexporttoexcel? datavalidationmodeforexporttoexcel
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((UserSettings_datavalidationmodeforexporttoexcel?)(EntityOptionSetEnum.GetEnum(this, "datavalidationmodeforexporttoexcel")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("datavalidationmodeforexporttoexcel", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Information about how the date is displayed in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dateformatcode")]
		public System.Nullable<int> dateformatcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dateformatcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dateformatcode", value);
			}
		}
		
		/// <summary>
		/// String showing how the date is displayed throughout Microsoft 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dateformatstring")]
		public string dateformatstring
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dateformatstring");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dateformatstring", value);
			}
		}
		
		/// <summary>
		/// Character used to separate the month, the day, and the year in dates in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dateseparator")]
		public string dateseparator
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dateseparator");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("dateseparator", value);
			}
		}
		
		/// <summary>
		/// Symbol used for decimal in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("decimalsymbol")]
		public string decimalsymbol
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("decimalsymbol");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("decimalsymbol", value);
			}
		}
		
		/// <summary>
		/// Default calendar view for the user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultcalendarview")]
		public System.Nullable<int> defaultcalendarview
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("defaultcalendarview");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("defaultcalendarview", value);
			}
		}
		
		/// <summary>
		/// Text area to enter default country code.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultcountrycode")]
		public string defaultcountrycode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("defaultcountrycode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("defaultcountrycode", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the default dashboard.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultdashboardid")]
		public System.Nullable<System.Guid> defaultdashboardid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("defaultdashboardid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("defaultdashboardid", value);
			}
		}
		
		/// <summary>
		/// Default search experience for the user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultsearchexperience")]
		public virtual UserSettings_defaultsearchexperience? defaultsearchexperience
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((UserSettings_defaultsearchexperience?)(EntityOptionSetEnum.GetEnum(this, "defaultsearchexperience")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("defaultsearchexperience", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// This attribute is no longer used. The data is now in the Mailbox.Password attribute.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailpassword")]
		[System.ObsoleteAttribute()]
		public string emailpassword
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("emailpassword");
			}
		}
		
		/// <summary>
		/// This attribute is no longer used. The data is now in the Mailbox.UserName attribute.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailusername")]
		[System.ObsoleteAttribute()]
		public string emailusername
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("emailusername");
			}
		}
		
		/// <summary>
		/// Indicates the form mode to be used.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityformmode")]
		public virtual UserSettings_entityformmode? entityformmode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((UserSettings_entityformmode?)(EntityOptionSetEnum.GetEnum(this, "entityformmode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("entityformmode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Order in which names are to be displayed in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fullnameconventioncode")]
		public System.Nullable<int> fullnameconventioncode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("fullnameconventioncode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("fullnameconventioncode", value);
			}
		}
		
		/// <summary>
		/// Information that specifies whether the Get Started pane in lists is enabled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("getstartedpanecontentenabled")]
		public System.Nullable<bool> getstartedpanecontentenabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("getstartedpanecontentenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("getstartedpanecontentenabled", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the Help language.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("helplanguageid")]
		public System.Nullable<int> helplanguageid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("helplanguageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("helplanguageid", value);
			}
		}
		
		/// <summary>
		/// Web site home page for the user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("homepagearea")]
		public string homepagearea
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("homepagearea");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("homepagearea", value);
			}
		}
		
		/// <summary>
		/// Configuration of the home page layout.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("homepagelayout")]
		public string homepagelayout
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("homepagelayout");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("homepagelayout", value);
			}
		}
		
		/// <summary>
		/// Web site page for the user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("homepagesubarea")]
		public string homepagesubarea
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("homepagesubarea");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("homepagesubarea", value);
			}
		}
		
		/// <summary>
		/// Information that specifies whether a user account is to ignore unsolicited email (deprecated).
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ignoreunsolicitedemail")]
		public System.Nullable<bool> ignoreunsolicitedemail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ignoreunsolicitedemail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ignoreunsolicitedemail", value);
			}
		}
		
		/// <summary>
		/// Incoming email filtering method.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingemailfilteringmethod")]
		public virtual UserSettings_incomingemailfilteringmethod? incomingemailfilteringmethod
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((UserSettings_incomingemailfilteringmethod?)(EntityOptionSetEnum.GetEnum(this, "incomingemailfilteringmethod")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("incomingemailfilteringmethod", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Show or dismiss alert for Apps for 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isappsforcrmalertdismissed")]
		public System.Nullable<bool> isappsforcrmalertdismissed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isappsforcrmalertdismissed");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("isappsforcrmalertdismissed", value);
			}
		}
		
		/// <summary>
		/// Indicates whether to use the Auto Capture feature enabled or not.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isautodatacaptureenabled")]
		public System.Nullable<bool> isautodatacaptureenabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isautodatacaptureenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("isautodatacaptureenabled", value);
			}
		}
		
		/// <summary>
		/// Enable or disable country code selection .
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdefaultcountrycodecheckenabled")]
		public System.Nullable<bool> isdefaultcountrycodecheckenabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isdefaultcountrycodecheckenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("isdefaultcountrycodecheckenabled", value);
			}
		}
		
		/// <summary>
		/// Indicates if duplicate detection is enabled when going online.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isduplicatedetectionenabledwhengoingonline")]
		public System.Nullable<bool> isduplicatedetectionenabledwhengoingonline
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isduplicatedetectionenabledwhengoingonline");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("isduplicatedetectionenabledwhengoingonline", value);
			}
		}
		
		/// <summary>
		/// Enable or disable email conversation view on timeline wall selection.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isemailconversationviewenabled")]
		public System.Nullable<bool> isemailconversationviewenabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isemailconversationviewenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("isemailconversationviewenabled", value);
			}
		}
		
		/// <summary>
		/// Enable or disable guided help.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isguidedhelpenabled")]
		public System.Nullable<bool> isguidedhelpenabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isguidedhelpenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("isguidedhelpenabled", value);
			}
		}
		
		/// <summary>
		/// Indicates if the synchronization of user resource booking with Exchange is enabled at user level.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isresourcebookingexchangesyncenabled")]
		public System.Nullable<bool> isresourcebookingexchangesyncenabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isresourcebookingexchangesyncenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("isresourcebookingexchangesyncenabled", value);
			}
		}
		
		/// <summary>
		/// Indicates if send as other user privilege is enabled or not.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("issendasallowed")]
		public System.Nullable<bool> issendasallowed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("issendasallowed");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("issendasallowed", value);
			}
		}
		
		/// <summary>
		/// Shows the last time when the traces were read from the database.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastalertsviewedtime")]
		public System.Nullable<System.DateTime> lastalertsviewedtime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastalertsviewedtime");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("lastalertsviewedtime", value);
			}
		}
		
		/// <summary>
		/// Stores the timestamp for when the ViewPersonalizationSettings attribute was updated for this user in the UserEntityUISettings table.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastmodifiedtimeforviewpersonalizationsettings")]
		public System.Nullable<System.DateTime> lastmodifiedtimeforviewpersonalizationsettings
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastmodifiedtimeforviewpersonalizationsettings");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("lastmodifiedtimeforviewpersonalizationsettings", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user locale.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("localeid")]
		public System.Nullable<int> localeid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("localeid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("localeid", value);
			}
		}
		
		/// <summary>
		/// Information that specifies how Long Date is displayed throughout Microsoft 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("longdateformatcode")]
		public System.Nullable<int> longdateformatcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("longdateformatcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("longdateformatcode", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who last modified the user settings.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the user settings object was last modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> modifiedon
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who last modified the usersettings.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		/// <summary>
		/// Information that specifies how negative currency numbers are displayed in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("negativecurrencyformatcode")]
		public System.Nullable<int> negativecurrencyformatcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("negativecurrencyformatcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("negativecurrencyformatcode", value);
			}
		}
		
		/// <summary>
		/// Information that specifies how negative numbers are displayed in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("negativeformatcode")]
		public System.Nullable<int> negativeformatcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("negativeformatcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("negativeformatcode", value);
			}
		}
		
		/// <summary>
		/// Next tracking number.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("nexttrackingnumber")]
		public System.Nullable<int> nexttrackingnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("nexttrackingnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("nexttrackingnumber", value);
			}
		}
		
		/// <summary>
		/// Information that specifies how numbers are grouped in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("numbergroupformat")]
		public string numbergroupformat
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("numbergroupformat");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("numbergroupformat", value);
			}
		}
		
		/// <summary>
		/// Symbol used for number separation in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("numberseparator")]
		public string numberseparator
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("numberseparator");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("numberseparator", value);
			}
		}
		
		/// <summary>
		/// Normal polling frequency used for background offline synchronization in Microsoft Office Outlook.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("offlinesyncinterval")]
		public System.Nullable<int> offlinesyncinterval
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("offlinesyncinterval");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("offlinesyncinterval", value);
			}
		}
		
		/// <summary>
		/// Normal polling frequency used for record synchronization in Microsoft Office Outlook.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outlooksyncinterval")]
		public System.Nullable<int> outlooksyncinterval
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("outlooksyncinterval");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("outlooksyncinterval", value);
			}
		}
		
		/// <summary>
		/// Information that specifies how many items to list on a page in list views.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("paginglimit")]
		public System.Nullable<int> paginglimit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("paginglimit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("paginglimit", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("personalizationsettings")]
		public string personalizationsettings
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("personalizationsettings");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("personalizationsettings", value);
			}
		}
		
		/// <summary>
		/// PM designator to use in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pmdesignator")]
		public string pmdesignator
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("pmdesignator");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("pmdesignator", value);
			}
		}
		
		/// <summary>
		/// Preferred Solution when create a component without under a solution in this organization
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredsolution")]
		public Microsoft.Xrm.Sdk.EntityReference preferredsolution
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("preferredsolution");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("preferredsolution", value);
			}
		}
		
		/// <summary>
		/// Number of decimal places that can be used for prices.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pricingdecimalprecision")]
		[System.ObsoleteAttribute()]
		public System.Nullable<int> pricingdecimalprecision
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("pricingdecimalprecision");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("pricingdecimalprecision", value);
			}
		}
		
		/// <summary>
		/// Model app channel override
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("releasechannel")]
		public virtual UserSettings_releasechannel? releasechannel
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((UserSettings_releasechannel?)(EntityOptionSetEnum.GetEnum(this, "releasechannel")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("releasechannel", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Picklist for selecting the user preference for reporting scripting errors.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reportscripterrors")]
		public virtual UserSettings_reportscripterrors? reportscripterrors
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((UserSettings_reportscripterrors?)(EntityOptionSetEnum.GetEnum(this, "reportscripterrors")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("reportscripterrors", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// The version number for resource booking synchronization with Exchange.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resourcebookingexchangesyncversion")]
		public System.Nullable<long> resourcebookingexchangesyncversion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("resourcebookingexchangesyncversion");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("resourcebookingexchangesyncversion", value);
			}
		}
		
		/// <summary>
		/// Store selected customer service hub dashboard saved filter id.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("selectedglobalfilterid")]
		public System.Nullable<System.Guid> selectedglobalfilterid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("selectedglobalfilterid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("selectedglobalfilterid", value);
			}
		}
		
		/// <summary>
		/// Information that specifies whether to display the week number in calendar displays in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("showweeknumber")]
		public System.Nullable<bool> showweeknumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("showweeknumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("showweeknumber", value);
			}
		}
		
		/// <summary>
		/// For Internal use only
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("splitviewstate")]
		public System.Nullable<bool> splitviewstate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("splitviewstate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("splitviewstate", value);
			}
		}
		
		/// <summary>
		/// Indicates if the company field in Microsoft Office Outlook items are set during Outlook synchronization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("synccontactcompany")]
		public System.Nullable<bool> synccontactcompany
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("synccontactcompany");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("synccontactcompany", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("systemuserid")]
		public System.Nullable<System.Guid> systemuserid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("systemuserid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("systemuserid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("systemuserid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.systemuserid = value;
			}
		}
		
		/// <summary>
		/// The number of times a user has interacted with the Tabled Scoped Dataverse Search feature teaching bubble.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("tablescopeddvsearchfeatureteachingbubbleviews")]
		public System.Nullable<int> tablescopeddvsearchfeatureteachingbubbleviews
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("tablescopeddvsearchfeatureteachingbubbleviews");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("tablescopeddvsearchfeatureteachingbubbleviews", value);
			}
		}
		
		/// <summary>
		/// The number of times a user has interacted with the Tabled Scoped Dataverse Search Quick Find teaching bubble.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("tablescopeddvsearchquickfindteachingbubbleviews")]
		public System.Nullable<int> tablescopeddvsearchquickfindteachingbubbleviews
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("tablescopeddvsearchquickfindteachingbubbleviews");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("tablescopeddvsearchquickfindteachingbubbleviews", value);
			}
		}
		
		/// <summary>
		/// Information that specifies how the time is displayed in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timeformatcode")]
		public System.Nullable<int> timeformatcode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timeformatcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timeformatcode", value);
			}
		}
		
		/// <summary>
		/// Text for how time is displayed in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timeformatstring")]
		public string timeformatstring
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("timeformatstring");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timeformatstring", value);
			}
		}
		
		/// <summary>
		/// Text for how time is displayed in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timeseparator")]
		public string timeseparator
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("timeseparator");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timeseparator", value);
			}
		}
		
		/// <summary>
		/// Local time zone adjustment for the user. System calculated based on the time zone selected.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonebias")]
		public System.Nullable<int> timezonebias
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezonebias");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezonebias", value);
			}
		}
		
		/// <summary>
		/// Local time zone for the user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonecode")]
		public System.Nullable<int> timezonecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezonecode", value);
			}
		}
		
		/// <summary>
		/// Local time zone daylight adjustment for the user. System calculated based on the time zone selected.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonedaylightbias")]
		public System.Nullable<int> timezonedaylightbias
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezonedaylightbias");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezonedaylightbias", value);
			}
		}
		
		/// <summary>
		/// Local time zone daylight day for the user. System calculated based on the time zone selected.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonedaylightday")]
		public System.Nullable<int> timezonedaylightday
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezonedaylightday");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezonedaylightday", value);
			}
		}
		
		/// <summary>
		/// Local time zone daylight day of week for the user. System calculated based on the time zone selected in Options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonedaylightdayofweek")]
		public System.Nullable<int> timezonedaylightdayofweek
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezonedaylightdayofweek");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezonedaylightdayofweek", value);
			}
		}
		
		/// <summary>
		/// Local time zone daylight hour for the user. System calculated based on the time zone selected.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonedaylighthour")]
		public System.Nullable<int> timezonedaylighthour
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezonedaylighthour");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezonedaylighthour", value);
			}
		}
		
		/// <summary>
		/// Local time zone daylight minute for the user. System calculated based on the time zone selected.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonedaylightminute")]
		public System.Nullable<int> timezonedaylightminute
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezonedaylightminute");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezonedaylightminute", value);
			}
		}
		
		/// <summary>
		/// Local time zone daylight month for the user. System calculated based on the time zone selected.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonedaylightmonth")]
		public System.Nullable<int> timezonedaylightmonth
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezonedaylightmonth");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezonedaylightmonth", value);
			}
		}
		
		/// <summary>
		/// Local time zone daylight second for the user. System calculated based on the time zone selected.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonedaylightsecond")]
		public System.Nullable<int> timezonedaylightsecond
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezonedaylightsecond");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezonedaylightsecond", value);
			}
		}
		
		/// <summary>
		/// Local time zone daylight year for the user. System calculated based on the time zone selected.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonedaylightyear")]
		public System.Nullable<int> timezonedaylightyear
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezonedaylightyear");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezonedaylightyear", value);
			}
		}
		
		/// <summary>
		/// Local time zone standard time bias for the user. System calculated based on the time zone selected.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonestandardbias")]
		public System.Nullable<int> timezonestandardbias
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezonestandardbias");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezonestandardbias", value);
			}
		}
		
		/// <summary>
		/// Local time zone standard day for the user. System calculated based on the time zone selected.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonestandardday")]
		public System.Nullable<int> timezonestandardday
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezonestandardday");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezonestandardday", value);
			}
		}
		
		/// <summary>
		/// Local time zone standard day of week for the user. System calculated based on the time zone selected.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonestandarddayofweek")]
		public System.Nullable<int> timezonestandarddayofweek
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezonestandarddayofweek");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezonestandarddayofweek", value);
			}
		}
		
		/// <summary>
		/// Local time zone standard hour for the user. System calculated based on the time zone selected.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonestandardhour")]
		public System.Nullable<int> timezonestandardhour
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezonestandardhour");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezonestandardhour", value);
			}
		}
		
		/// <summary>
		/// Local time zone standard minute for the user. System calculated based on the time zone selected.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonestandardminute")]
		public System.Nullable<int> timezonestandardminute
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezonestandardminute");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezonestandardminute", value);
			}
		}
		
		/// <summary>
		/// Local time zone standard month for the user. System calculated based on the time zone selected.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonestandardmonth")]
		public System.Nullable<int> timezonestandardmonth
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezonestandardmonth");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezonestandardmonth", value);
			}
		}
		
		/// <summary>
		/// Local time zone standard second for the user. System calculated based on the time zone selected.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonestandardsecond")]
		public System.Nullable<int> timezonestandardsecond
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezonestandardsecond");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezonestandardsecond", value);
			}
		}
		
		/// <summary>
		/// Local time zone standard year for the user. System calculated based on the time zone selected.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonestandardyear")]
		public System.Nullable<int> timezonestandardyear
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezonestandardyear");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezonestandardyear", value);
			}
		}
		
		/// <summary>
		/// Tracking token ID.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("trackingtokenid")]
		public System.Nullable<int> trackingtokenid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("trackingtokenid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("trackingtokenid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the default currency of the user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference transactioncurrencyid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		/// <summary>
		/// The list of app modules with try toggle sets
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("trytogglesets")]
		public string trytogglesets
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("trytogglesets");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("trytogglesets", value);
			}
		}
		
		/// <summary>
		/// Enable or disable try toggle status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("trytogglestatus")]
		public System.Nullable<bool> trytogglestatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("trytogglestatus");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("trytogglestatus", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the language in which to view the user interface (UI).
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("uilanguageid")]
		public System.Nullable<int> uilanguageid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("uilanguageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("uilanguageid", value);
			}
		}
		
		/// <summary>
		/// Indicates whether to use the Microsoft Dynamics 365 appointment form within Microsoft Office Outlook for creating new appointments.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usecrmformforappointment")]
		public System.Nullable<bool> usecrmformforappointment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("usecrmformforappointment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("usecrmformforappointment", value);
			}
		}
		
		/// <summary>
		/// Indicates whether to use the Microsoft Dynamics 365 contact form within Microsoft Office Outlook for creating new contacts.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usecrmformforcontact")]
		public System.Nullable<bool> usecrmformforcontact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("usecrmformforcontact");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("usecrmformforcontact", value);
			}
		}
		
		/// <summary>
		/// Indicates whether to use the Microsoft Dynamics 365 email form within Microsoft Office Outlook for creating new emails.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usecrmformforemail")]
		public System.Nullable<bool> usecrmformforemail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("usecrmformforemail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("usecrmformforemail", value);
			}
		}
		
		/// <summary>
		/// Indicates whether to use the Microsoft Dynamics 365 task form within Microsoft Office Outlook for creating new tasks.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usecrmformfortask")]
		public System.Nullable<bool> usecrmformfortask
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("usecrmformfortask");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("usecrmformfortask", value);
			}
		}
		
		/// <summary>
		/// Indicates whether image strips are used to render images.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("useimagestrips")]
		public System.Nullable<bool> useimagestrips
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("useimagestrips");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("useimagestrips", value);
			}
		}
		
		/// <summary>
		/// Specifies user profile ids in comma separated list.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("userprofile")]
		public string userprofile
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("userprofile");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("userprofile", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> versionnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// The layout of the visualization pane.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("visualizationpanelayout")]
		public virtual UserSettings_visualizationpanelayout? visualizationpanelayout
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((UserSettings_visualizationpanelayout?)(EntityOptionSetEnum.GetEnum(this, "visualizationpanelayout")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("visualizationpanelayout", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Workday start time for the user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("workdaystarttime")]
		public string workdaystarttime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("workdaystarttime");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("workdaystarttime", value);
			}
		}
		
		/// <summary>
		/// Workday stop time for the user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("workdaystoptime")]
		public string workdaystoptime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("workdaystoptime");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("workdaystoptime", value);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public UserSettings(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["systemuserid"] = base.Id;
                        break;
                    case "systemuserid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}
#pragma warning restore CS1591
