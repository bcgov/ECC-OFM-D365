#pragma warning disable CS1591
// Code Generated by DLaB.ModelBuilderExtensions
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: Microsoft.Xrm.Sdk.Client.ProxyTypesAssemblyAttribute()]

namespace ECC.Core.DataContext
{
	
	
	/// <summary>
	/// Represents a source of entities bound to a Dataverse service. It tracks and manages changes made to the retrieved entities.
	/// </summary>
	public partial class DataverseContext : Microsoft.Xrm.Sdk.Client.OrganizationServiceContext
	{
		
		/// <summary>
		/// Constructor.
		/// </summary>
		public DataverseContext(Microsoft.Xrm.Sdk.IOrganizationService service) : 
				base(service)
		{
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="ECC.Core.DataContext.Account"/> entities.
		/// </summary>
		public System.Linq.IQueryable<ECC.Core.DataContext.Account> AccountSet
		{
			get
			{
				return this.CreateQuery<ECC.Core.DataContext.Account>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="ECC.Core.DataContext.BusinessUnit"/> entities.
		/// </summary>
		public System.Linq.IQueryable<ECC.Core.DataContext.BusinessUnit> BusinessUnitSet
		{
			get
			{
				return this.CreateQuery<ECC.Core.DataContext.BusinessUnit>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="ECC.Core.DataContext.Contact"/> entities.
		/// </summary>
		public System.Linq.IQueryable<ECC.Core.DataContext.Contact> ContactSet
		{
			get
			{
				return this.CreateQuery<ECC.Core.DataContext.Contact>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="ECC.Core.DataContext.Email"/> entities.
		/// </summary>
		public System.Linq.IQueryable<ECC.Core.DataContext.Email> EmailSet
		{
			get
			{
				return this.CreateQuery<ECC.Core.DataContext.Email>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="ECC.Core.DataContext.ofm_application"/> entities.
		/// </summary>
		public System.Linq.IQueryable<ECC.Core.DataContext.ofm_application> ofm_applicationSet
		{
			get
			{
				return this.CreateQuery<ECC.Core.DataContext.ofm_application>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="ECC.Core.DataContext.ofm_assistance_request"/> entities.
		/// </summary>
		public System.Linq.IQueryable<ECC.Core.DataContext.ofm_assistance_request> ofm_assistance_requestSet
		{
			get
			{
				return this.CreateQuery<ECC.Core.DataContext.ofm_assistance_request>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="ECC.Core.DataContext.ofm_bceid_facility"/> entities.
		/// </summary>
		public System.Linq.IQueryable<ECC.Core.DataContext.ofm_bceid_facility> ofm_bceid_facilitySet
		{
			get
			{
				return this.CreateQuery<ECC.Core.DataContext.ofm_bceid_facility>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="ECC.Core.DataContext.ofm_cclr_ratio"/> entities.
		/// </summary>
		public System.Linq.IQueryable<ECC.Core.DataContext.ofm_cclr_ratio> ofm_cclr_ratioSet
		{
			get
			{
				return this.CreateQuery<ECC.Core.DataContext.ofm_cclr_ratio>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="ECC.Core.DataContext.ofm_communication_type"/> entities.
		/// </summary>
		public System.Linq.IQueryable<ECC.Core.DataContext.ofm_communication_type> ofm_communication_typeSet
		{
			get
			{
				return this.CreateQuery<ECC.Core.DataContext.ofm_communication_type>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="ECC.Core.DataContext.ofm_conversation"/> entities.
		/// </summary>
		public System.Linq.IQueryable<ECC.Core.DataContext.ofm_conversation> ofm_conversationSet
		{
			get
			{
				return this.CreateQuery<ECC.Core.DataContext.ofm_conversation>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="ECC.Core.DataContext.ofm_document"/> entities.
		/// </summary>
		public System.Linq.IQueryable<ECC.Core.DataContext.ofm_document> ofm_documentSet
		{
			get
			{
				return this.CreateQuery<ECC.Core.DataContext.ofm_document>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="ECC.Core.DataContext.ofm_facility_request"/> entities.
		/// </summary>
		public System.Linq.IQueryable<ECC.Core.DataContext.ofm_facility_request> ofm_facility_requestSet
		{
			get
			{
				return this.CreateQuery<ECC.Core.DataContext.ofm_facility_request>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="ECC.Core.DataContext.ofm_fiscal_year"/> entities.
		/// </summary>
		public System.Linq.IQueryable<ECC.Core.DataContext.ofm_fiscal_year> ofm_fiscal_yearSet
		{
			get
			{
				return this.CreateQuery<ECC.Core.DataContext.ofm_fiscal_year>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="ECC.Core.DataContext.ofm_funding"/> entities.
		/// </summary>
		public System.Linq.IQueryable<ECC.Core.DataContext.ofm_funding> ofm_fundingSet
		{
			get
			{
				return this.CreateQuery<ECC.Core.DataContext.ofm_funding>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="ECC.Core.DataContext.ofm_funding_rate"/> entities.
		/// </summary>
		public System.Linq.IQueryable<ECC.Core.DataContext.ofm_funding_rate> ofm_funding_rateSet
		{
			get
			{
				return this.CreateQuery<ECC.Core.DataContext.ofm_funding_rate>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="ECC.Core.DataContext.ofm_licence"/> entities.
		/// </summary>
		public System.Linq.IQueryable<ECC.Core.DataContext.ofm_licence> ofm_licenceSet
		{
			get
			{
				return this.CreateQuery<ECC.Core.DataContext.ofm_licence>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="ECC.Core.DataContext.ofm_licence_detail"/> entities.
		/// </summary>
		public System.Linq.IQueryable<ECC.Core.DataContext.ofm_licence_detail> ofm_licence_detailSet
		{
			get
			{
				return this.CreateQuery<ECC.Core.DataContext.ofm_licence_detail>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="ECC.Core.DataContext.ofm_rate_schedule"/> entities.
		/// </summary>
		public System.Linq.IQueryable<ECC.Core.DataContext.ofm_rate_schedule> ofm_rate_scheduleSet
		{
			get
			{
				return this.CreateQuery<ECC.Core.DataContext.ofm_rate_schedule>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="ECC.Core.DataContext.ofm_request_category"/> entities.
		/// </summary>
		public System.Linq.IQueryable<ECC.Core.DataContext.ofm_request_category> ofm_request_categorySet
		{
			get
			{
				return this.CreateQuery<ECC.Core.DataContext.ofm_request_category>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="ECC.Core.DataContext.SystemUser"/> entities.
		/// </summary>
		public System.Linq.IQueryable<ECC.Core.DataContext.SystemUser> SystemUserSet
		{
			get
			{
				return this.CreateQuery<ECC.Core.DataContext.SystemUser>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="ECC.Core.DataContext.Team"/> entities.
		/// </summary>
		public System.Linq.IQueryable<ECC.Core.DataContext.Team> TeamSet
		{
			get
			{
				return this.CreateQuery<ECC.Core.DataContext.Team>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="ECC.Core.DataContext.TimeZoneDefinition"/> entities.
		/// </summary>
		public System.Linq.IQueryable<ECC.Core.DataContext.TimeZoneDefinition> TimeZoneDefinitionSet
		{
			get
			{
				return this.CreateQuery<ECC.Core.DataContext.TimeZoneDefinition>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="ECC.Core.DataContext.UserSettings"/> entities.
		/// </summary>
		public System.Linq.IQueryable<ECC.Core.DataContext.UserSettings> UserSettingsSet
		{
			get
			{
				return this.CreateQuery<ECC.Core.DataContext.UserSettings>();
			}
		}
	}
	
	/// <summary>
	/// Attribute to handle storing the OptionSet's Metadata.
	/// </summary>
	[System.AttributeUsageAttribute(System.AttributeTargets.Field)]
	public sealed class OptionSetMetadataAttribute : System.Attribute
	{
		
		/// <summary>
		/// Color of the OptionSetValue.
		/// </summary>
		public string Color { get; set; }
		
		/// <summary>
		/// Description of the OptionSetValue.
		/// </summary>
		public string Description { get; set; }
		
		/// <summary>
		/// Display order index of the OptionSetValue.
		/// </summary>
		public int DisplayIndex { get; set; }
		
		/// <summary>
		/// External value of the OptionSetValue.
		/// </summary>
		public string ExternalValue { get; set; }
		
		/// <summary>
		/// Name of the OptionSetValue.
		/// </summary>
		public string Name { get; set; }
		
		/// <summary>
		/// Initializes a new instance of the <see cref="OptionSetMetadataAttribute"/> class.
		/// </summary>
		/// <param name="name">Name of the value.</param>
		/// <param name="displayIndex">Display order index of the value.</param>
		/// <param name="color">Color of the value.</param>
		/// <param name="description">Description of the value.</param>
		/// <param name="externalValue">External value of the value.</param>
		public OptionSetMetadataAttribute(string name, int displayIndex, string color = null, string description = null, string externalValue = null)
		{
			this.Color = color;
			this.Description = description;
			this.ExternalValue = externalValue;
			this.DisplayIndex = displayIndex;
			this.Name = name;
		}
	}
	
	/// <summary>
	/// Extension class to handle retrieving of OptionSetMetadataAttribute.
	/// </summary>
	public static class OptionSetExtension
	{
		
		/// <summary>
		/// Returns the OptionSetMetadataAttribute for the given enum value
		/// </summary>
		/// <typeparam name="T">OptionSet Enum Type</typeparam>
		/// <param name="value">Enum Value with OptionSetMetadataAttribute</param>
		public static OptionSetMetadataAttribute GetMetadata<T>(this T value)
			where T :  struct, System.IConvertible
		{
			System.Type enumType = typeof(T);
			if (!enumType.IsEnum)
			{
				throw new System.ArgumentException("T must be an enum!");
			}
			System.Reflection.MemberInfo[] members = enumType.GetMember(value.ToString());
			for (int i = 0; (i < members.Length); i++
			)
			{
				System.Attribute attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(members[i], typeof(OptionSetMetadataAttribute));
				if (attribute != null)
				{
					return ((OptionSetMetadataAttribute)(attribute));
				}
			}
			throw new System.ArgumentException("T must be an enum adorned with an OptionSetMetadataAttribute!");
		}
	}
}
#pragma warning restore CS1591
